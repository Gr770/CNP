Global Promotes = {
	ACTIVE_COUNCIL_TASK -> ActiveCouncilTask
	ACTIVITY -> Activity
	ACTOR -> Character
	ARMY -> Army
	ARMY_REGIMENT -> ArmyRegiment
	ARTIFACT -> Artifact
	ATTACKER -> Character
	AccessCouncilWindow -> CouncilWindow
	AccessCourtWindow -> CourtWindow
	AccessGameRules -> JominiGameRules
	AccessLocalPlayerCachedData -> LocalPlayerCachedData
	AccessLogViewer -> LogViewer
	AccessMessageFeedHandler -> MessageFeedHandler
	AccessMyRealmWindow -> MyRealmWindow
	AccessTopBar -> InGameTopbar
	Application -> Application
	BOOKMARK_CHARACTER -> BookmarkCharacter
	BUILDING -> Building
	CHARACTER -> Character
	CLAIMANT -> Character
	COUNCIL_POSITION_TYPE -> CouncilPositionType
	COUNCIL_TASK -> ActiveCouncilTask
	COUNCIL_TASK_TYPE -> CouncilTaskType
	COUNTY -> County
	COURT_POSITION -> CourtPosition
	COURT_POSITION_TYPE -> CourtPositionType
	CULTURE -> Culture
	CULTURE_PILLAR -> CulturePillar
	CULTURE_TRADITION -> CultureTradition
	DATE -> Date
	DATE_MAX -> Date
	DATE_MIN -> Date
	DEFENDER -> Characte
	DYNASTY -> Dynasty
	DYNASTY_HOUSE -> DynastyHouse
	DYNASTY_LEGACY -> DynastyLegacy
	DYNASTY_PERK -> DynastyPerk
	ERA -> CultureEra
	EmptyScope -> TopScope
	FACTION -> Faction
	FAITH -> Faith
	FAITH_DOCTRINE -> FaithDoctrine
	FOCUS -> FocusType
	GAME_RULE -> GameRule
	GAME_RULE_SETTING -> GameRuleSetting
	GOVERNMENT -> GovernmentType
	GOVERNMENT_TYPE -> GovernmentType
	GREAT_HOLY_WAR -> GreatHolyWar
	GetActivityType -> ActivityType
	GetArtifactType -> ArtifactType
	GetArtifactVisualType -> ArtifactVisualType
	GetBookmark -> Bookmark
	GetBookmarkPortrait -> BookmarkPortrait
	GetBuilding -> Building
	GetCasusBelliType -> CasusBelliType
	GetCharacterInteraction -> CharacterInteraction
	GetCharacterInteractionCategory -> CharacterInteractionCategory
	GetCharacterInteractionCategoryByIndex -> CharacterInteractionCategory
	GetCombatEffect -> CombatEffect
	GetCouncilPositionType -> CouncilPositionType
	GetCouncilTaskType -> CouncilTaskType
	GetCourtAmenitiesSetting -> CourtAmenitiesSetting
	GetCourtGrandeurDiffFromExpectedLevelModifier -> StaticModifier
	GetCourtGrandeurLevelModifier -> StaticModifier
	GetCourtPositionCategory -> CourtPositionCategory
	GetCourtPositionType -> CourtPositionType
	GetCourtType -> CourtType
	GetCultureEraType -> CultureEraType
	GetCultureInnovationType -> CultureInnovationType
	GetCulturePillar -> CulturePillar
	GetCultureTemplate -> CultureTemplate
	GetCultureTradition -> CultureTradition
	GetCurrentDate -> Date
	GetDecision -> Decision
	GetDecisionWithKey -> Decision
	GetDeepestTooltipInfo -> TooltipInfo
	GetDoctrine -> FaithDoctrine
	GetDynastyByID -> Dynasty
	GetDynastyHouseByID -> DynastyHouse
	GetDynastyLegacy -> DynastyLegacy
	GetDynastyPerk -> DynastyPerk
	GetDynastyTemplate -> DynastyTemplate
	GetFaithByKey -> Faith
	GetFaithDoctrine -> FaithDoctrine
	GetFaithDoctrineGroup -> FaithDoctrineGroup
	GetFocus -> FocusType
	GetFocusType -> FocusType
	GetGameRules -> JominiGameRules
	GetGeographicalRegion -> GeographicalRegion
	GetGlobalVariable -> Scope
	GetGovernment -> GovernmentType
	GetGovernmentType -> GovernmentType
	GetHoldingType -> HoldingType
	GetHolySite -> HolySite
	GetIllustration -> Illustration
	GetImportantActionType -> ImportantActionType
	GetInspirationType -> InspirationType
	GetInventorySlotType -> InventorySlotType
	GetLandedTitpleTemplate -> LandedTitpleTemplate
	GetLaw -> Law
	GetLawGroup -> LawGroup
	GetLifestyle -> Lifestyle
	GetMaA -> MenAtArmsType
	GetMenAtArmsType -> MenAtArmsType
	GetMessageFeedHandler -> MessageFeedHandler
	GetMessageType -> MessageType
	GetModifier -> StaticModifier
	GetNickname -> Nickname
	GetNullCharacter -> Character
	GetPerk -> Perk
	GetPlayer -> Character
	GetPlayerArmyComposition -> ArmyComposition
	GetRelation -> ScriptedRelation
	GetReligionByKey -> Religion
	GetReligionFamily -> ReligionFamily
	GetRoyalCourtHoveredArtifact -> Artifact
	GetRoyalCourtHoveredCharacter -> Character
	GetRoyalCourtSelectedArtifact -> Artifact
	GetRoyalCourtSelectedCharacter -> Character
	GetScheme -> SchemeType
	GetSchemeType -> SchemeType
	GetScriptedCharacterByHistoryID -> Character
	GetScriptedGui -> ScriptedGui
	GetScriptedRelation -> ScriptedRelation
	GetSecretType -> SecretType
	GetServerInfo -> ServerInformation
	GetStaticModifier -> StaticModifier
	GetSuggestionType -> SuggestionType
	GetTerrain -> Terrain
	GetTitleByKey -> Title
	GetTrait -> Trait
	GetTraitForIndex -> Trait
	GetTraitGroup -> TraitGroup
	GetTutorial -> Tutorial
	GetVariableSystem -> VariableSystem
	GetVassalContractType -> VassalContractType
	GuiEditor -> GuiEditor
	GuiScope -> TopScope
	HISTORY_ENTRY -> HistoryEntry
	HOLDING -> Holding
	HOLDING_TYPE -> HoldingType
	HOLY_ORDER -> HolyOrder
	HOOK -> Hook
	IMPORTANT_ACTION_ITEM -> ImportantActionItem
	INNOVATION -> CultureInnovation
	INSPIRATION -> Inspiration
	JominiPlayer -> Playable
	LAW -> Law
	LEFT_ARTIFACT -> Artifact
	LEFT_CHARACTER -> Character
	LEFT_TITLE -> Title
	LIFESTYLE -> Lifestyle
	MEN_AT_ARMS_TYPE -> MenAtArmsType
	MEN_AT_ARMS_TYPE_2 -> MenAtArmsType
	MERCENARY -> MercenaryCompany
	MODIFIER_ITEM -> ModifierItem
	PERK -> Perk
	PREV -> Scope
	PROVINCE -> Province
	RECIPIENT -> Character
	REGIMENT -> Regiment
	RELATION -> ScriptedRelation
	RELIGION -> Religion
	RIGHT_ARTIFACT -> Artifact
	RIGHT_CHARACTER -> Character
	RIGHT_TITLE -> Title
	ROOT -> Scope
	SCHEME -> Scheme
	SCOPE -> TopScope
	SECONDARY_ACTOR -> Character
	SECONDARY_RECIPIENT -> Character
	SECRET -> Secret
	SIEGE -> Siege
	TARGET_ARMY -> Army
	TARGET_CHARACTER -> Character
	TARGET_CHARACTER_2 -> Character
	TARGET_CULTURE -> Culture
	TARGET_FAITH -> Faith
	TARGET_FAITH_2 -> Faith
	TARGET_LAW -> Law
	TARGET_TITLE -> Title
	THIS -> Scope
	TITLE -> Title
	TITLE_2 -> Title
	TOKEN_PARAMETER -> TokenParameter
	TRAIT -> Trait
	TRAIT_2 -> Trait
	TRAIT_GROUP -> TraitGroup
	TRAIT_GROUP_2 -> TraitGroup
	TUTORIAL -> Tutorial
	WAR -> War
}

Global Functions = {
	AIWatchWindowsEnabled -> bool
	Abs_CFixedPoint -> CFixedPoint
	Abs_float -> float
	Abs_int32 -> int32
	AccessLocalPlayerCachedData -> [unregistered]
	AccessMapEditorLayerBorders -> [unregistered]
	AccessSuggestionItems -> [unregistered]
	AccessTopBar -> [unregistered]
	AddLocalizationIf -> CString
	AddTextIf -> CString
	AddWatchWindow -> void
	Add_CFixedPoint -> CFixedPoint
	Add_CVector2f -> CVector2f
	Add_float -> float
	Add_int32 -> int32
	Add_uint32 -> uint32
	And -> bool
	AreAchievementsAvailable -> bool
	BindFoldOutContext -> void
	BoolTo1And2 -> int32
	BoolTo2And1 -> int32
	CalcResolutionLimitAspectRatio -> CVector2f
	CalculateBreakdownItems -> [unregistered]
	CanAnyoneUnpause -> bool
	CanChangeMapMode -> bool
	CanDecreaseGameSpeed -> bool
	CanEditSettingsAfterHost -> bool
	CanGetAchievements -> bool
	CanIncreaseGameSpeed -> bool
	CanOpenLobby -> bool
	ClearErrorLog -> void
	ClearExploringRealms -> void
	ClearHostError -> void
	ClearObserver -> void
	ClearResetReactiveTutorialPopup -> void
	CloseAllTooltips -> void
	CloseGameView -> void
	ConcatIfNeitherEmpty -> CString
	Concatenate -> CString
	Concept -> CString
	CopyBuildVersionInfoToClipboard -> void
	CopyServerID -> void
	CurrentAndMaxToProgressbarValueInt32 -> float
	DataModelHasItems -> bool
	DefaultOnCharacterClick -> void
	DefaultOnCharacterRightClick -> void
	DefaultOnCoatOfArmsClick -> void
	DefaultOnCoatOfArmsRightClick -> void
	DefaultOnCultureClick -> void
	DefaultOnDynastyCoatOfArmsClick -> void
	DefaultOnDynastyTreeCoatOfArmsClick -> void
	DefaultOnFaithClick -> void
	DefaultOnHouseCoatOfArmsClick -> void
	DefaultOnRaidClick -> void
	DefaultOnRealmFlagClick -> void
	DefaultOnRealmFlagRightClick -> void
	DefaultOnSiegeClick -> void
	DoubleToFloat -> float
	EqualTo_CFixedPoint -> bool
	EqualTo_CVector2f -> bool
	EqualTo_float -> bool
	EqualTo_int32 -> bool
	EqualTo_string -> bool
	EqualTo_uint32 -> bool
	ErrorTooltip -> CString
	ExecuteConsoleCommand -> void
	FixedPointToFloat -> float
	FixedPointToInt -> int32
	FixedPointToProgressbarValue -> float
	GameHasMultiplePlayers -> bool
	GameIsMultiplayer -> bool
	GameOverDesc -> CString
	GetAbsoluteMousePosition -> CVector2f
	GetAbsoluteMousePositionInteger -> CVector2i
	GetAchievementsAvailableString -> CString
	GetActivityType -> [unregistered]
	GetAllCourtPositionCategories -> [unregistered]
	GetAnimatedBookmarkPortrait -> [unregistered]
	GetArtifactType -> [unregistered]
	GetArtifactVisualType -> [unregistered]
	GetAutosaveName -> CUTF8String
	GetBookmark -> [unregistered]
	GetBookmarkPortrait -> [unregistered]
	GetBuildVersionDescription -> CString
	GetBuildVersionDescriptionWithClickToCopy -> CString
	GetBuilding -> [unregistered]
	GetCanGoToFrontend -> bool
	GetCanGoToFrontendDesc -> CString
	GetCasusBelliType -> [unregistered]
	GetCharacterInteraction -> [unregistered]
	GetCharacterInteractionCategory -> [unregistered]
	GetCoatOfArmsDesignerEmblemTextureCategories -> [unregistered]
	GetCombatEffect -> [unregistered]
	GetCouncilPositionType -> [unregistered]
	GetCouncilTaskType -> [unregistered]
	GetCourtAmenitiesSetting -> [unregistered]
	GetCourtGrandeurDiffFromExpectedLevelModifier -> [unregistered]
	GetCourtGrandeurLevelModifier -> [unregistered]
	GetCourtPositionCategory -> [unregistered]
	GetCourtPositionType -> [unregistered]
	GetCourtScenePositionForSlot -> CVector2f
	GetCourtType -> [unregistered]
	GetCourtTypeTraits -> [unregistered]
	GetCreditPortraitsForGroup -> [unregistered]
	GetCultureEraType -> [unregistered]
	GetCultureInnovationType -> [unregistered]
	GetCulturePillar -> [unregistered]
	GetCultureTemplate -> [unregistered]
	GetCultureTradition -> [unregistered]
	GetCurrentDateStringWithSyncInfo -> CString
	GetCurrentDateWithDiff -> CString
	GetCurrentDateWithDiffLong -> CString
	GetCurrentDateWithDiffShort -> CString
	GetCurrentFps -> float
	GetCurrentGameSpeed -> int32
	GetCurrentGameSpeedText -> CString
	GetCurrentLoadingScreen -> [unregistered]
	GetDataModelSize -> int32
	GetDecision -> [unregistered]
	GetDecreaseSpeedTooltip -> CString
	GetDefaultServerName -> CUTF8String
	GetDefine -> [unregistered]
	GetDefineAtIndex -> [unregistered]
	GetDisbandAllTooltip -> CString
	GetDynastyLegacy -> [unregistered]
	GetDynastyPerk -> [unregistered]
	GetDynastyPrestigeLevelEffect -> CString
	GetDynastyPrestigeLevelName -> CString
	GetDynastyPrestigeLevelNext -> CString
	GetDynastyTemplate -> [unregistered]
	GetEducationTraits -> [unregistered]
	GetEnumIndex -> CVector2i
	GetErrorHoofFrame -> int32
	GetEthnicities -> [unregistered]
	GetFaithDoctrine -> [unregistered]
	GetFaithDoctrineGroup -> [unregistered]
	GetFertility -> CFixedPoint
	GetFertilityLevel -> CString
	GetFocusType -> [unregistered]
	GetGameTimeDifferenceForDiffDays -> CString
	GetGameTimeDifferenceForDiffMonths -> CString
	GetGameTimeDurationDays -> CString
	GetGameTimeDurationMonths -> CString
	GetGameVersionDisplay -> CString
	GetGameVersionInfo -> CString
	GetGameVersionInfoShort -> CString
	GetGeographicalRegion -> [unregistered]
	GetGlobalList -> [unregistered]
	GetGlobalVariable -> [unregistered]
	GetGovernment -> [unregistered]
	GetGovernmentType -> [unregistered]
	GetGuiPositionFromPercentCoordinates -> [unregistered]
	GetHighlightTint -> CVector4f
	GetHoldingType -> [unregistered]
	GetHolySite -> [unregistered]
	GetHostError -> CUTF8String
	GetHostilityDescription -> CString
	GetHostilityLevelName -> CString
	GetIllustration -> [unregistered]
	GetImportantActionType -> [unregistered]
	GetIncreaseSpeedTooltip -> CString
	GetInspirationType -> [unregistered]
	GetInvParentScale -> float
	GetInventorySlotType -> [unregistered]
	GetInventorySlotTypes -> [unregistered]
	GetIsChecked -> bool
	GetKnightCount -> int32
	GetKnightLimit -> int32
	GetKnightLimitBreakdown -> CString
	GetLaggingPlayerName -> CString
	GetLandedTitpleTemplate -> [unregistered]
	GetLaw -> [unregistered]
	GetLawGroup -> [unregistered]
	GetLeadingTroopsBonus -> CString
	GetLifestyle -> [unregistered]
	GetLifestyleTooltipForCharacter -> CString
	GetLifestyleTooltipWarnings -> CString
	GetLoadTip -> CString
	GetLoadedMods -> CString
	GetLocalPlayerPietyTextIcon -> CString
	GetLocalizedDefine -> CString
	GetLocalizedDefineAtIndex -> CString
	GetMPChecksum -> CString
	GetMaxStress -> int32
	GetMenAtArmsType -> [unregistered]
	GetMessageType -> [unregistered]
	GetModifier -> [unregistered]
	GetNickname -> [unregistered]
	GetNullCharacter -> [unregistered]
	GetNullCharacterDataModel -> [unregistered]
	GetNullProperty -> [unregistered]
	GetNumberAbove_int32 -> int32
	GetOpenLobbyTooltip -> CString
	GetOtherRulerDesignerTraits -> [unregistered]
	GetPausedBy -> CString
	GetPausedByEventReason -> CString
	GetPerk -> [unregistered]
	GetPersonalityTraits -> [unregistered]
	GetPietyLevelDesc -> CString
	GetPietyLevelIcon -> [unregistered]
	GetPietyLevelName -> CString
	GetPlayer -> [unregistered]
	GetPlayerArmyComposition -> [unregistered]
	GetPlayerBalance -> CFixedPoint
	GetPlayerRaiseAllMenAtArmsTooltip -> CString
	GetPlayerRaiseAllRaidersTooltip -> CString
	GetPlayerRaiseAllTooltip -> CString
	GetPlayersCount -> int32
	GetPortraitTextureFromDna -> [unregistered]
	GetPrestigeLevelDesc -> CString
	GetPrestigeLevelIcon -> [unregistered]
	GetPrestigeLevelName -> CString
	GetProgressBarValueMax -> int32
	GetProgressBarValueMaxOther -> int32
	GetProgressBarValueMaxOtherScaled -> int32
	GetProgressBarValueMaxScaled -> int32
	GetProgressBarValuePair -> int32
	GetRandomFrontendIllustration -> [unregistered]
	GetRandomLogInfo -> CString
	GetRelation -> [unregistered]
	GetReligionFamily -> [unregistered]
	GetResolutionWithAspectRatio -> CVector2f
	GetRoyalCourtHoveredArtifact -> [unregistered]
	GetRoyalCourtHoveredCharacter -> [unregistered]
	GetRoyalCourtSelectedArtifact -> [unregistered]
	GetRoyalCourtSelectedCharacter -> [unregistered]
	GetSceneSettingsName -> CString
	GetSchemeType -> [unregistered]
	GetScriptedRelation -> [unregistered]
	GetSecretType -> [unregistered]
	GetSegmentedProgressBar -> [unregistered]
	GetSmartBrushInterpolationNames -> [unregistered]
	GetSmartBrushPatternNames -> [unregistered]
	GetStaticModifier -> [unregistered]
	GetStringSettingText -> CString
	GetString_CPdxFloatRect -> CString
	GetString_CPdxIntRect -> CString
	GetString_CVector2f -> CString
	GetString_CVector2i -> CString
	GetString_CVector3f -> CString
	GetString_CVector3i -> CString
	GetString_CVector4f -> CString
	GetString_CVector4i -> CString
	GetSuggestionType -> [unregistered]
	GetTerrain -> [unregistered]
	GetTimeAnyoneUnpause -> int32
	GetTimeDifferenceWithDays -> CString
	GetTrait -> [unregistered]
	GetTraitGroup -> [unregistered]
	GetTraits -> [unregistered]
	GetTraitsWithFlag -> [unregistered]
	GetTraitsWithoutFlag -> [unregistered]
	GetVarTimeRemaining -> int32
	GetVassalContractType -> [unregistered]
	GetViewHistoryTooltip -> CString
	GetZoomLevel -> int32
	GfxGetSkins -> [unregistered]
	GfxSetActiveSkin -> void
	GfxSkinIsActive -> bool
	GoToFrontend -> void
	GreaterThanOrEqualTo_CFixedPoint -> bool
	GreaterThanOrEqualTo_float -> bool
	GreaterThanOrEqualTo_int32 -> bool
	GreaterThanOrEqualTo_uint32 -> bool
	GreaterThan_CFixedPoint -> bool
	GreaterThan_float -> bool
	GreaterThan_int32 -> bool
	GreaterThan_uint32 -> bool
	HasCharacterInteractionCategory -> bool
	HasDlcFeature -> bool
	HasErrors -> bool
	HasGameStartedForTheFirstTime -> bool
	HasHostError -> bool
	HasLoadedMods -> bool
	HasOpenResetReactiveTutorialPopup -> bool
	HasViewHistory -> bool
	InDebugMode -> bool
	InReleaseMode -> bool
	IntToFixedPoint -> float
	IntToFloat -> float
	IntToFrameIndex -> int32
	IntToUnsigned -> float
	IsAutoSaving -> bool
	IsBottomLeftWindowOpen -> bool
	IsBottomWindowOpen -> bool
	IsBuildDebug -> bool
	IsCameraRestrictionsEnabled -> bool
	IsCenterWindowOpen -> bool
	IsContractBlockedFromBeingModified -> bool
	IsContractBlockedFromBeingModifiedText -> CString
	IsDataModelEmpty -> bool
	IsDefaultGUIMode -> bool
	IsDesignatedHeir -> bool
	IsExploringRealms -> bool
	IsFullScreenWindowOpen -> bool
	IsGameChecksumOk -> bool
	IsGameOver -> bool
	IsGamePaused -> bool
	IsGameViewOpen -> bool
	IsHolyOrderDetailViewShown -> bool
	IsHost -> bool
	IsInGame -> bool
	IsInteractionConfirmationWindowOpen -> bool
	IsInteractionMenuOpenForCharacter -> bool
	IsIronmanEnabled -> bool
	IsLeftWindowOpen -> bool
	IsMachineRulerDesigning -> bool
	IsManuallyPaused -> bool
	IsMapInteractionConfirmationWindowOpen -> bool
	IsMapMode -> bool
	IsMercenaryCompanyDetailViewShown -> bool
	IsObserver -> bool
	IsOverviewWindowOpen -> bool
	IsPauseMenuShown -> bool
	IsPausedByEvent -> bool
	IsPausedByMe -> bool
	IsPreparationLobby -> bool
	IsRightSubwindowOpen -> bool
	IsRightWindowNoSidebarOpen -> bool
	IsRightWindowOpen -> bool
	IsTutorialTagOpen -> bool
	JoinText -> CString
	JominiAccessPlayerJoinRequests -> [unregistered]
	JominiAreAchievementsAvailable -> bool
	JominiGetAchievementsNotAvailableString -> CString
	JominiGetMultiplayerAccessibleString -> CString
	JominiHasPlayerJoinRequests -> bool
	JominiIsHostOrLocal -> bool
	JominiIsMultiplayerAccessible -> bool
	JominiMultiplayerIsCrossplayEnabled -> bool
	JominiMultiplayerIsCrossplayFilterAvailable -> bool
	JominiPlayer -> [unregistered]
	LessThanOrEqualTo_CFixedPoint -> bool
	LessThanOrEqualTo_float -> bool
	LessThanOrEqualTo_int32 -> bool
	LessThanOrEqualTo_uint32 -> bool
	LessThan_CFixedPoint -> bool
	LessThan_float -> bool
	LessThan_int32 -> bool
	LessThan_uint32 -> bool
	Localize -> CString
	MakeScopeBool -> Scope
	MakeScopeFlag -> Scope
	MakeScopeValue -> Scope
	MapEditorHasGameMapMode -> bool
	Max_CFixedPoint -> CFixedPoint
	Max_float -> float
	Max_int32 -> int32
	Max_uint32 -> uint32
	Min_CFixedPoint -> CFixedPoint
	Min_float -> float
	Min_int32 -> int32
	Min_uint32 -> uint32
	Multiply_CFixedPoint -> CFixedPoint
	Multiply_CVector2f -> CVector2f
	Multiply_float -> float
	Multiply_int32 -> int32
	Multiply_uint32 -> uint32
	NOP -> void
	Negate_CFixedPoint -> CFixedPoint
	Negate_float -> float
	Negate_int32 -> int32
	Not -> bool
	NotEqualTo_CFixedPoint -> bool
	NotEqualTo_CVector2f -> bool
	NotEqualTo_float -> bool
	NotEqualTo_int32 -> bool
	NotEqualTo_uint32 -> bool
	NumberOrErrors -> int32
	ObjectsEqual -> bool
	OnCreateAccount -> void
	OnDecreaseGameSpeed -> void
	OnGoToPlayerCapital -> void
	OnIncreaseGameSpeed -> void
	OnPause -> void
	OnPauseMenu -> void
	OnRaiseEventTroops -> void
	OnToggleLoginWindow -> void
	OpenAchievements -> void
	OpenCharacterInteraction -> void
	OpenDecisionDetailView -> void
	OpenDesignateHeirWindow -> [unregistered]
	OpenDynastyCustomizationWindow -> void
	OpenDynastyTreeViewFromCharacter -> void
	OpenDynastyViewFromDynasty -> void
	OpenEducationFocusView -> void
	OpenErrorLog -> void
	OpenFaithConversionWindow -> void
	OpenFaithCreationWindow -> void
	OpenFromViewHistory -> void
	OpenGameRules -> void
	OpenGameView -> void
	OpenGameViewData -> void
	OpenGreatHolyWarWindow -> void
	OpenHolyOrderDetailView -> void
	OpenHouseCustomizationWindow -> void
	OpenLifestyleView -> void
	OpenMercenaryCompanyDetailView -> void
	OpenSuccessionElectionWindowForTitle -> [unregistered]
	OpenSuccessionLawChangeWindow -> [unregistered]
	OpenTitleCustomizationWindow -> void
	OpenWarWindow -> void
	Or -> bool
	POPSStatusGetLoginStatus -> CUTF8String
	POPSStatusIsAccountConnected -> bool
	POPSStatusIsLoggedIn -> bool
	POPSStatusIsLoggingIn -> bool
	POPSStatusIsOffline -> bool
	POPSStatusIsSupportConnectedAccount -> bool
	POPStatusGetUserEmailMasked -> CUTF8String
	POPStatusGetUserName -> CUTF8String
	POPStatusIsUserNameEmpty -> bool
	PdxClearEditBoxText -> void
	PdxGetProfilerNames -> [unregistered]
	PdxGetWidgetScreenSize -> CVector2f
	PdxGuiDestroyWidget -> void
	PdxGuiEditorMessageBox -> void
	PdxGuiInterruptAllAnimations -> void
	PdxGuiInterruptThenTriggerAllAnimations -> void
	PdxGuiTriggerAllAnimations -> void
	PdxProfilerFilterNext -> void
	PdxProfilerFilterPrev -> void
	PdxProfilerFilterTimers -> void
	PdxProfilerGetCurrentFrame -> int32
	PdxProfilerGetFrameTimeMs -> float
	PdxProfilerGetNsPerTick -> float
	PdxProfilerGuiGraphLinesEnabled -> bool
	PdxProfilerGuiToggleGraphLines -> void
	PdxProfilerGuiToggleStats -> void
	PdxProfilerGuiTrackCurrentFrame -> void
	PdxProfilerGuiWriteFrameCSV -> void
	PdxProfilerIsRecording -> bool
	PdxProfilerSelectThread -> void
	PdxProfilerSetFrame -> void
	PdxProfilerToggleRecording -> void
	PlaySfxEvent -> void
	PlayerCanDisbandAll -> bool
	PlayerCanRaiseAnyMenAtArmsRallyPoint -> bool
	PlayerCanRaiseAnyRaiderRallyPoint -> bool
	PlayerCanRaiseAnyRallyPoint -> bool
	PlayerDisbandAll -> void
	PlayerIsHost -> bool
	PlayerRaiseAllMenAtArmsRegiments -> void
	PlayerRaiseAllRaidRegiments -> void
	PlayerRaiseAllRegiments -> void
	PlayerShouldDisbandAll -> bool
	RaiseHolyOrder -> void
	RaiseMercenaryCompany -> void
	RefreshIllustration -> void
	ReleaseMode -> bool
	ReturnToMenu -> void
	ScaleToFitElementInside -> float
	ScaleToFitElementOutside -> float
	SelectEnumWithString -> void
	SelectLocalization -> CString
	Select_CFixedPoint -> CFixedPoint
	Select_CString -> CString
	Select_Vec4f -> CVector4f
	Select_float -> float
	Select_int32 -> int32
	Select_uint32 -> uint32
	SetCameraRestrictionsEnabled -> void
	SetGameSpeed -> void
	SetIronmanEnabledStatus -> void
	SetMapMode -> void
	SetRandomPlayableObserverCharacter -> void
	ShouldPromptForRulerDesigner -> bool
	ShouldShowCharacterDebugInfo -> bool
	ShouldShowCharacterTooltips -> bool
	ShouldShowSegmentedControlForSetting -> bool
	ShowAppointCourtPosition -> void
	ShowAppointCourtPositionIfNoEmployee -> void
	ShowCourtPositions -> void
	ShowCourtPositionsOrAppointWindow -> void
	ShowInventory -> void
	ShowingSuccession -> bool
	SinglePlayerShowingPausedSuccession -> bool
	SinglePlayerShowingSuccession -> bool
	StringIsEmpty -> bool
	Subtract_CFixedPoint -> CFixedPoint
	Subtract_CVector2f -> CVector2f
	Subtract_float -> float
	Subtract_int32 -> int32
	Subtract_uint32 -> uint32
	TextureListFormatSize -> CString
	TextureListFormatkB -> CString
	ToggleArtifactDetailsView -> void
	ToggleCharacter -> void
	ToggleCulture -> void
	ToggleEncyclopedia -> void
	ToggleFaith -> void
	ToggleGameView -> void
	ToggleGameViewData -> void
	ToggleHolyOrderDetailView -> void
	ToggleInventory -> void
	ToggleLegacy -> void
	ToggleMapEditorGameMapModeActive -> void
	ToggleMercenaryCompanyDetailView -> void
	ToggleOnCoatOfArmsClick -> void
	ToggleReforgeArtifactWindow -> void
	TryStartRulerDesigning -> void
	Unfocus -> void
	UsesTimerLocking -> bool
	WatchWindowsEnabled -> bool
	abandon_celibacy -> [unregistered]
	abandon_celibacy_decision -> [unregistered]
	abandon_hook_interaction -> [unregistered]
	absolute -> [unregistered]
	absolute_control -> [unregistered]
	absolute_crown_authority -> [unregistered]
	absolute_tribal -> [unregistered]
	absolute_tribal_authority -> [unregistered]
	accept_culture -> [unregistered]
	activities -> [unregistered]
	activity -> [unregistered]
	adult -> [unregistered]
	adulthood -> [unregistered]
	adults -> [unregistered]
	advantage -> [unregistered]
	advantage_roll -> [unregistered]
	advantage_rolls -> [unregistered]
	aftermath -> [unregistered]
	agent -> [unregistered]
	agent_discovery -> [unregistered]
	agent_discovery_discovered -> [unregistered]
	agents -> [unregistered]
	alliance -> [unregistered]
	alliances -> [unregistered]
	allied -> [unregistered]
	allies -> [unregistered]
	ally -> [unregistered]
	ally_i -> [unregistered]
	amenities -> [unregistered]
	aptitude -> [unregistered]
	archer -> [unregistered]
	archer_cavalry -> [unregistered]
	archers -> [unregistered]
	armies -> [unregistered]
	army -> [unregistered]
	army_commander -> [unregistered]
	army_commanders -> [unregistered]
	artifact -> [unregistered]
	artifact_claim -> [unregistered]
	artifact_claims -> [unregistered]
	artifact_durability -> [unregistered]
	artifact_rarity -> [unregistered]
	artifacts -> [unregistered]
	asexual -> [unregistered]
	assault -> [unregistered]
	assaulted -> [unregistered]
	assaulting -> [unregistered]
	assaults -> [unregistered]
	at_peace_opinion -> [unregistered]
	at_peace_opinion_short -> [unregistered]
	attracted -> [unregistered]
	attraction -> [unregistered]
	attrition -> [unregistered]
	autonomous_vassals -> [unregistered]
	autonomous_vassals_crown_authority -> [unregistered]
	available_spouse -> [unregistered]
	banish -> [unregistered]
	banish_reason -> [unregistered]
	banish_reasons -> [unregistered]
	banished -> [unregistered]
	banishment -> [unregistered]
	baron -> [unregistered]
	baronies -> [unregistered]
	barons -> [unregistered]
	barony -> [unregistered]
	bastard -> [unregistered]
	bastards -> [unregistered]
	battle -> [unregistered]
	battle_advantage -> [unregistered]
	battles -> [unregistered]
	beneficiaries -> [unregistered]
	beneficiary -> [unregistered]
	besiege -> [unregistered]
	besieged -> [unregistered]
	besieging -> [unregistered]
	best_friend -> [unregistered]
	best_friend_possessive -> [unregistered]
	best_friends -> [unregistered]
	best_friends_possessive -> [unregistered]
	bestow_royal_favor -> [unregistered]
	betrothal -> [unregistered]
	betrothals -> [unregistered]
	betrothed -> [unregistered]
	bisexual -> [unregistered]
	blackmail -> [unregistered]
	blackmailed -> [unregistered]
	blackmailing -> [unregistered]
	bred -> [unregistered]
	breed -> [unregistered]
	breeding -> [unregistered]
	building -> [unregistered]
	buildings -> [unregistered]
	bullies -> [unregistered]
	bullies_possessive -> [unregistered]
	bully -> [unregistered]
	bully_possessive -> [unregistered]
	buy_artifact_claim -> [unregistered]
	buy_artifact_claim_interaction -> [unregistered]
	buy_claim -> [unregistered]
	buy_claim_interaction -> [unregistered]
	cadet_branch -> [unregistered]
	cadet_branches -> [unregistered]
	cadet_branching -> [unregistered]
	camel_cavalry -> [unregistered]
	capital -> [unregistered]
	capital_duchy -> [unregistered]
	castle -> [unregistered]
	castle_holding -> [unregistered]
	castle_holdings -> [unregistered]
	castles -> [unregistered]
	casualties -> [unregistered]
	casualty -> [unregistered]
	casus_belli -> [unregistered]
	casus_bellis -> [unregistered]
	chancellor -> [unregistered]
	chancellors -> [unregistered]
	character -> [unregistered]
	character_death -> [unregistered]
	character_death_death -> [unregistered]
	character_death_die -> [unregistered]
	character_death_dies -> [unregistered]
	character_death_dying -> [unregistered]
	character_interaction -> [unregistered]
	character_modifier -> [unregistered]
	character_modifiers -> [unregistered]
	character_possessive -> [unregistered]
	characters -> [unregistered]
	characters_possessive -> [unregistered]
	child -> [unregistered]
	childhood_trait -> [unregistered]
	children -> [unregistered]
	church_holding -> [unregistered]
	church_holdings -> [unregistered]
	church_property -> [unregistered]
	cities -> [unregistered]
	city -> [unregistered]
	city_holding -> [unregistered]
	city_holdings -> [unregistered]
	civil_war -> [unregistered]
	civil_wars -> [unregistered]
	claim -> [unregistered]
	claimant -> [unregistered]
	claimant_faction -> [unregistered]
	claimant_factions -> [unregistered]
	claimants -> [unregistered]
	claimed -> [unregistered]
	claims -> [unregistered]
	clan -> [unregistered]
	clan_government -> [unregistered]
	clergy -> [unregistered]
	clergy_opinion -> [unregistered]
	close_family -> [unregistered]
	close_family_member -> [unregistered]
	close_family_members -> [unregistered]
	cognomen -> [unregistered]
	cognomens -> [unregistered]
	collect_taxes -> [unregistered]
	combat_phase -> [unregistered]
	combat_roll -> [unregistered]
	combat_width -> [unregistered]
	command_modifier -> [unregistered]
	command_modifier_i -> [unregistered]
	commander -> [unregistered]
	commander_trait -> [unregistered]
	commander_traits -> [unregistered]
	commanders -> [unregistered]
	commanding -> [unregistered]
	commission_epic -> [unregistered]
	commission_epic_decision -> [unregistered]
	commoner -> [unregistered]
	commoners -> [unregistered]
	complete_control -> [unregistered]
	complete_control_region -> [unregistered]
	completely_control -> [unregistered]
	completely_control_region -> [unregistered]
	completely_controlled -> [unregistered]
	completely_controls -> [unregistered]
	completely_controls_region -> [unregistered]
	concubinage -> [unregistered]
	concubine -> [unregistered]
	concubine_female -> [unregistered]
	concubine_male -> [unregistered]
	concubines -> [unregistered]
	congenital -> [unregistered]
	congenital_trait -> [unregistered]
	congenital_traits -> [unregistered]
	contract -> [unregistered]
	contribute -> [unregistered]
	contribution -> [unregistered]
	control -> [unregistered]
	convert_county -> [unregistered]
	convince_dejure -> [unregistered]
	core_tenet -> [unregistered]
	core_tenets -> [unregistered]
	council -> [unregistered]
	councillor -> [unregistered]
	councillor_task -> [unregistered]
	councillor_task_possible_side_effects -> [unregistered]
	councillor_tasks -> [unregistered]
	councillors -> [unregistered]
	count -> [unregistered]
	counter -> [unregistered]
	counters -> [unregistered]
	counties -> [unregistered]
	counts -> [unregistered]
	county -> [unregistered]
	county_capital -> [unregistered]
	county_capitals -> [unregistered]
	county_control -> [unregistered]
	county_corruption -> [unregistered]
	county_development -> [unregistered]
	county_development_growth -> [unregistered]
	county_modifier -> [unregistered]
	county_modifiers -> [unregistered]
	county_opinion -> [unregistered]
	court -> [unregistered]
	court_amenities -> [unregistered]
	court_amenity -> [unregistered]
	court_artifact -> [unregistered]
	court_artifacts -> [unregistered]
	court_chaplain -> [unregistered]
	court_chaplains -> [unregistered]
	court_event -> [unregistered]
	court_events -> [unregistered]
	court_grandeur -> [unregistered]
	court_grandeur_expectations -> [unregistered]
	court_grandeur_level -> [unregistered]
	court_grandeur_levels -> [unregistered]
	court_grandeur_value -> [unregistered]
	court_language -> [unregistered]
	court_languages -> [unregistered]
	court_position -> [unregistered]
	court_positions -> [unregistered]
	court_type -> [unregistered]
	court_type_trait -> [unregistered]
	court_types -> [unregistered]
	courtier -> [unregistered]
	courtiers -> [unregistered]
	courts -> [unregistered]
	cowed -> [unregistered]
	create -> [unregistered]
	create_title -> [unregistered]
	created -> [unregistered]
	created_title -> [unregistered]
	crime -> [unregistered]
	crime_i -> [unregistered]
	crimes -> [unregistered]
	criminal -> [unregistered]
	criminals -> [unregistered]
	critical_failure -> [unregistered]
	critically_fail -> [unregistered]
	crown_authority -> [unregistered]
	crusade -> [unregistered]
	crusades -> [unregistered]
	crush -> [unregistered]
	crush_possessive -> [unregistered]
	crushes -> [unregistered]
	crushes_possessive -> [unregistered]
	cultural -> [unregistered]
	cultural_acceptance -> [unregistered]
	cultural_acceptance_baseline -> [unregistered]
	cultural_exposure -> [unregistered]
	cultural_fascination -> [unregistered]
	cultural_head -> [unregistered]
	culture -> [unregistered]
	culture_head -> [unregistered]
	culture_intermingling -> [unregistered]
	culture_pillar -> [unregistered]
	culture_pillars -> [unregistered]
	culture_tradition -> [unregistered]
	culture_traditions -> [unregistered]
	cultures -> [unregistered]
	damage -> [unregistered]
	de_jure -> [unregistered]
	de_jure_capital -> [unregistered]
	de_jure_drift -> [unregistered]
	de_jure_drift_drift -> [unregistered]
	de_jure_drift_drifted -> [unregistered]
	de_jure_partition -> [unregistered]
	de_jure_partitioned -> [unregistered]
	dead_soldiers -> [unregistered]
	debt -> [unregistered]
	deceitful_progress_hostile_schemes_decision -> [unregistered]
	decide -> [unregistered]
	decision -> [unregistered]
	decisions -> [unregistered]
	defeat -> [unregistered]
	demand_conversion -> [unregistered]
	demand_payment -> [unregistered]
	demand_payment_decision -> [unregistered]
	denounce -> [unregistered]
	denouncement -> [unregistered]
	depose -> [unregistered]
	deposed -> [unregistered]
	designate_chief_sacrifice -> [unregistered]
	designate_chief_sacrifice_article -> [unregistered]
	designate_chief_sacrifice_chief_sacrifice -> [unregistered]
	designated_heir -> [unregistered]
	detail_zoom -> [unregistered]
	develop_county -> [unregistered]
	development -> [unregistered]
	development_growth -> [unregistered]
	diligent_development_focus_decision -> [unregistered]
	diplomacy -> [unregistered]
	diplomacy_i -> [unregistered]
	diplomacy_lifestyle -> [unregistered]
	diplomacy_skill -> [unregistered]
	diplomatic_range -> [unregistered]
	direct_vassal -> [unregistered]
	direct_vassals -> [unregistered]
	directed_great_holy_war -> [unregistered]
	directed_great_holy_wars -> [unregistered]
	discontent -> [unregistered]
	diseases -> [unregistered]
	disinherit -> [unregistered]
	disinherited -> [unregistered]
	dismiss_strong_hook_interaction -> [unregistered]
	disparate_tribes -> [unregistered]
	disparate_tribes_tribal_authority -> [unregistered]
	disrupt_schemes -> [unregistered]
	diverge -> [unregistered]
	divergent_culture -> [unregistered]
	divergent_cultures -> [unregistered]
	divorce -> [unregistered]
	divorced -> [unregistered]
	divorces -> [unregistered]
	divorcing -> [unregistered]
	doctrine -> [unregistered]
	doctrines -> [unregistered]
	domain -> [unregistered]
	domain_income -> [unregistered]
	domain_limit -> [unregistered]
	domain_taxes -> [unregistered]
	domains -> [unregistered]
	domestic_affairs -> [unregistered]
	dread -> [unregistered]
	dreaded -> [unregistered]
	dreadful -> [unregistered]
	ducal_conquest -> [unregistered]
	ducal_conquest_casus_belli -> [unregistered]
	duchies -> [unregistered]
	duchy -> [unregistered]
	duchy_building -> [unregistered]
	duchy_buildings -> [unregistered]
	duke -> [unregistered]
	dungeon -> [unregistered]
	durability -> [unregistered]
	dynast -> [unregistered]
	dynast_interaction -> [unregistered]
	dynast_interactions -> [unregistered]
	dynasties -> [unregistered]
	dynasty -> [unregistered]
	dynasty_members -> [unregistered]
	dynasty_perk -> [unregistered]
	dynasty_perks -> [unregistered]
	dynasty_prestige -> [unregistered]
	dynasty_prestige_i -> [unregistered]
	dynasty_prestige_level -> [unregistered]
	dynasty_prestige_level_0 -> [unregistered]
	dynasty_prestige_level_1 -> [unregistered]
	dynasty_prestige_level_10 -> [unregistered]
	dynasty_prestige_level_2 -> [unregistered]
	dynasty_prestige_level_3 -> [unregistered]
	dynasty_prestige_level_4 -> [unregistered]
	dynasty_prestige_level_5 -> [unregistered]
	dynasty_prestige_level_6 -> [unregistered]
	dynasty_prestige_level_7 -> [unregistered]
	dynasty_prestige_level_8 -> [unregistered]
	dynasty_prestige_level_9 -> [unregistered]
	economic_building -> [unregistered]
	economic_buildings -> [unregistered]
	educate -> [unregistered]
	educated -> [unregistered]
	education -> [unregistered]
	education_focus -> [unregistered]
	education_focus_short -> [unregistered]
	education_trait -> [unregistered]
	education_traits -> [unregistered]
	elector -> [unregistered]
	electors -> [unregistered]
	elephant_cavalry -> [unregistered]
	eligible_child -> [unregistered]
	eligible_children -> [unregistered]
	embark -> [unregistered]
	embarkation -> [unregistered]
	embarked -> [unregistered]
	embarked_i -> [unregistered]
	embarking -> [unregistered]
	embrace_celibacy -> [unregistered]
	embrace_celibacy_decision -> [unregistered]
	emperor -> [unregistered]
	emperors -> [unregistered]
	empire -> [unregistered]
	empires -> [unregistered]
	end_date -> [unregistered]
	epithet -> [unregistered]
	epithets -> [unregistered]
	era -> [unregistered]
	eras -> [unregistered]
	espionage -> [unregistered]
	ethos -> [unregistered]
	exceptional_epic -> [unregistered]
	excommunicate -> [unregistered]
	excommunicated -> [unregistered]
	excommunicated_ruler -> [unregistered]
	excommunication -> [unregistered]
	excommunication_war -> [unregistered]
	execute -> [unregistered]
	execute_reason -> [unregistered]
	execute_reasons -> [unregistered]
	executed -> [unregistered]
	executing -> [unregistered]
	execution -> [unregistered]
	executions -> [unregistered]
	existing_development -> [unregistered]
	experience -> [unregistered]
	exposed -> [unregistered]
	exposure -> [unregistered]
	extended_family -> [unregistered]
	extended_family_members -> [unregistered]
	extort_subjects -> [unregistered]
	extort_subjects_decision -> [unregistered]
	extramarital_sex -> [unregistered]
	extramarital_sex_sleeping_with -> [unregistered]
	fabricate_claim -> [unregistered]
	fabricate_claim_short -> [unregistered]
	fabricated_claims_short -> [unregistered]
	faction -> [unregistered]
	faction_discontent -> [unregistered]
	faction_independence -> [unregistered]
	faction_liberty -> [unregistered]
	faction_military_power -> [unregistered]
	factions -> [unregistered]
	faith -> [unregistered]
	faith_astray -> [unregistered]
	faith_evil -> [unregistered]
	faith_hostile -> [unregistered]
	faith_hostility -> [unregistered]
	faith_righteous -> [unregistered]
	faithpossessive -> [unregistered]
	faiths -> [unregistered]
	fame_trait -> [unregistered]
	family -> [unregistered]
	family_member -> [unregistered]
	family_members -> [unregistered]
	fascination -> [unregistered]
	favor -> [unregistered]
	favors -> [unregistered]
	feast -> [unregistered]
	fertility -> [unregistered]
	fervor -> [unregistered]
	feudal -> [unregistered]
	feudal_contract -> [unregistered]
	feudal_contracts -> [unregistered]
	feudal_government -> [unregistered]
	feudalism -> [unregistered]
	fleet -> [unregistered]
	fleets -> [unregistered]
	flowery_war -> [unregistered]
	flowery_warring -> [unregistered]
	flowery_wars -> [unregistered]
	focus -> [unregistered]
	focuses -> [unregistered]
	force_duel_anyone_interaction -> [unregistered]
	force_duel_criminals_interaction -> [unregistered]
	foreign_affairs -> [unregistered]
	fort_level -> [unregistered]
	fort_level_i -> [unregistered]
	fortification_building -> [unregistered]
	fortification_buildings -> [unregistered]
	fortified_holding -> [unregistered]
	fortified_holdings -> [unregistered]
	friend -> [unregistered]
	friend_possessive -> [unregistered]
	friends -> [unregistered]
	friends_possessive -> [unregistered]
	game_over -> [unregistered]
	garrison -> [unregistered]
	garrison_reinforcement -> [unregistered]
	gender_doctrines -> [unregistered]
	gender_law -> [unregistered]
	gender_laws -> [unregistered]
	gift -> [unregistered]
	given_name -> [unregistered]
	gold -> [unregistered]
	gold_i -> [unregistered]
	government -> [unregistered]
	government_form -> [unregistered]
	government_forms -> [unregistered]
	governments -> [unregistered]
	grandeur -> [unregistered]
	grandeur_expectations -> [unregistered]
	grandeur_level -> [unregistered]
	grandeur_levels -> [unregistered]
	great_holy_war -> [unregistered]
	great_holy_war_directed -> [unregistered]
	great_holy_war_undirected -> [unregistered]
	great_holy_wars -> [unregistered]
	guardian -> [unregistered]
	guardian_possessive -> [unregistered]
	guardians -> [unregistered]
	guardians_possessive -> [unregistered]
	guardianship -> [unregistered]
	guest -> [unregistered]
	guests -> [unregistered]
	head_of_faith -> [unregistered]
	head_of_faith_spiritual -> [unregistered]
	head_of_faith_temporal -> [unregistered]
	heads_of_faith -> [unregistered]
	health -> [unregistered]
	health_trait -> [unregistered]
	heavy_cavalry -> [unregistered]
	heavy_infantry -> [unregistered]
	heir -> [unregistered]
	heirs -> [unregistered]
	heresies -> [unregistered]
	heresy -> [unregistered]
	heritage -> [unregistered]
	heterosexual -> [unregistered]
	high -> [unregistered]
	high_crown_authority -> [unregistered]
	high_tribal -> [unregistered]
	high_tribal_authority -> [unregistered]
	highlighted_text -> [unregistered]
	highlighted_text_example -> [unregistered]
	hired_troops -> [unregistered]
	hold -> [unregistered]
	hold_court -> [unregistered]
	holder -> [unregistered]
	holder_possessive -> [unregistered]
	holders -> [unregistered]
	holders_possessive -> [unregistered]
	holding -> [unregistered]
	holding_court -> [unregistered]
	holding_type -> [unregistered]
	holding_types -> [unregistered]
	holdings -> [unregistered]
	holy_order -> [unregistered]
	holy_order_patron -> [unregistered]
	holy_orders -> [unregistered]
	holy_site -> [unregistered]
	holy_sites -> [unregistered]
	holy_war -> [unregistered]
	holy_war_holy -> [unregistered]
	holy_wars -> [unregistered]
	homosexual -> [unregistered]
	hook -> [unregistered]
	hooked -> [unregistered]
	hooks -> [unregistered]
	host -> [unregistered]
	hostage -> [unregistered]
	hostages -> [unregistered]
	hostile_army -> [unregistered]
	hostile_scheme -> [unregistered]
	hostile_scheme_resistance -> [unregistered]
	hostile_schemes -> [unregistered]
	house -> [unregistered]
	house_arrest -> [unregistered]
	house_artifact_claim -> [unregistered]
	house_artifact_claims -> [unregistered]
	house_head -> [unregistered]
	house_head_head -> [unregistered]
	house_head_interaction -> [unregistered]
	house_heads -> [unregistered]
	houses -> [unregistered]
	hungarian_invasion -> [unregistered]
	hungarian_invasion_casus_belli -> [unregistered]
	hunt -> [unregistered]
	hybrid_culture -> [unregistered]
	hybrid_cultures -> [unregistered]
	hybridize -> [unregistered]
	ill -> [unregistered]
	illness -> [unregistered]
	illnesses -> [unregistered]
	impatient_rushing_all_schemes_decision -> [unregistered]
	implicit_claim -> [unregistered]
	implicit_claim_i -> [unregistered]
	implicit_claims -> [unregistered]
	imprison -> [unregistered]
	imprisoned -> [unregistered]
	imprisoning -> [unregistered]
	imprisonment -> [unregistered]
	imprisonment_reason -> [unregistered]
	imprisonment_reasons -> [unregistered]
	imprisons -> [unregistered]
	inbred -> [unregistered]
	inbreeding -> [unregistered]
	incest -> [unregistered]
	incestuous -> [unregistered]
	income -> [unregistered]
	increase_control -> [unregistered]
	independence_faction -> [unregistered]
	independence_factions -> [unregistered]
	independent -> [unregistered]
	independent_ruler -> [unregistered]
	innovation -> [unregistered]
	innovations -> [unregistered]
	inspiration -> [unregistered]
	inspirations -> [unregistered]
	inspired -> [unregistered]
	interaction -> [unregistered]
	interactions -> [unregistered]
	intimidated -> [unregistered]
	intimidated_i -> [unregistered]
	intrigue -> [unregistered]
	intrigue_9_14_20_18_9_7_21_5 -> [unregistered]
	intrigue_i -> [unregistered]
	intrigue_lifestyle -> [unregistered]
	intrigue_lqwuljxh -> [unregistered]
	intrigue_rigueint -> [unregistered]
	intrigue_skill -> [unregistered]
	inventory_artifact -> [unregistered]
	inventory_artifacts -> [unregistered]
	ism -> [unregistered]
	jailor -> [unregistered]
	jihad -> [unregistered]
	jihads -> [unregistered]
	king -> [unregistered]
	kingdom -> [unregistered]
	kingdoms -> [unregistered]
	kings -> [unregistered]
	kinslayer -> [unregistered]
	kinslayers -> [unregistered]
	kinslaying -> [unregistered]
	knight -> [unregistered]
	knight_effectiveness -> [unregistered]
	knight_i -> [unregistered]
	knights -> [unregistered]
	kunya -> [unregistered]
	land -> [unregistered]
	landed -> [unregistered]
	language -> [unregistered]
	language_limit -> [unregistered]
	languages -> [unregistered]
	laqab -> [unregistered]
	law -> [unregistered]
	laws -> [unregistered]
	learning -> [unregistered]
	learning_i -> [unregistered]
	learning_lifestyle -> [unregistered]
	learning_skill -> [unregistered]
	lease -> [unregistered]
	leased -> [unregistered]
	leases -> [unregistered]
	leasing -> [unregistered]
	legalism -> [unregistered]
	legalistic -> [unregistered]
	legitimate -> [unregistered]
	legitimized -> [unregistered]
	legitimized_bastard -> [unregistered]
	lessee -> [unregistered]
	levies -> [unregistered]
	levy -> [unregistered]
	liberty_faction -> [unregistered]
	liberty_factions -> [unregistered]
	liege -> [unregistered]
	liege_taxes -> [unregistered]
	lieges -> [unregistered]
	life_expectancy -> [unregistered]
	lifestyle -> [unregistered]
	lifestyle_experience -> [unregistered]
	lifestyle_trait -> [unregistered]
	lifestyle_traits -> [unregistered]
	lifestyles -> [unregistered]
	light_cavalry -> [unregistered]
	limited -> [unregistered]
	limited_crown_authority -> [unregistered]
	limited_tribal -> [unregistered]
	limited_tribal_authority -> [unregistered]
	line -> [unregistered]
	line_of_succession -> [unregistered]
	long_reign -> [unregistered]
	lover -> [unregistered]
	lover_possessive -> [unregistered]
	lovers -> [unregistered]
	lovers_possessive -> [unregistered]
	lowborn -> [unregistered]
	main_phase -> [unregistered]
	manage_guards -> [unregistered]
	maneuver -> [unregistered]
	manipulation -> [unregistered]
	marriage -> [unregistered]
	marriages -> [unregistered]
	married -> [unregistered]
	marries -> [unregistered]
	marry -> [unregistered]
	marrying -> [unregistered]
	marshal -> [unregistered]
	marshals -> [unregistered]
	martial -> [unregistered]
	martial_custom -> [unregistered]
	martial_i -> [unregistered]
	martial_lifestyle -> [unregistered]
	martial_skill -> [unregistered]
	matrilineal -> [unregistered]
	matrilineally -> [unregistered]
	matronym -> [unregistered]
	matronymic -> [unregistered]
	medical_treatments -> [unregistered]
	megaduke_penalty -> [unregistered]
	men_at_arms -> [unregistered]
	men_at_arms_counter -> [unregistered]
	mental_break -> [unregistered]
	mental_breaks -> [unregistered]
	mentor -> [unregistered]
	mentor_possessive -> [unregistered]
	mentors -> [unregistered]
	mentors_possessive -> [unregistered]
	mercenaries -> [unregistered]
	mercenary -> [unregistered]
	mercenary_company -> [unregistered]
	mercenary_contract -> [unregistered]
	military_building -> [unregistered]
	military_buildings -> [unregistered]
	military_power -> [unregistered]
	modifier -> [unregistered]
	modifier_base_contributes -> [unregistered]
	modifier_base_contribution -> [unregistered]
	modifier_base_contributions -> [unregistered]
	modifier_contributes -> [unregistered]
	modifier_contribution -> [unregistered]
	modifier_contributions -> [unregistered]
	modifiers -> [unregistered]
	mongol_empire -> [unregistered]
	mongol_invasion_casus_belli -> [unregistered]
	movement_lock -> [unregistered]
	movement_locked -> [unregistered]
	nasab -> [unregistered]
	nemeses -> [unregistered]
	nemeses_possessive -> [unregistered]
	nemesis -> [unregistered]
	nemesis_possessive -> [unregistered]
	nickname -> [unregistered]
	nicknames -> [unregistered]
	nisba -> [unregistered]
	nobility -> [unregistered]
	noble -> [unregistered]
	nobleman -> [unregistered]
	noblemen -> [unregistered]
	nobles -> [unregistered]
	noblewoman -> [unregistered]
	noblewomen -> [unregistered]
	nominate -> [unregistered]
	nominate_heir -> [unregistered]
	nomination -> [unregistered]
	nominations -> [unregistered]
	objectives -> [unregistered]
	obligation -> [unregistered]
	obligations -> [unregistered]
	occupation -> [unregistered]
	occupations -> [unregistered]
	occupied -> [unregistered]
	occupy -> [unregistered]
	occupying -> [unregistered]
	offensive_war_opinion -> [unregistered]
	offensive_war_opinion_short -> [unregistered]
	offer_vassalization -> [unregistered]
	offer_vassalization_interaction -> [unregistered]
	official_laqab -> [unregistered]
	official_laqabs -> [unregistered]
	opinion -> [unregistered]
	opinions -> [unregistered]
	organized -> [unregistered]
	paedonym -> [unregistered]
	papal_recipient -> [unregistered]
	paper_zoom -> [unregistered]
	partition_share -> [unregistered]
	patrilineal -> [unregistered]
	patronym -> [unregistered]
	patronymic -> [unregistered]
	patronymics -> [unregistered]
	pay_homage -> [unregistered]
	peace -> [unregistered]
	peace_offer -> [unregistered]
	peace_offers -> [unregistered]
	peasant_faction -> [unregistered]
	peasant_factions -> [unregistered]
	perk -> [unregistered]
	perks -> [unregistered]
	personal -> [unregistered]
	personal_artifact_claim -> [unregistered]
	personal_artifact_claims -> [unregistered]
	personal_name -> [unregistered]
	personal_names -> [unregistered]
	personal_scheme -> [unregistered]
	personal_schemes -> [unregistered]
	personality -> [unregistered]
	personality_trait -> [unregistered]
	personality_traits -> [unregistered]
	petition_liege -> [unregistered]
	physical_trait -> [unregistered]
	physical_traits -> [unregistered]
	piety -> [unregistered]
	piety_experience -> [unregistered]
	piety_i -> [unregistered]
	piety_level -> [unregistered]
	piety_levels -> [unregistered]
	pilgrimage -> [unregistered]
	pilgrimages -> [unregistered]
	pious -> [unregistered]
	playdate -> [unregistered]
	player_heir -> [unregistered]
	political_zoom -> [unregistered]
	popular_faction -> [unregistered]
	popular_factions -> [unregistered]
	powerful_vassal -> [unregistered]
	powerful_vassal_powerful -> [unregistered]
	powerful_vassals -> [unregistered]
	preparation_phase -> [unregistered]
	pressed -> [unregistered]
	pressed_claim -> [unregistered]
	pressed_claim_i -> [unregistered]
	pressed_claims -> [unregistered]
	prestige -> [unregistered]
	prestige_experience -> [unregistered]
	prestige_i -> [unregistered]
	prestige_level -> [unregistered]
	prestige_levels -> [unregistered]
	prestigious -> [unregistered]
	prevented_murder -> [unregistered]
	prevented_murder_prevent -> [unregistered]
	primary_heir -> [unregistered]
	primary_heirs -> [unregistered]
	primary_spouse -> [unregistered]
	primary_title -> [unregistered]
	primary_titles -> [unregistered]
	prison -> [unregistered]
	prisoner -> [unregistered]
	prisoner_of_war -> [unregistered]
	prisoners -> [unregistered]
	prisoners_of_war -> [unregistered]
	prisons -> [unregistered]
	project -> [unregistered]
	promote_culture -> [unregistered]
	promote_other_culture_development_decision -> [unregistered]
	promoting_cultural_acceptance -> [unregistered]
	prowess -> [unregistered]
	prowess_i -> [unregistered]
	prowess_skill -> [unregistered]
	pursuit -> [unregistered]
	raid -> [unregistered]
	raid_loot -> [unregistered]
	raider -> [unregistered]
	raiders -> [unregistered]
	raiding -> [unregistered]
	raids -> [unregistered]
	rally_point -> [unregistered]
	rally_points -> [unregistered]
	range -> [unregistered]
	rank -> [unregistered]
	ranks -> [unregistered]
	rarity -> [unregistered]
	realm -> [unregistered]
	realm_capital -> [unregistered]
	realm_heir -> [unregistered]
	realm_heirs -> [unregistered]
	realm_priest -> [unregistered]
	realm_priest_possessive -> [unregistered]
	realm_priests -> [unregistered]
	realm_size -> [unregistered]
	realms -> [unregistered]
	recently_acquired_holding -> [unregistered]
	recently_acquired_holdings -> [unregistered]
	recently_disembarked -> [unregistered]
	reforge -> [unregistered]
	reforge_artifact -> [unregistered]
	reform -> [unregistered]
	reformation -> [unregistered]
	refuse_conversion_crime -> [unregistered]
	refused_conversion_crime -> [unregistered]
	refusing_conversion_crime -> [unregistered]
	regiment -> [unregistered]
	regiments -> [unregistered]
	region -> [unregistered]
	regions -> [unregistered]
	regnal_name -> [unregistered]
	regnal_names -> [unregistered]
	relation -> [unregistered]
	relations -> [unregistered]
	religion -> [unregistered]
	religions -> [unregistered]
	religious_families -> [unregistered]
	religious_family -> [unregistered]
	religious_head_succession_law -> [unregistered]
	religious_head_succession_law_short -> [unregistered]
	religious_head_succession_laws -> [unregistered]
	religious_head_succession_laws_short -> [unregistered]
	religious_relations -> [unregistered]
	renounce -> [unregistered]
	renounced -> [unregistered]
	repair -> [unregistered]
	repair_artifact -> [unregistered]
	republic -> [unregistered]
	republic_government -> [unregistered]
	republican -> [unregistered]
	republics -> [unregistered]
	retract -> [unregistered]
	retracted -> [unregistered]
	retracting -> [unregistered]
	retraction -> [unregistered]
	retractions -> [unregistered]
	retreat -> [unregistered]
	retreats -> [unregistered]
	revocation -> [unregistered]
	revocations -> [unregistered]
	revoke -> [unregistered]
	revoke_title_reason -> [unregistered]
	revoke_title_reasons -> [unregistered]
	revoked -> [unregistered]
	revoking -> [unregistered]
	revolt -> [unregistered]
	revolting -> [unregistered]
	revolts -> [unregistered]
	rightful_liege -> [unregistered]
	rival -> [unregistered]
	rival_possessive -> [unregistered]
	rivalries -> [unregistered]
	rivals -> [unregistered]
	rivals_possessive -> [unregistered]
	roll -> [unregistered]
	rolls -> [unregistered]
	routed_soldiers -> [unregistered]
	royal_court -> [unregistered]
	royal_courts -> [unregistered]
	ruler -> [unregistered]
	rulerpossessive -> [unregistered]
	rulers -> [unregistered]
	scheme -> [unregistered]
	scheme_discovery_chance -> [unregistered]
	scheme_hostile -> [unregistered]
	scheme_owner -> [unregistered]
	scheme_owners -> [unregistered]
	scheme_power -> [unregistered]
	scheme_resistance -> [unregistered]
	scheme_success_chance -> [unregistered]
	scheme_target -> [unregistered]
	scheme_target_target -> [unregistered]
	scheme_targets -> [unregistered]
	schemer -> [unregistered]
	schemes -> [unregistered]
	scheming -> [unregistered]
	screen -> [unregistered]
	secrecy -> [unregistered]
	secret -> [unregistered]
	secret_scheme -> [unregistered]
	secret_scheme_single -> [unregistered]
	secret_schemes -> [unregistered]
	secrets -> [unregistered]
	secular_opinion -> [unregistered]
	sell_titles -> [unregistered]
	sell_titles_decision -> [unregistered]
	send_gift -> [unregistered]
	sexuality -> [unregistered]
	short_reign -> [unregistered]
	shunned -> [unregistered]
	sick -> [unregistered]
	sickness -> [unregistered]
	siege -> [unregistered]
	siege_progress -> [unregistered]
	siege_weapon -> [unregistered]
	siege_weapons -> [unregistered]
	sieges -> [unregistered]
	sin -> [unregistered]
	sinful -> [unregistered]
	single_combat_duel -> [unregistered]
	single_combat_duel_plural -> [unregistered]
	single_combat_fight -> [unregistered]
	single_combat_fight_plural -> [unregistered]
	single_combat_fight_sudden_death -> [unregistered]
	single_combat_injury_chance -> [unregistered]
	single_combat_injury_chance_injure -> [unregistered]
	single_combat_injury_chance_injury_risk -> [unregistered]
	single_combat_prowess_bonus -> [unregistered]
	single_combat_prowess_malus -> [unregistered]
	single_combat_success_chance -> [unregistered]
	single_combat_success_chance_skill -> [unregistered]
	sins -> [unregistered]
	skill -> [unregistered]
	skills -> [unregistered]
	skirmisher -> [unregistered]
	skirmishers -> [unregistered]
	soldier -> [unregistered]
	soldier_i -> [unregistered]
	soldiers -> [unregistered]
	soulmate -> [unregistered]
	soulmate_possessive -> [unregistered]
	soulmates -> [unregistered]
	soulmates_possessive -> [unregistered]
	spearmen -> [unregistered]
	special_building -> [unregistered]
	special_buildings -> [unregistered]
	special_troops -> [unregistered]
	spiritual_head_of_faith -> [unregistered]
	sponsor -> [unregistered]
	spouse -> [unregistered]
	spouses -> [unregistered]
	spymaster -> [unregistered]
	steward -> [unregistered]
	stewards -> [unregistered]
	stewardship -> [unregistered]
	stewardship_i -> [unregistered]
	stewardship_lifestyle -> [unregistered]
	stewardship_skill -> [unregistered]
	stress -> [unregistered]
	stress_critical_i -> [unregistered]
	stress_gain_i -> [unregistered]
	stress_i -> [unregistered]
	stress_level -> [unregistered]
	stress_levels -> [unregistered]
	stress_loss_i -> [unregistered]
	stressed -> [unregistered]
	strong_hook -> [unregistered]
	strong_hooks -> [unregistered]
	strong_vassal -> [unregistered]
	strong_vassals -> [unregistered]
	student -> [unregistered]
	student_possessive -> [unregistered]
	students -> [unregistered]
	students_possessive -> [unregistered]
	success_chance -> [unregistered]
	succession -> [unregistered]
	succession_law -> [unregistered]
	succession_laws -> [unregistered]
	supplied -> [unregistered]
	supplies -> [unregistered]
	supply -> [unregistered]
	supply_limit -> [unregistered]
	supply_state -> [unregistered]
	tax -> [unregistered]
	taxation -> [unregistered]
	taxes -> [unregistered]
	teknonym -> [unregistered]
	teknonymic -> [unregistered]
	temple -> [unregistered]
	temple_holding -> [unregistered]
	temple_holdings -> [unregistered]
	temples -> [unregistered]
	temporal_head_of_faith -> [unregistered]
	terrain -> [unregistered]
	terrified_i -> [unregistered]
	theocracies -> [unregistered]
	theocracy -> [unregistered]
	theocracy_government -> [unregistered]
	theocratic -> [unregistered]
	theocratic_government -> [unregistered]
	theocratic_vassal -> [unregistered]
	theocratic_vassals -> [unregistered]
	tier_name -> [unregistered]
	title -> [unregistered]
	title_allegiance -> [unregistered]
	title_claim -> [unregistered]
	title_claims -> [unregistered]
	title_creation -> [unregistered]
	title_heir -> [unregistered]
	title_heirs -> [unregistered]
	title_law -> [unregistered]
	title_laws -> [unregistered]
	title_rank -> [unregistered]
	title_ranks -> [unregistered]
	title_specific_succession -> [unregistered]
	title_succession -> [unregistered]
	title_tier -> [unregistered]
	title_tiers -> [unregistered]
	titlepossessive -> [unregistered]
	titles -> [unregistered]
	titular_title -> [unregistered]
	tolerance -> [unregistered]
	tolerate -> [unregistered]
	tolerates -> [unregistered]
	top_liege -> [unregistered]
	top_realm -> [unregistered]
	torture -> [unregistered]
	tortured -> [unregistered]
	torturing -> [unregistered]
	toughness -> [unregistered]
	tradition -> [unregistered]
	traditions -> [unregistered]
	trait -> [unregistered]
	traits -> [unregistered]
	transfer -> [unregistered]
	transferred -> [unregistered]
	transferring -> [unregistered]
	trial_by_combat -> [unregistered]
	trial_by_combat_combat -> [unregistered]
	trial_by_combat_trial -> [unregistered]
	trials_by_combat -> [unregistered]
	tribal -> [unregistered]
	tribal_authority -> [unregistered]
	tribal_government -> [unregistered]
	tribal_holding -> [unregistered]
	tribal_holdings -> [unregistered]
	tribe -> [unregistered]
	tribes -> [unregistered]
	troop_quality -> [unregistered]
	truce -> [unregistered]
	truces -> [unregistered]
	tutorial_education_trait -> [unregistered]
	tutorial_education_trait_i -> [unregistered]
	tyrannical -> [unregistered]
	tyranny -> [unregistered]
	tyrant -> [unregistered]
	uncreated_title -> [unregistered]
	undirected_great_holy_war -> [unregistered]
	undirected_great_holy_wars -> [unregistered]
	unlanded -> [unregistered]
	unpressed -> [unregistered]
	unpressed_claim -> [unregistered]
	unpressed_claim_i -> [unregistered]
	unpressed_claims -> [unregistered]
	unreformed_pagan_combat_bonus -> [unregistered]
	usurp -> [unregistered]
	usurp_title -> [unregistered]
	usurpation -> [unregistered]
	usurped -> [unregistered]
	varangian_adventure -> [unregistered]
	varangian_adventure_adventure -> [unregistered]
	varangian_adventures -> [unregistered]
	varangian_adventuring -> [unregistered]
	vassal -> [unregistered]
	vassal_limit -> [unregistered]
	vassal_obligations -> [unregistered]
	vassal_taxes -> [unregistered]
	vassalage -> [unregistered]
	vassalization -> [unregistered]
	vassalization_casus_belli -> [unregistered]
	vassalize -> [unregistered]
	vassalize_casus_belli -> [unregistered]
	vassalized_casus_belli -> [unregistered]
	vassals -> [unregistered]
	vassals_possessive -> [unregistered]
	victim -> [unregistered]
	victim_possessive -> [unregistered]
	victims -> [unregistered]
	victims_possessive -> [unregistered]
	victory -> [unregistered]
	virtue -> [unregistered]
	virtues -> [unregistered]
	virtuous -> [unregistered]
	vote_strength -> [unregistered]
	voter_strength -> [unregistered]
	voting_power -> [unregistered]
	voting_strength -> [unregistered]
	wanderer -> [unregistered]
	wanderers -> [unregistered]
	war -> [unregistered]
	war_chest -> [unregistered]
	war_contribution -> [unregistered]
	war_leader -> [unregistered]
	war_leaders -> [unregistered]
	war_score -> [unregistered]
	war_target -> [unregistered]
	war_targets -> [unregistered]
	ward -> [unregistered]
	ward_possessive -> [unregistered]
	wards -> [unregistered]
	wards_possessive -> [unregistered]
	wars -> [unregistered]
	weak_hook -> [unregistered]
	weak_hooks -> [unregistered]
	white_peace -> [unregistered]
	win -> [unregistered]
	winning -> [unregistered]
	wins -> [unregistered]
	winter -> [unregistered]
	winter_severity_harsh -> [unregistered]
	winter_severity_mild -> [unregistered]
	winter_severity_normal -> [unregistered]
}

Types = {
	AIWarCoordinatorWatchWindow = {
		AccessSelf -> [unregistered]
		AccessWarInfoItems -> [unregistered]
		Close -> void
		IsAllAttackersActive -> bool
		IsAllDefendersActive -> bool
		Self -> [unregistered]
		ToggleAllAttackers -> void
		ToggleAllDefenders -> void
	}

	AIWatchWindow = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		CalculateCBCandidates -> void
		CalculateSchemeTargetCandidates -> void
		CalculateSpouseCandidates -> void
		Close -> void
		IsTabCB -> bool
		IsTabMarriage -> bool
		IsTabScheme -> bool
		IsTabStrategy -> bool
		Self -> [unregistered]
		SetTabCB -> void
		SetTabMarriage -> void
		SetTabScheme -> void
		SetTabStrategy -> void
		ToggleChangeOnPause -> void
		WillPauseOnChange -> bool
	}

	AccessoryItem = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetOptions -> [unregistered]
		GetSelectedIndex -> CVector2i
		OnSelect -> void
		Self -> [unregistered]
	}

	AccessoryItemOption = {
		AccessSelf -> [unregistered]
		GetName -> CString
		OnHover -> void
		Self -> [unregistered]
	}

	Achievement = {
		AccessSelf -> [unregistered]
		IsUnlocked -> bool
		Self -> [unregistered]
	}

	AchievementPopup = {
		AccessJustUnlockedAchievements -> [unregistered]
		AccessSelf -> [unregistered]
		Self -> [unregistered]
		ShowWindow -> void
	}

	AchievementWindow = {
		AccessGroups -> [unregistered]
		AccessSelf -> [unregistered]
		HasGameStarted -> bool
		Hide -> void
		Self -> [unregistered]
		ShouldShowAll -> bool
		ShouldShowLocked -> bool
		ShouldShowPossible -> bool
		ShouldShowUnlocked -> bool
		Show -> void
		ShowAll -> void
		ShowLocked -> void
		ShowPossible -> void
		ShowUnlocked -> void
	}

	ActionItemHandler = {
		AccessSelf -> [unregistered]
		ActionsWentUp -> bool
		GetGuiActionItems -> [unregistered]
		GetNumberOfActions -> int32
		GetNumberOfUnreadActions -> int32
		GetSuggestionsDebugTooltip -> CString
		HasAvailableActions -> bool
		HasAvailableCurrentSituationItems -> bool
		HasVisibleDangerousAction -> bool
		IsListVisible -> bool
		MarkAllItemsAsRead -> void
		ResetAllDismissed -> void
		Self -> [unregistered]
		ShouldBeVisible -> bool
		ToggleList -> void
	}

	ActiveCasusBelli = {
		GetAttacker -> Character
		GetDefender -> Character
		GetFirstTitleTarget -> Title
		GetType -> CasusBelliType
		AccessSelf -> [unregistered]
		GetAttacker -> [unregistered]
		GetDefender -> [unregistered]
		GetFirstTitleTarget -> [unregistered]
		GetType -> [unregistered]
		Self -> [unregistered]
	}

	ActiveCouncilTask = {
		GetCouncillor -> Character
		GetLocation -> Province
		GetPositionType -> CouncilPositionType
		GetProgressBreakdown -> ValueBreakdown
		GetTargetCourt -> Character
		GetTargetProvince -> Province
		GetTaskType -> CouncilTaskType
		GetTaskTypeOrDefault -> CouncilTaskType
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		CanBeFired -> bool
		CanBeReassigned -> bool
		GetETA -> CString
		GetName -> CString
		GetPositionName -> CString
		GetPositionNamePossesive -> CString
		GetPositionTooltip -> CString
		GetPositionType -> [unregistered]
		GetProgress -> CFixedPoint
		GetProgressBreakdown -> [unregistered]
		GetProgressFloat -> float
		GetProgressMax -> CFixedPoint
		GetProgressMaxFloat -> float
		GetProgressPie -> float
		GetScopes -> [unregistered]
		GetTaskEffect -> CString
		GetTaskTarget -> CString
		GetTaskTypeOrDefault -> [unregistered]
		GetTaskValueName -> CString
		HasCouncillor -> bool
		HasMainSkill -> bool
		IsAutomaticallyFilled -> bool
		IsFrozen -> bool
		IsValid -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	ActiveCouncilTaskIcon = {
		AccessSelf -> [unregistered]
		GetTasks -> [unregistered]
		OnClick -> void
		Self -> [unregistered]
	}

	Activity = {
		GetLocation -> Province
		GetOwner -> Character
		GetType -> ActivityType
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		Custom -> CString
		GetAccepted -> [unregistered]
		GetDeclined -> [unregistered]
		GetInvited -> [unregistered]
		GetLocation -> [unregistered]
		GetName -> CString
		GetOwner -> [unregistered]
		IsActivated -> bool
		MakeScope -> Scope
		Self -> [unregistered]
		WriteListOfAcceptedGuests -> CString
	}

	ActivityMapItem = {
		GetActivity -> Activity
		AccessSelf -> [unregistered]
		GetActivity -> [unregistered]
		OnClick -> void
		OnWatch -> void
		Self -> [unregistered]
	}

	ActivityType = {
		AccessSelf -> [unregistered]
		GetActivityShowAccepted -> bool
		GetBackground -> [unregistered]
		GetIcon -> [unregistered]
		GetName -> CString
		GetOwnerLabel -> CString
		HasActivityWindow -> bool
		HasIcon -> [unregistered]
		IsSolo -> bool
		Self -> [unregistered]
	}

	ActivityWindow = {
		GetActivity -> Activity
		AccessSelf -> [unregistered]
		CenterOnMap -> void
		Close -> void
		Self -> [unregistered]
	}

	AddFriendWindow = {
		AccessSelf -> [unregistered]
		Hide -> void
		Self -> [unregistered]
		ShouldBeShown -> bool
		Show -> void
	}

	AddTraditionWindow = {
		GetReplacedTradition -> CultureTradition
		GetSelectedTradition -> CultureTradition
		GetSelectedTraditionGrouping -> TraditionGrouping
		GetTraditionGrouping -> TraditionGrouping
		AccessSelf -> [unregistered]
		AddTradition -> void
		CanAddTradition -> bool
		CanBuyTradition -> bool
		CanPayCost -> bool
		CanPickAndBuyTradition -> bool
		CanPickTradition -> bool
		Close -> void
		GetBlockers -> CString
		GetCostBreakdown -> CString
		GetCostString -> CString
		GetPickTraditionBlockers -> CString
		GetReplacedTradition -> [unregistered]
		GetSelectedTradition -> [unregistered]
		GetSelectedTraditionGrouping -> [unregistered]
		GetTraditionCost -> CString
		GetTraditionCostBreakdown -> CString
		GetTraditionGrouping -> [unregistered]
		HasTraditionCategory -> bool
		IsReplacing -> bool
		Self -> [unregistered]
		SetSelectedTradition -> void
		SetTraditionCategory -> void
	}

	AllianceInfo = {
		GetCharacter -> Character
		GetMilitaryInfo -> GuiMilitaryStrength
		AccessSelf -> [unregistered]
		GetCharacter -> [unregistered]
		GetMilitaryInfo -> [unregistered]
		Self -> [unregistered]
	}

	AllyListSubview = {
		GetAllyList -> CharacterSelectionList
		AccessSelf -> [unregistered]
		Close -> void
		GetAllyList -> [unregistered]
		GetHeaderTitle -> CString
		IsShown -> bool
		Self -> [unregistered]
	}

	AnchorItem = {
		AccessSelf -> [unregistered]
		GetAnchorIndexAsString -> CString
		GetDisplayString -> CString
		GetIndexValidator -> [unregistered]
		GetTooltip -> CString
		IsExpanded -> bool
		IsLocked -> bool
		Self -> [unregistered]
		SetAnchorIndexCallback -> void
		ToggleExpanded -> void
		ToggleLock -> void
	}

	AnimationCurveValue = {
		ToolProperty -> ToolProperty
		AccessSelf -> [unregistered]
		AddKeyframeAtTimelineMarker -> void
		GetDataflowDirectionString -> CString
		GetXPreviewTexture -> [unregistered]
		GetYPreviewTexture -> [unregistered]
		HasKeyframeAfterTimelineMarker -> bool
		HasKeyframeAtTimelineMarker -> bool
		HasKeyframeBeforeTimelineMarker -> bool
		MoveTimelineMarkerToNextKeyframe -> void
		MoveTimelineMarkerToPreviousKeyframe -> void
		OpenSimplifiedCurveEditor -> void
		OpenXCurveEditor -> void
		OpenYCurveEditor -> void
		RemoveSelf -> void
		Self -> [unregistered]
		ToggleDataflowDirection -> void
	}

	AnimationEventLayer = {
		AccessSelf -> [unregistered]
		IsEnabled -> bool
		IsHovered -> bool
		Keyframes -> [unregistered]
		Self -> [unregistered]
		SetHovered -> void
	}

	AnimationKeyframe = {
		AccessSelf -> [unregistered]
		IsHovered -> bool
		IsSelected -> bool
		KeyframeColor -> CVector4f
		Label -> CString
		Self -> [unregistered]
		SetHovered -> void
		SetSelected -> void
		TimePoint -> float
	}

	AnimationTestGroupItem = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	AnimationTestWindow = {
		AccessSelf -> [unregistered]
		GetAnimationGroupItems -> [unregistered]
		GetSelectedAnimationGroup -> CString
		GetSelectedAnimationGroupIndex -> CVector2i
		Self -> [unregistered]
		SetSelectedAnimationGroup -> void
	}

	Application = {
		AccessSelf -> [unregistered]
		Quit -> void
		Self -> [unregistered]
	}

	AppointCourtPositionView = {
		GetAptitudeTooltip -> ValueBreakdown
		GetCourt -> CharacterSelectionList
		GetCourtOwner -> Character
		GetCourtPositionToReplace -> CourtPosition
		GetCourtPositionType -> CourtPositionType
		GetSelectedCharacter -> Character
		AccessSelf -> [unregistered]
		AppointSelectedCourtier -> void
		AppointingRevokeText -> CString
		CanShowCharacter -> bool
		Close -> void
		GetAICandidateScoreFor -> CFixedPoint
		GetAptitudeTextFor -> CString
		GetAptitudeTooltip -> [unregistered]
		GetCourt -> [unregistered]
		GetCourtOwner -> [unregistered]
		GetCourtPositionToReplace -> [unregistered]
		GetCourtPositionType -> [unregistered]
		GetLiegeModifierForPositionType -> CString
		GetLiegeModifierForSelectedEmployee -> CString
		GetOpinionBonusForSelectedEmployee -> int32
		GetSelectedCharacter -> [unregistered]
		HasSelectedCharacter -> bool
		IsAppointingNewPosition -> bool
		IsItemSelected -> bool
		IsReplacingPosition -> bool
		ReplaceRevokeText -> CString
		RevokeSelectedPosition -> void
		Self -> [unregistered]
	}

	Army = {
		GetCommander -> Character
		GetComposition -> ArmyComposition
		GetLocation -> Province
		GetOwner -> Character
		GetRaid -> Raid
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		CalcQualityLevel -> int32
		CommanderIsOwner -> bool
		GetAIInfo -> CString
		GetActivityFrame -> int32
		GetAiCoordinatorId -> int32
		GetAiSubUnitStackId -> int32
		GetAiUnitStackId -> int32
		GetArmyAttrition -> int32
		GetArmyAttritionBreakdown -> CString
		GetArmyAttritionBreakdownPercentage -> CString
		GetArmyAttritionPercentage -> CFixedPoint
		GetArmyId -> int32
		GetArmyQualityName -> CString
		GetArmyStatusIcon -> [unregistered]
		GetCombatPredictionForTooltip -> CString
		GetCommanderTooltip -> CString
		GetDescription -> CString
		GetDisembarkPenaltyDays -> int32
		GetEmbarkInfoForTooltip -> CString
		GetEventTroopsAssociatedWithWarTooltip -> CString
		GetGatheringDaysLeft -> int32
		GetGatheringProgress -> float
		GetLootCap -> CFixedPoint
		GetMovementInfoForTooltip -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		GetRaidLoot -> CFixedPoint
		GetRaisingFleetCost -> CFixedPoint
		GetSoldierCount -> int32
		GetSoldierCountString -> CString
		GetSpecialArmyStatus -> CString
		GetSupplyDesc -> CString
		GetSupplyInfoForTooltip -> CString
		GetSupplyStateTooltip -> CString
		GetUnitId -> int32
		HasEventTroops -> bool
		HasLooterStance -> bool
		IsEmbarked -> bool
		IsEnemyOrHostileToPlayer -> bool
		IsGathering -> bool
		IsHovered -> bool
		IsMoving -> bool
		IsNeutralToPlayer -> bool
		IsRaidArmy -> bool
		IsRaidLootCapped -> bool
		IsRecentlyDisembarked -> bool
		IsRetreating -> bool
		IsSelected -> bool
		IsSieging -> bool
		IsTakingRaidAction -> bool
		MakeScope -> Scope
		OnMouseEnter -> void
		OnMouseLeave -> void
		Self -> [unregistered]
	}

	ArmyComposition = {
		AccessSelf -> [unregistered]
		CalcQualityLevel -> int32
		CalcUnraisedQualityLevel -> int32
		GetArmyCompositionString -> CString
		GetArmyCompositionTooltip -> CString
		GetArmyQualityName -> CString
		GetCurrentNumberOfLevies -> int32
		GetCurrentNumberOfSoldiers -> int32
		GetLeviesCountString -> CString
		GetMaxNumberOfLevies -> int32
		GetMaxNumberOfMAA -> int32
		GetMaxNumberOfSoldiers -> int32
		GetName -> CString
		GetSoldierCountString -> CString
		GetUnraisedArmyCompositionString -> CString
		GetUnraisedArmyCompositionTooltip -> CString
		GetUnraisedArmyQualityName -> CString
		GetUnraisedNumberOfSoldiers -> int32
		HasRaisedSoldiers -> bool
		Self -> [unregistered]
	}

	ArmyRegiment = {
		GetFromVassal -> Character
		GetRegiment -> Regiment
		AccessSelf -> [unregistered]
		GetCount -> int32
		GetFromVassal -> [unregistered]
		GetMax -> int32
		GetRegiment -> [unregistered]
		IsEventTroops -> bool
		IsKnight -> bool
		IsLevies -> bool
		IsMAA -> bool
		Self -> [unregistered]
	}

	ArmyReorgWindow = {
		GetLeftArmy -> Army
		GetLeftArmyComposition -> ArmyComposition
		GetRightArmy -> Army
		GetRightArmyComposition -> ArmyComposition
		AccessSelf -> [unregistered]
		CanDisband -> bool
		CanDisbandTooltip -> CString
		DisbandLeft -> void
		DisbandRight -> void
		GetLeftArmy -> [unregistered]
		GetLeftArmyComposition -> [unregistered]
		GetLeftArmyName -> CString
		GetLeftItems -> [unregistered]
		GetLeftMaintenance -> CString
		GetRightArmy -> [unregistered]
		GetRightArmyComposition -> [unregistered]
		GetRightArmyName -> CString
		GetRightItems -> [unregistered]
		GetRightMaintenance -> CString
		Hide -> void
		SelectLeft -> void
		SelectRight -> void
		Self -> [unregistered]
	}

	ArmyWindow = {
		GetArmy -> Army
		GetAttachedToArmy -> Army
		GetCommanderMartialSkill -> SkillItem
		GetUnitItem -> UnitItem
		AccessSelf -> [unregistered]
		AttachToLocalUnit -> void
		BuildAttachToUnitTooltip -> CString
		BuildDetachFromUnitTooltip -> CString
		BuildDisbandTooltip -> CString
		BuildEventTroopList -> CString
		BuildMergeTooltip -> CString
		BuildReorgTooltip -> CString
		BuildSplitCustomTooltip -> CString
		BuildSplitForSiegeTooltip -> CString
		BuildSplitHalfTooltip -> CString
		BuildSplitHiredAndEventTroopsTooltip -> CString
		BuildToggleRaidingTooltip -> CString
		CanAttachToAnyLocalUnit -> bool
		CanAttachToMultipleLocalUnits -> bool
		CanDetachFromUnit -> bool
		CanDisband -> bool
		CanMerge -> bool
		CanReorgSelected -> bool
		CanShowCommanders -> bool
		CanSplitCustomSelected -> bool
		CanSplitHalfSelected -> bool
		CanSplitSelectedForSiege -> bool
		CanSplitSelectedHiredAndEventTroops -> bool
		CanStopGathering -> bool
		CanToggleRaiding -> bool
		Close -> void
		CloseAndDeselect -> void
		DetachFromUnit -> void
		DisbandSelected -> void
		GetAllArmiesCompositionString -> CString
		GetArmyCompositionString -> CString
		GetAttachedToArmy -> [unregistered]
		GetCommanderTraits -> [unregistered]
		GetCurrentNumberOfSoldiers -> int32
		GetCurrentSupply -> int32
		GetEmbarkedInfo -> CString
		GetFullSupplyCapacity -> int32
		GetHiredTroopItems -> [unregistered]
		GetKnightCount -> int32
		GetKnightCountStringTooltip -> CString
		GetLeviesAlive -> int32
		GetLeviesCountStringTooltip -> CString
		GetLeviesMax -> int32
		GetMaaAlive -> int32
		GetMaaCountStringTooltip -> CString
		GetMaaMax -> int32
		GetMaxNumberOfSoldiers -> int32
		GetPossibleCommandersString -> CString
		GetSelectedUnitItems -> [unregistered]
		GetShowCommandersTooltip -> CString
		GetSoldierCountString -> CString
		GetSupplyStateFrame -> int32
		GetTotalSoldierCountString -> CString
		GetTroopItems -> [unregistered]
		IsAttachedToAnyUnit -> bool
		MergeSelected -> void
		NextArmy -> void
		OnNoCommanderClick -> void
		PreviousArmy -> void
		SelectThisUnitOnly -> void
		Self -> [unregistered]
		ShowCommanders -> void
		ShowSiege -> void
		ShowSupplyTrend -> bool
		SplitHalfSelected -> void
		SplitSelectedForSiege -> void
		SplitSelectedHiredAndEventTroops -> void
		StopGathering -> void
		ToggleAttachToWindow -> void
		ToggleLooting -> void
		ToggleRaiding -> void
		ToggleReorganizationWindow -> void
		ToggleSplitArmyWindow -> void
	}

	Artifact = {
		GetAssociatedTitle -> Title
		GetCulture -> Culture
		GetHistory -> ArtifactHistory
		GetOwner -> Character
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		CanBenefit -> bool
		CanBenefitPlayer -> bool
		CanPlayerEquip -> bool
		CanReforge -> bool
		CanReforgeOrRepair -> bool
		CanRepair -> bool
		Custom -> CString
		GetAge -> int32
		GetAssociatedTitle -> [unregistered]
		GetCanBenefitPlayerDesc -> CString
		GetCanPlayerEquipDesc -> CString
		GetCategory -> CString
		GetCreator -> [unregistered]
		GetCulture -> [unregistered]
		GetDesc -> CString
		GetDurability -> CFixedPoint
		GetDurabilityTooltip -> CString
		GetFallbackEffects -> CString
		GetFeatureText -> CString
		GetForgottenSoldiersCount -> int32
		GetHistory -> [unregistered]
		GetHouseClaimants -> [unregistered]
		GetHouseClaimantsString -> CString
		GetID -> uint32
		GetIcon -> [unregistered]
		GetIconFrame -> int32
		GetKills -> [unregistered]
		GetMaxDurability -> CFixedPoint
		GetModifierEffects -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		GetOwner -> [unregistered]
		GetPersonalClaimants -> [unregistered]
		GetPlayerModifierEffects -> CString
		GetRarity -> CString
		GetRarityAndSlotType -> CString
		GetRarityAndType -> CString
		GetRarityColor -> CVector4f
		GetReforgeOrRepairTooltip -> CString
		GetReforgeTooltip -> CString
		GetRepairTooltip -> CString
		GetSlotType -> CString
		GetType -> CString
		GetYearsUntilDecay -> int32
		GetYearsUntilHouseClaim -> int32
		HasCanBenefit -> bool
		HasClaim -> bool
		HasFeature -> bool
		HasFeatureOfType -> bool
		HasImminentHouseClaim -> bool
		IsCourtArtifact -> bool
		IsDurabilityLow -> bool
		IsInventoryArtifact -> bool
		IsUnique -> bool
		IsValid -> bool
		MakeScope -> Scope
		OpenArtifactKills -> void
		OpenRenameWindow -> void
		Self -> [unregistered]
		ShouldDecay -> bool
	}

	ArtifactClaim = {
		GetArtifact -> Artifact
		AccessSelf -> [unregistered]
		GetArtifact -> [unregistered]
		IsHouseClaim -> bool
		IsPersonalClaim -> bool
		Self -> [unregistered]
	}

	ArtifactClaimsList = {
		AccessSelf -> [unregistered]
		GetClaims -> [unregistered]
		GetNumClaims -> int32
		GetSortOptions -> [unregistered]
		GetSortOptionsIndex -> CVector2i
		IsSortOrderDescending -> bool
		Self -> [unregistered]
		SortClaims -> void
		ToggleSortOrder -> void
	}

	ArtifactDetailsView = {
		GetArtifact -> Artifact
		AccessSelf -> [unregistered]
		Close -> void
		GetArtifact -> [unregistered]
		GetClaimants -> [unregistered]
		Self -> [unregistered]
	}

	ArtifactHelperWindow = {
		GetSelectedType -> ArtifactType
		GetSelectedVisualType -> ArtifactVisualType
		AccessSelf -> [unregistered]
		CanCreate -> bool
		CreateArtifact -> void
		GetArtifactTypes -> [unregistered]
		GetArtifactVisualTypes -> [unregistered]
		GetEntitiesList -> [unregistered]
		GetSelectedAsset -> CString
		GetSelectedType -> [unregistered]
		GetSelectedVisualType -> [unregistered]
		HasSelectedAsset -> bool
		HasSelectedType -> bool
		HasSelectedVisualType -> bool
		IsAssetSelected -> bool
		IsEntitiesCategory -> bool
		IsTypeSelected -> bool
		IsVisualTypeSelected -> bool
		OnAssetSelect -> void
		OnFilterUpdate -> void
		OnTypeSelect -> void
		OnVisualTypeSelect -> void
		Self -> [unregistered]
		SetEntitiesCategory -> void
		UpdateEntities -> void
	}

	ArtifactHistory = {
		AccessSelf -> [unregistered]
		GetEntries -> [unregistered]
		Self -> [unregistered]
	}

	ArtifactKillListWindow = {
		GetArtifact -> Artifact
		GetKills -> CharacterSelectionList
		AccessSelf -> [unregistered]
		Close -> void
		GetArtifact -> [unregistered]
		GetKills -> [unregistered]
		Self -> [unregistered]
	}

	ArtifactSettings = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	ArtifactType = {
		AccessSelf -> [unregistered]
		GetKey -> CString
		Self -> [unregistered]
	}

	ArtifactVisualType = {
		AccessSelf -> [unregistered]
		GetKey -> CString
		Self -> [unregistered]
	}

	AssetSettings = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	AttachToArmyWindow = {
		GetSelectedArmy -> Army
		AccessLocalUnits -> [unregistered]
		AccessSelf -> [unregistered]
		AttachToSelected -> void
		GetSelectedArmy -> [unregistered]
		HasSelectedUnit -> bool
		Hide -> void
		IsSelectedUnit -> bool
		SelectUnit -> void
		Self -> [unregistered]
	}

	Attribute = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetValue -> float
		OnValueChanged -> void
		Self -> [unregistered]
	}

	AudioEventHandler = {
		AccessSelf -> [unregistered]
		AddSoundParamter -> void
		RemoveLastSoundParameter -> void
		Self -> [unregistered]
	}

	AvailabilityEntry = {
		AccessSelf -> [unregistered]
		GetAvailabilityString -> CUTF8String
		Self -> [unregistered]
	}

	BattleEvent = {
		GetLeftCharacter -> Character
		GetRightCharacter -> Character
		AccessSelf -> [unregistered]
		GetLeftCharacter -> [unregistered]
		GetOutcomeDesc -> CString
		GetRightCharacter -> [unregistered]
		GetTitle -> CString
		IsDeath -> bool
		IsImprison -> bool
		IsShowForPlayer -> bool
		IsWound -> bool
		Self -> [unregistered]
	}

	BattleSummaryWindow = {
		GetCombatResultData -> CombatResultData
		GetLeftSideCommander -> Character
		GetLeftSideMainParticipant -> Character
		GetLeftSideResult -> CombatSideResultData
		GetLocation -> Province
		GetPlayerOpponentSideResult -> CombatSideResultData
		GetPlayerSideResult -> CombatSideResultData
		GetRightSideCommander -> Character
		GetRightSideMainParticipant -> Character
		GetRightSideResult -> CombatSideResultData
		AccessSelf -> [unregistered]
		AfterDismiss -> void
		Close -> void
		Dismiss -> void
		GetBattleEvents -> [unregistered]
		GetBonusLeft -> int32
		GetBonusRight -> int32
		GetEndDate -> CString
		GetEventSequence -> [unregistered]
		GetEventSequenceSizeText -> CString
		GetKnightKills -> CFixedPoint
		GetKnightsSortIndex -> CVector2i
		GetKnightsSortOptions -> [unregistered]
		GetLeftArmyStretch -> int32
		GetLeftCounter -> [unregistered]
		GetLeftCounteredBy -> [unregistered]
		GetLeftKnightsStats -> [unregistered]
		GetLeftSideCommanderTooltip -> CString
		GetLeftSideRealmFlagTooltip -> CString
		GetLeftSoldiersStats -> [unregistered]
		GetLeftTotalTooltip -> CString
		GetLocation -> [unregistered]
		GetName -> CString
		GetOutcomeText -> CString
		GetRightArmyStretch -> int32
		GetRightCounter -> [unregistered]
		GetRightCounteredBy -> [unregistered]
		GetRightKnightsStats -> [unregistered]
		GetRightSideCommanderTooltip -> CString
		GetRightSideRealmFlagTooltip -> CString
		GetRightSoldiersStats -> [unregistered]
		GetRightTotalTooltip -> CString
		GetSoldiersSortIndex -> CVector2i
		GetSoldiersSortOptions -> [unregistered]
		GetTerrainBonus -> CFixedPoint
		GetWarScore -> CFixedPoint
		GetWonLostLabel -> CString
		GoToProvince -> void
		HasEventSequence -> bool
		HasPlayer -> bool
		HasPlayerLost -> bool
		HasPlayerWon -> bool
		IsAutoExpand -> bool
		IsBigLosses -> bool
		IsKnightKilled -> bool
		IsKnightWounded -> bool
		IsKnightsShown -> bool
		IsMinorBattle -> bool
		IsPlayerAttacker -> bool
		IsSoldiersShown -> bool
		IsSortDescending -> bool
		OnShowKnights -> void
		OnShowSoldiers -> void
		PanToLeftTitleProvince -> void
		PanToRightTitleProvince -> void
		RestoreSort -> void
		Self -> [unregistered]
		SetDisplayedPhase -> void
		SortKnights -> void
		SortSoldiers -> void
		ToggleAutoExpand -> void
		ToggleSortOrder -> void
	}

	BlackmailInteractionWindow = {
		GetCharacterInteractionConfirmationWindow -> CharacterInteractionConfirmationWindow
		AccessSelf -> [unregistered]
		CanSendOffer -> bool
		Close -> void
		GetCharacterInteractionConfirmationWindow -> [unregistered]
		GetDescription -> CString
		GetSecretItems -> [unregistered]
		GetSendOfferTooltip -> CString
		HasSecrets -> bool
		IsBlackmail -> bool
		Self -> [unregistered]
		Send -> void
	}

	BlackmailSecretItem = {
		GetSecret -> Secret
		AccessSelf -> [unregistered]
		GetSecret -> [unregistered]
		GetTooltip -> CString
		IsEnabled -> bool
		IsSelected -> bool
		IsStrongHook -> bool
		IsWeakHook -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	BlurThreshold = {
		AccessSelf -> [unregistered]
		GetValue -> float
		Self -> [unregistered]
		SetValue -> void
		SetValueStr -> void
	}

	Bookmark = {
		GetDate -> Date
		AccessSelf -> [unregistered]
		GetBackground -> [unregistered]
		GetButtonIcon -> [unregistered]
		GetButtonIconBig -> [unregistered]
		HasButtonIcon -> [unregistered]
		HasButtonIconBig -> [unregistered]
		IsKey -> bool
		IsRecommended -> bool
		Self -> [unregistered]
	}

	BookmarkCharacter = {
		GetDynastyTemplate -> DynastyTemplate
		GetGovernmentType -> GovernmentType
		GetLandedTitleTemplate -> LandedTitpleTemplate
		AccessSelf -> [unregistered]
		GetAge -> int32
		GetCultureName -> CString
		GetDescription -> CString
		GetDifficulty -> CString
		GetDynastySplendorFrame -> int32
		GetGuiPosition -> CVector2f
		GetLocationImage -> [unregistered]
		GetName -> CString
		GetRelation -> CString
		GetReligionName -> CString
		GetTitleName -> CString
		GetTitleTierName -> CString
		GetTooltip -> CString
		HasTitle -> bool
		Self -> [unregistered]
	}

	BookmarkCharacterGUI = {
		GetCharacter -> BookmarkCharacter
		AccessSelf -> [unregistered]
		GetAnimatedPortrait -> [unregistered]
		GetPortrait -> [unregistered]
		GetRelatedCharacters -> [unregistered]
		GetTier -> int32
		HoverEnd -> void
		HoverStart -> void
		IsSelected -> bool
		Select -> void
		Self -> [unregistered]
	}

	BookmarkItem = {
		GetBookmark -> Bookmark
		GetDate -> Date
		AccessSelf -> [unregistered]
		GetBookmark -> [unregistered]
		GetDate -> [unregistered]
		GetName -> CString
		GetYear -> CString
		IsSelected -> bool
		Select -> void
		Self -> [unregistered]
	}

	BookmarkPortrait = {
		AccessSelf -> [unregistered]
		GetPortrait -> [unregistered]
		Self -> [unregistered]
	}

	BottomBarSchemeItem = {
		GetScheme -> Scheme
		AccessSelf -> [unregistered]
		OnClick -> void
		Self -> [unregistered]
	}

	BrushBool = {
		AccessSelf -> [unregistered]
		Get -> bool
		Self -> [unregistered]
		Set -> void
		Toggle -> void
	}

	BrushFloat = {
		AccessSelf -> [unregistered]
		DecreaseBySmallStep -> void
		DecreaseByStep -> void
		IncreaseBySmallStep -> void
		IncreaseByStep -> void
		Max -> float
		Min -> float
		ScaledValue -> float
		Self -> [unregistered]
		SetMax -> void
		SetMin -> void
		SetScaledValue -> void
		SetStepSize -> void
		SetValue -> void
		SetValueArg -> void
		SetValueFromWidget -> void
		SmallStepSize -> float
		StepSize -> float
		Value -> float
	}

	BrushSettings = {
		Amount -> BrushFloat
		Hardness -> BrushFloat
		PixelSnap -> BrushBool
		Radius -> BrushFloat
		AccessSelf -> [unregistered]
		Amount -> [unregistered]
		Diameter -> float
		Hardness -> [unregistered]
		PixelSnap -> [unregistered]
		Radius -> [unregistered]
		Self -> [unregistered]
		SetAmount -> void
		SetDiameter -> void
		SetHardness -> void
	}

	BrushSettingsDropdown = {
		Settings -> BrushSettings
		AccessSelf -> [unregistered]
		GetBrushDiameter -> float
		Self -> [unregistered]
		Settings -> [unregistered]
		Thumbnail -> [unregistered]
		Toggle -> void
	}

	BrushSettingsGlobal = {
		AccessSelf -> [unregistered]
		GetDisplayAmountNames -> [unregistered]
		IsDisplayAmountActive -> bool
		Self -> [unregistered]
		SetIsDisplayAmountFromString -> void
	}

	Building = {
		AccessSelf -> [unregistered]
		GetBaseCostDescription -> CString
		GetDescription -> CString
		GetEffectDescription -> CString
		GetEffectDescriptionAtProvince -> CString
		GetIcon -> [unregistered]
		GetIllustration -> [unregistered]
		GetKey -> CString
		GetLevel -> int32
		GetName -> CString
		GetNameNoTooltip -> CString
		GetTypeDescription -> CString
		GetTypeIcon -> [unregistered]
		GetTypeName -> CString
		Self -> [unregistered]
	}

	BuildingLevelItem = {
		GetBuilding -> Building
		AccessSelf -> [unregistered]
		GetIcon -> [unregistered]
		GetTooltip -> CString
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	CCourtLanguageMapIcon = {
		GetGrandestLanguage -> CulturePillar
		GetNativeLanguage -> CulturePillar
		AccessSelf -> [unregistered]
		GetGrandestLanguage -> [unregistered]
		GetNativeLanguage -> [unregistered]
		HasGrandestLanguage -> bool
		HasNativeLanguage -> bool
		Self -> [unregistered]
	}

	CFixedPoint = {
		AccessSelf -> [unregistered]
		GetFixedPoint -> [unregistered]
		Self -> [unregistered]
	}

	CPdxEnumValue = {
		AccessSelf -> [unregistered]
		GetDropdownEntries -> [unregistered]
		GetDropdownValueIndex -> CVector2i
		GetValueString -> CString
		Self -> [unregistered]
		SetDropdownValueIndex -> void
	}

	CPdxFloatRect = {
		AccessSelf -> [unregistered]
		GetRect -> [unregistered]
		Self -> [unregistered]
	}

	CPdxInputBindingSetting = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	CPdxIntRect = {
		AccessSelf -> [unregistered]
		GetRect -> [unregistered]
		Self -> [unregistered]
	}

	CSelectCommanderWindow = {
		GetArmy -> Army
		GetListItems -> CharacterSelectionList
		AccessSelf -> [unregistered]
		CanDetachCommander -> bool
		Close -> void
		DetachCommander -> void
		GetArmy -> [unregistered]
		GetListItems -> [unregistered]
		Self -> [unregistered]
	}

	CString = {
		AccessSelf -> [unregistered]
		GetString -> [unregistered]
		Self -> [unregistered]
	}

	CUTF8String = {
		AccessSelf -> [unregistered]
		GetString -> [unregistered]
		Self -> [unregistered]
	}

	CVector2f = {
		AccessSelf -> [unregistered]
		GetVector -> [unregistered]
		Self -> [unregistered]
	}

	CVector2i = {
		AccessSelf -> [unregistered]
		GetVector -> [unregistered]
		Self -> [unregistered]
	}

	CVector3f = {
		AccessSelf -> [unregistered]
		GetVector -> [unregistered]
		Self -> [unregistered]
	}

	CVector3i = {
		AccessSelf -> [unregistered]
		GetVector -> [unregistered]
		Self -> [unregistered]
	}

	CVector4f = {
		AccessSelf -> [unregistered]
		GetVector -> [unregistered]
		Self -> [unregistered]
	}

	CVector4i = {
		AccessSelf -> [unregistered]
		GetVector -> [unregistered]
		Self -> [unregistered]
	}

	CallAllyInteractionNotificationWindow = {
		GetPrimaryAlly -> Character
		GetPrimaryEnemy -> Character
		AccessSelf -> [unregistered]
		GetPrimaryAlly -> [unregistered]
		GetPrimaryEnemy -> [unregistered]
		GetRejectEffectDescription -> CString
		GetSecondaryAllies -> [unregistered]
		GetSecondaryEnemies -> [unregistered]
		HasRejectEffectDescription -> bool
		Self -> [unregistered]
	}

	CallAllyInteractionWindow = {
		GetCharacterInteractionConfirmationWindow -> CharacterInteractionConfirmationWindow
		AccessSelf -> [unregistered]
		CanSendOffer -> bool
		Close -> void
		GetCallAllyDescription -> CString
		GetCharacterInteractionConfirmationWindow -> [unregistered]
		GetSendOfferTooltip -> CString
		GetWarItems -> [unregistered]
		HasWars -> bool
		Self -> [unregistered]
		Send -> void
	}

	CallAllyWarItem = {
		GetWar -> War
		AccessSelf -> [unregistered]
		GetTooltip -> CString
		GetWar -> [unregistered]
		IsEnabled -> bool
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	Camera = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	CameraItem = {
		AccessSelf -> [unregistered]
		Activate -> void
		GetCameraName -> CString
		IsSelected -> bool
		Self -> [unregistered]
	}

	CantCreateOrJoinFactionVassal = {
		GetVassal -> Character
		AccessSelf -> [unregistered]
		GetTooltip -> CString
		IsSoftBlock -> bool
		Self -> [unregistered]
	}

	CapitalMapIcon = {
		GetNameTitle -> Title
		GetOwner -> Character
		GetProvince -> Province
		GetTitle -> Title
		AccessSelf -> [unregistered]
		IsAtWarWithMe -> bool
		IsLarge -> bool
		IsLiege -> bool
		IsMarked -> bool
		IsMe -> bool
		IsMyAlly -> bool
		IsMyAllyInWar -> bool
		IsMyAllyNotInWar -> bool
		IsMyRaidTarget -> bool
		IsOtherRealm -> bool
		IsPeer -> bool
		IsRaidingMe -> bool
		IsRealmCapital -> bool
		IsTopLiege -> bool
		IsVassal -> bool
		OnHoldingClicked -> void
		Self -> [unregistered]
		ShouldBeShown -> bool
	}

	CasusBelliItem = {
		GetType -> CasusBelliType
		AccessSelf -> [unregistered]
		GetCharacter -> [unregistered]
		GetInvalidText -> CString
		GetLabel -> CString
		GetType -> [unregistered]
		IsSelected -> bool
		IsValid -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	CasusBelliTitleItem = {
		GetTitle -> Title
		AccessSelf -> [unregistered]
		GetBlockers -> CString
		GetName -> CString
		GetSize -> CVector2f
		GetTitle -> [unregistered]
		IsEnabled -> bool
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	CasusBelliType = {
		AccessSelf -> [unregistered]
		GetIcon -> [unregistered]
		GetName -> CString
		GuiAttackerFaithMightJoin -> bool
		GuiDefenderFaithMightJoin -> bool
		IsWhitePeacePossible -> bool
		Self -> [unregistered]
	}

	ChangeGHWTargetWindow = {
		AccessSelf -> [unregistered]
		CanConfirm -> bool
		CanConfirmDesc -> CString
		Close -> void
		GetCost -> CString
		GetCostTooltip -> CString
		GetTitles -> [unregistered]
		HasCost -> bool
		OnConfirm -> void
		Self -> [unregistered]
	}

	ChangeGHWTargetWindowTitleItem = {
		GetTitle -> Title
		AccessSelf -> [unregistered]
		GetDefenders -> [unregistered]
		GetName -> CString
		GetSize -> CVector2f
		GetTitle -> [unregistered]
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	Character = {
		CalculateGrandeurFromCourtLanguageBreakdown -> ValueBreakdown
		GetActiveCouncilTask -> ActiveCouncilTask
		GetActiveLawInGroupWithFlag -> Law
		GetBeneficiary -> Character
		GetBetrothed -> Character
		GetBirthDate -> Date
		GetCapitalLocation -> Province
		GetCharacterEmployedAs -> Character
		GetConcubinist -> Character
		GetConsort -> Character
		GetConsortOrBetrothed -> Character
		GetCouncillor -> Character
		GetCouncillorPosition -> ActiveCouncilTask
		GetCourtGrandeurData -> CourtGrandeurData
		GetCourtLanguage -> CulturePillar
		GetCourtLanguageAdoptionDate -> Date
		GetCulture -> Culture
		GetCurrentActivity -> Activity
		GetCurrentInspiration -> Inspiration
		GetCurrentLocation -> Province
		GetDeathDate -> Date
		GetDesignatedHeir -> Character
		GetDynasty -> Dynasty
		GetEmployer -> Character
		GetFaith -> Faith
		GetFather -> Character
		GetFocus -> FocusType
		GetFocusType -> FocusType
		GetGovernment -> GovernmentType
		GetHookOn -> Hook
		GetHouse -> DynastyHouse
		GetImprisonedBy -> Character
		GetInventory -> Inventory
		GetJoinCourtDate -> Date
		GetKiller -> Character
		GetKnightArmy -> Army
		GetLastTriggeredPendingCourtEventsDate -> Date
		GetLiege -> Character
		GetLiegeEvenWhenDead -> Character
		GetLiegeTitleEvenWhenDead -> Title
		GetLifestyle -> Lifestyle
		GetMother -> Character
		GetPlayerHeir -> Character
		GetPrimaryHolding -> Title
		GetPrimarySpouse -> Character
		GetPrimarySpouseOrBetrothed -> Character
		GetPrimaryTitle -> Title
		GetRaidHostilityEnd -> Date
		GetRealFather -> Character
		GetRelationOfType -> Character
		GetSealCoA -> CoatOfArms
		GetTopLiege -> Character
		GetTraitFromGroup -> Trait
		GetVassalContract -> VassalContract
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		AdoptCourtLanguage -> void
		AdoptCourtLanguageNoPopup -> void
		CalcMorphGeneAttribute -> float
		CalcUnusedConsortSlots -> int32
		CalcUnusedSecondarySpouseSlots -> int32
		CalcUnusedSpouseSlots -> int32
		CalculateGrandeurFromCourtLanguage -> CFixedPoint
		CalculateGrandeurFromCourtLanguageBreakdown -> [unregistered]
		CanAdoptCourtLanguage -> bool
		CanBePunished -> [unregistered]
		CanCharacterBeRenamed -> bool
		CanCustomizePortrait -> bool
		CanHaveConsorts -> bool
		CanPlayerChangeMyFocus -> bool
		CanRaid -> bool
		CanRaiseRegiments -> [unregistered]
		CanStartRaid -> bool
		CharacterKnowsOfKiller -> bool
		CourtierWantsToLeaveCourt -> bool
		Custom -> CString
		Custom2 -> CString
		Custom2_Flag -> CString
		Custom2_Title -> CString
		EmploysCourtPositions -> bool
		GetAIBoldness -> int32
		GetAIBoldnessAsAffectedByPlayerDread -> [unregistered]
		GetAICompassion -> int32
		GetAIEnergy -> int32
		GetAIGreed -> int32
		GetAIHonor -> int32
		GetAIPersonality -> CString
		GetAIRationality -> int32
		GetAISociability -> int32
		GetAIVengefulness -> int32
		GetAIZeal -> int32
		GetActiveCouncilTask -> [unregistered]
		GetActiveLawInGroupWithFlag -> [unregistered]
		GetAdoptCourtLanguageCost -> CString
		GetAge -> int32
		GetAgeInfo -> CString
		GetAiBudgetDescription -> CString
		GetAnimatedPortrait -> [unregistered]
		GetApprovalReasons -> CString
		GetAwayCourtiers -> [unregistered]
		GetBalance -> [unregistered]
		GetBalanceBreakdown -> [unregistered]
		GetBanishReasons -> CString
		GetBaseWeight -> int32
		GetBeneficiary -> Character
		GetBetrothed -> [unregistered]
		GetBirthDate -> [unregistered]
		GetCachedPortrait -> [unregistered]
		GetCanAdoptCourtLanguageText -> CString
		GetCapitalLocation -> [unregistered]
		GetCharacterEmployedAs -> [unregistered]
		GetCharacterRelationCombine -> CString
		GetCharacterViewName -> [unregistered]
		GetCharacterViewNameNicknamed -> [unregistered]
		GetCharacterViewNameNicknamedNoTooltip -> [unregistered]
		GetCharacterViewNameNicknamedNoTooltipRegnal -> [unregistered]
		GetCharacterViewNameNicknamedOrMe -> [unregistered]
		GetCharacterViewNameNicknamedOrMeNoTooltip -> [unregistered]
		GetCharacterViewNameNicknamedOrMeNoTooltipRegnal -> [unregistered]
		GetCharacterViewNameNicknamedOrMeRegnal -> [unregistered]
		GetCharacterViewNameNicknamedPossessive -> [unregistered]
		GetCharacterViewNameNicknamedPossessiveNoTooltip -> [unregistered]
		GetCharacterViewNameNicknamedPossessiveNoTooltipRegnal -> [unregistered]
		GetCharacterViewNameNicknamedPossessiveOrMy -> [unregistered]
		GetCharacterViewNameNicknamedPossessiveOrMyNoTooltip -> [unregistered]
		GetCharacterViewNameNicknamedPossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetCharacterViewNameNicknamedPossessiveOrMyRegnal -> [unregistered]
		GetCharacterViewNameNicknamedPossessiveRegnal -> [unregistered]
		GetCharacterViewNameNicknamedRegnal -> [unregistered]
		GetCharacterViewNameNoTooltip -> [unregistered]
		GetCharacterViewNameNoTooltipRegnal -> [unregistered]
		GetCharacterViewNameOrMe -> [unregistered]
		GetCharacterViewNameOrMeNoTooltip -> [unregistered]
		GetCharacterViewNameOrMeNoTooltipRegnal -> [unregistered]
		GetCharacterViewNameOrMeRegnal -> [unregistered]
		GetCharacterViewNamePossessive -> [unregistered]
		GetCharacterViewNamePossessiveNoTooltip -> [unregistered]
		GetCharacterViewNamePossessiveNoTooltipRegnal -> [unregistered]
		GetCharacterViewNamePossessiveOrMy -> [unregistered]
		GetCharacterViewNamePossessiveOrMyNoTooltip -> [unregistered]
		GetCharacterViewNamePossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetCharacterViewNamePossessiveOrMyRegnal -> [unregistered]
		GetCharacterViewNamePossessiveRegnal -> [unregistered]
		GetCharacterViewNameRegnal -> [unregistered]
		GetClaimedArtifacts -> [unregistered]
		GetCommanderAdvantage -> int32
		GetCommanderAdvantageDesc -> CString
		GetCommanderLeadingOwnAdvantageDesc -> CString
		GetConcubineName -> [unregistered]
		GetConcubinist -> [unregistered]
		GetConsort -> [unregistered]
		GetConsortOrBetrothed -> [unregistered]
		GetContextTooltip -> CString
		GetCouncilTitle -> CString
		GetCouncilTitleBasePossessive -> CString
		GetCouncilTitleFirstName -> [unregistered]
		GetCouncilTitleFirstNameNicknamed -> [unregistered]
		GetCouncilTitleFirstNameNicknamedNoTooltip -> [unregistered]
		GetCouncilTitleFirstNameNicknamedNoTooltipRegnal -> [unregistered]
		GetCouncilTitleFirstNameNicknamedOrMe -> [unregistered]
		GetCouncilTitleFirstNameNicknamedOrMeNoTooltip -> [unregistered]
		GetCouncilTitleFirstNameNicknamedOrMeNoTooltipRegnal -> [unregistered]
		GetCouncilTitleFirstNameNicknamedOrMeRegnal -> [unregistered]
		GetCouncilTitleFirstNameNicknamedPossessive -> [unregistered]
		GetCouncilTitleFirstNameNicknamedPossessiveNoTooltip -> [unregistered]
		GetCouncilTitleFirstNameNicknamedPossessiveNoTooltipRegnal -> [unregistered]
		GetCouncilTitleFirstNameNicknamedPossessiveOrMy -> [unregistered]
		GetCouncilTitleFirstNameNicknamedPossessiveOrMyNoTooltip -> [unregistered]
		GetCouncilTitleFirstNameNicknamedPossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetCouncilTitleFirstNameNicknamedPossessiveOrMyRegnal -> [unregistered]
		GetCouncilTitleFirstNameNicknamedPossessiveRegnal -> [unregistered]
		GetCouncilTitleFirstNameNicknamedRegnal -> [unregistered]
		GetCouncilTitleFirstNameNoTooltip -> [unregistered]
		GetCouncilTitleFirstNameNoTooltipRegnal -> [unregistered]
		GetCouncilTitleFirstNameOrMe -> [unregistered]
		GetCouncilTitleFirstNameOrMeNoTooltip -> [unregistered]
		GetCouncilTitleFirstNameOrMeNoTooltipRegnal -> [unregistered]
		GetCouncilTitleFirstNameOrMeRegnal -> [unregistered]
		GetCouncilTitleFirstNamePossessive -> [unregistered]
		GetCouncilTitleFirstNamePossessiveNoTooltip -> [unregistered]
		GetCouncilTitleFirstNamePossessiveNoTooltipRegnal -> [unregistered]
		GetCouncilTitleFirstNamePossessiveOrMy -> [unregistered]
		GetCouncilTitleFirstNamePossessiveOrMyNoTooltip -> [unregistered]
		GetCouncilTitleFirstNamePossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetCouncilTitleFirstNamePossessiveOrMyRegnal -> [unregistered]
		GetCouncilTitleFirstNamePossessiveRegnal -> [unregistered]
		GetCouncilTitleFirstNameRegnal -> [unregistered]
		GetCouncilTitleForPosition -> CString
		GetCouncilTitleForPositionPossessive -> CString
		GetCouncilTitlePossessive -> CString
		GetCouncillor -> [unregistered]
		GetCouncillorModifierDesc -> CString
		GetCourt -> [unregistered]
		GetCourtGrandeurData -> [unregistered]
		GetCourtGrandeurDiffFromExpectedLevelModifierCombinedDescription -> CString
		GetCourtGrandeurDiffFromExpectedLevelWithoutGraceModifierCombinedDescription -> CString
		GetCourtLanguage -> [unregistered]
		GetCourtLanguageAdoptionDate -> [unregistered]
		GetCourtScenePosition -> CVector2f
		GetCourtierLeaveDescription -> CString
		GetCulture -> [unregistered]
		GetCurrentActivity -> [unregistered]
		GetCurrentInspiration -> [unregistered]
		GetCurrentLocation -> [unregistered]
		GetCurrentWeight -> int32
		GetDeathDate -> [unregistered]
		GetDeathOrBirthDateInfo -> CString
		GetDeathReason -> CString
		GetDeathReasonHideKiller -> CString
		GetDeathReasonIcon -> [unregistered]
		GetDebtModifierDescription -> CString
		GetDebugCourtierLeaveReasons -> CString
		GetDebugGuestArriveReasons -> CString
		GetDebugGuestArriveStatus -> bool
		GetDebugGuestScore -> CFixedPoint
		GetDebugTooltip -> CString
		GetDefaultRealmFlagTooltip -> CString
		GetDefaultRealmFlagTooltipNoClickInfo -> CString
		GetDefaultRealmFlagTooltipPrimaryTitleClickInfo -> CString
		GetDesignatedHeir -> [unregistered]
		GetDesiredNumberOfConsorts -> int32
		GetDifficultyInfoText -> [unregistered]
		GetDivorceReasons -> CString
		GetDomainLimit -> int32
		GetDomainLimitBreakdown -> CString
		GetDomainLimitGracePeriodHoldings -> CString
		GetDomainLimitOverrunWithGracePeriod -> int32
		GetDomainLimitOverrunWithoutGracePeriod -> int32
		GetDomainLimitTooltip -> CString
		GetDomainSize -> int32
		GetDomainSizeWithGracePeriod -> int32
		GetDread -> CFixedPoint
		GetDreadBreakdown -> [unregistered]
		GetDreadEffectIconFrameFor -> int32
		GetDreadEffectTooltipFor -> CString
		GetDynasty -> [unregistered]
		GetDynastyHeadRelationFrame -> int32
		GetDynastyHeadRelationTooltip -> CString
		GetDynastyHeadTooltip -> CString
		GetDynastyHouseName -> CString
		GetDynastyHouseNameNoTooltip -> CString
		GetDynastyMembersText -> CString
		GetDynastyName -> CString
		GetDynastyNameNoTooltip -> CString
		GetEmployedCourtPositions -> [unregistered]
		GetEmployer -> [unregistered]
		GetExecuteReasons -> CString
		GetFaith -> [unregistered]
		GetFather -> [unregistered]
		GetFertility -> CFixedPoint
		GetFirstName -> [unregistered]
		GetFirstNameBase -> CString
		GetFirstNameNicknamed -> [unregistered]
		GetFirstNameNicknamedNoTooltip -> [unregistered]
		GetFirstNameNicknamedNoTooltipRegnal -> [unregistered]
		GetFirstNameNicknamedOrMe -> [unregistered]
		GetFirstNameNicknamedOrMeNoTooltip -> [unregistered]
		GetFirstNameNicknamedOrMeNoTooltipRegnal -> [unregistered]
		GetFirstNameNicknamedOrMeRegnal -> [unregistered]
		GetFirstNameNicknamedPossessive -> [unregistered]
		GetFirstNameNicknamedPossessiveNoTooltip -> [unregistered]
		GetFirstNameNicknamedPossessiveNoTooltipRegnal -> [unregistered]
		GetFirstNameNicknamedPossessiveOrMy -> [unregistered]
		GetFirstNameNicknamedPossessiveOrMyNoTooltip -> [unregistered]
		GetFirstNameNicknamedPossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetFirstNameNicknamedPossessiveOrMyRegnal -> [unregistered]
		GetFirstNameNicknamedPossessiveRegnal -> [unregistered]
		GetFirstNameNicknamedRegnal -> [unregistered]
		GetFirstNameNoTooltip -> [unregistered]
		GetFirstNameNoTooltipRegnal -> [unregistered]
		GetFirstNameOrMe -> [unregistered]
		GetFirstNameOrMeNoTooltip -> [unregistered]
		GetFirstNameOrMeNoTooltipRegnal -> [unregistered]
		GetFirstNameOrMeRegnal -> [unregistered]
		GetFirstNamePossessive -> [unregistered]
		GetFirstNamePossessiveNoTooltip -> [unregistered]
		GetFirstNamePossessiveNoTooltipRegnal -> [unregistered]
		GetFirstNamePossessiveOrMy -> [unregistered]
		GetFirstNamePossessiveOrMyNoTooltip -> [unregistered]
		GetFirstNamePossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetFirstNamePossessiveOrMyRegnal -> [unregistered]
		GetFirstNamePossessiveRegnal -> [unregistered]
		GetFirstNameRegnal -> [unregistered]
		GetFocus -> [unregistered]
		GetFullName -> [unregistered]
		GetFullNameNicknamed -> [unregistered]
		GetFullNameNicknamedNoTooltip -> [unregistered]
		GetFullNameNicknamedNoTooltipRegnal -> [unregistered]
		GetFullNameNicknamedOrMe -> [unregistered]
		GetFullNameNicknamedOrMeNoTooltip -> [unregistered]
		GetFullNameNicknamedOrMeNoTooltipRegnal -> [unregistered]
		GetFullNameNicknamedOrMeRegnal -> [unregistered]
		GetFullNameNicknamedPossessive -> [unregistered]
		GetFullNameNicknamedPossessiveNoTooltip -> [unregistered]
		GetFullNameNicknamedPossessiveNoTooltipRegnal -> [unregistered]
		GetFullNameNicknamedPossessiveOrMy -> [unregistered]
		GetFullNameNicknamedPossessiveOrMyNoTooltip -> [unregistered]
		GetFullNameNicknamedPossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetFullNameNicknamedPossessiveOrMyRegnal -> [unregistered]
		GetFullNameNicknamedPossessiveRegnal -> [unregistered]
		GetFullNameNicknamedRegnal -> [unregistered]
		GetFullNameNoTooltip -> [unregistered]
		GetFullNameNoTooltipRegnal -> [unregistered]
		GetFullNameOrMe -> [unregistered]
		GetFullNameOrMeNoTooltip -> [unregistered]
		GetFullNameOrMeNoTooltipRegnal -> [unregistered]
		GetFullNameOrMeRegnal -> [unregistered]
		GetFullNamePossessive -> [unregistered]
		GetFullNamePossessiveNoTooltip -> [unregistered]
		GetFullNamePossessiveNoTooltipRegnal -> [unregistered]
		GetFullNamePossessiveOrMy -> [unregistered]
		GetFullNamePossessiveOrMyNoTooltip -> [unregistered]
		GetFullNamePossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetFullNamePossessiveOrMyRegnal -> [unregistered]
		GetFullNamePossessiveRegnal -> [unregistered]
		GetFullNameRegnal -> [unregistered]
		GetGlowTintColor -> CVector4f
		GetGold -> [unregistered]
		GetGoldText -> [unregistered]
		GetGoldTextNoIcon -> [unregistered]
		GetGoldTooltipWithBalance -> [unregistered]
		GetGovernment -> [unregistered]
		GetHealth -> CFixedPoint
		GetHealthIconFrame -> [unregistered]
		GetHealthInfo -> [unregistered]
		GetHeirToDesc -> CString
		GetHeldBaroniesCount -> int32
		GetHeldCourtAndCouncilPositionsString -> CString
		GetHeldCourtPositions -> [unregistered]
		GetHeldCourtPositionsString -> CString
		GetHerHim -> [unregistered]
		GetHerHis -> [unregistered]
		GetHerHisMy -> [unregistered]
		GetHersHis -> [unregistered]
		GetHerselfHimself -> [unregistered]
		GetHookOn -> [unregistered]
		GetHookOrHookableSecretsFrame -> [unregistered]
		GetHostileRaiders -> [unregistered]
		GetHouse -> [unregistered]
		GetHumanName -> CString
		GetHumanNameIfNotLocalPlayer -> CString
		GetID -> [unregistered]
		GetImprisonedBy -> [unregistered]
		GetImprisonmentReasons -> CString
		GetIncomeAsReligiousHead -> CFixedPoint
		GetIncomeBreakdownAsReligiousHead -> CString
		GetIncomeBreakdownFromTheocraticLease -> CString
		GetIncomeFromTheocraticLease -> CFixedPoint
		GetInventory -> [unregistered]
		GetJoinCourtDate -> [unregistered]
		GetKills -> [unregistered]
		GetKnightArmy -> [unregistered]
		GetKnightBreakdown -> [unregistered]
		GetKnightCount -> [unregistered]
		GetKnightEffectiveness -> CFixedPoint
		GetKnightEffectivenessBreakdown -> CString
		GetKnownLanguages -> [unregistered]
		GetKnownLanguagesString -> CString
		GetLadyLord -> [unregistered]
		GetLastTriggeredPendingCourtEventsDate -> [unregistered]
		GetLeviesBreakdownFromTheocraticLease -> CString
		GetLeviesFromTheocraticLease -> int32
		GetLiege -> [unregistered]
		GetLiegeEvenWhenDead -> [unregistered]
		GetLiegeTitleEvenWhenDead -> [unregistered]
		GetLifestyle -> [unregistered]
		GetLifestyleExperienceProgress -> float
		GetLifestyleXp -> CFixedPoint
		GetLocalizedText -> CString
		GetLocationDesc -> [unregistered]
		GetMaxConsorts -> int32
		GetMaxIncomeFromTheocraticLease -> CFixedPoint
		GetMaxLeviesFromTheocraticLease -> int32
		GetMaxMilitaryStrength -> CFixedPoint
		GetMaxMilitaryStrengthWithoutHires -> CFixedPoint
		GetMaxSpouses -> int32
		GetMilitaryStrengthPercentGUI -> [unregistered]
		GetMilitaryStrengthText -> [unregistered]
		GetModifierDescForTask -> CString
		GetModifierDescription -> CString
		GetMother -> [unregistered]
		GetMotherFather -> [unregistered]
		GetMyCouncillorsTitle -> CString
		GetName -> [unregistered]
		GetNameNicknamed -> [unregistered]
		GetNameNicknamedNoTooltip -> [unregistered]
		GetNameNicknamedNoTooltipRegnal -> [unregistered]
		GetNameNicknamedOrMe -> [unregistered]
		GetNameNicknamedOrMeNoTooltip -> [unregistered]
		GetNameNicknamedOrMeNoTooltipRegnal -> [unregistered]
		GetNameNicknamedOrMeRegnal -> [unregistered]
		GetNameNicknamedPossessive -> [unregistered]
		GetNameNicknamedPossessiveNoTooltip -> [unregistered]
		GetNameNicknamedPossessiveNoTooltipRegnal -> [unregistered]
		GetNameNicknamedPossessiveOrMy -> [unregistered]
		GetNameNicknamedPossessiveOrMyNoTooltip -> [unregistered]
		GetNameNicknamedPossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetNameNicknamedPossessiveOrMyRegnal -> [unregistered]
		GetNameNicknamedPossessiveRegnal -> [unregistered]
		GetNameNicknamedRegnal -> [unregistered]
		GetNameNoTooltip -> [unregistered]
		GetNameNoTooltipRegnal -> [unregistered]
		GetNameOrMe -> [unregistered]
		GetNameOrMeNoTooltip -> [unregistered]
		GetNameOrMeNoTooltipRegnal -> [unregistered]
		GetNameOrMeRegnal -> [unregistered]
		GetNamePossessive -> [unregistered]
		GetNamePossessiveNoTooltip -> [unregistered]
		GetNamePossessiveNoTooltipRegnal -> [unregistered]
		GetNamePossessiveOrMy -> [unregistered]
		GetNamePossessiveOrMyNoTooltip -> [unregistered]
		GetNamePossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetNamePossessiveOrMyRegnal -> [unregistered]
		GetNamePossessiveRegnal -> [unregistered]
		GetNameRegnal -> [unregistered]
		GetNickname -> CString
		GetNicknameNoTooltip -> CString
		GetNumPendingCourtEvents -> int32
		GetNumTitlesFromTheocraticLease -> int32
		GetNumVassalsTowardsLimit -> int32
		GetNumberOfControlledHolySites -> int32
		GetOpinionBreakdownText -> CString
		GetOpinionHeadingText -> CString
		GetOpinionOf -> int32
		GetOpinionOfTint -> CVector4f
		GetOriginalFirstName -> CString
		GetPerkPoints -> int32
		GetPerkPointsUsed -> int32
		GetPiety -> CFixedPoint
		GetPietyLevel -> int32
		GetPietyLevelTexture -> [unregistered]
		GetPietyTooltipWithBalance -> CString
		GetPlaceInSuccession -> [unregistered]
		GetPlayableFrame -> int32
		GetPlayableFrameTooltip -> CString
		GetPlayerDreadEffectIconFrame -> [unregistered]
		GetPlayerDreadEffectTooltip -> [unregistered]
		GetPlayerDynastyRelationFrame -> int32
		GetPlayerDynastyRelationTooltip -> CString
		GetPlayerGuestDescription -> CString
		GetPlayerHeir -> [unregistered]
		GetPlayerInteractionName -> [unregistered]
		GetPlayerInteractionTooltip -> [unregistered]
		GetPlayerInteractionValidBlockers -> CString
		GetPlayerInteractionWithTargetCharacterTooltip -> CString
		GetPlayerInteractionWithTargetSecretTooltip -> CString
		GetPlayerInteractionWithTargetTitleName -> [unregistered]
		GetPlayerInteractionWithTargetTitleTooltip -> [unregistered]
		GetPortrait -> [unregistered]
		GetPortraitFrameFrame -> [unregistered]
		GetPowerfulVassalFrame -> [unregistered]
		GetPowerfulVassalTooltip -> [unregistered]
		GetPrestige -> CFixedPoint
		GetPrestigeLevel -> int32
		GetPrestigeLevelTexture -> [unregistered]
		GetPrestigeTooltipWithBalance -> CString
		GetPrimaryHolding -> [unregistered]
		GetPrimarySpouse -> [unregistered]
		GetPrimarySpouseOrBetrothed -> [unregistered]
		GetPrimaryTitle -> [unregistered]
		GetPrisoners -> [unregistered]
		GetProwess -> [unregistered]
		GetProwessBreakdown -> [unregistered]
		GetRaidTargets -> [unregistered]
		GetRealFather -> [unregistered]
		GetRelationAndGuestDesc -> CString
		GetRelationOfType -> [unregistered]
		GetRelationToString -> CString
		GetRelationToStringExtended -> CString
		GetRevokeReasons -> CString
		GetRoyalCourtBlockers -> CString
		GetSexuality -> CString
		GetSexualityFrame -> int32
		GetSheHe -> [unregistered]
		GetShortUIName -> [unregistered]
		GetShortUINameNoFormat -> [unregistered]
		GetShortUINameNoTooltip -> [unregistered]
		GetShortUINameNoTooltipNoFormat -> [unregistered]
		GetShortUINameNotMe -> [unregistered]
		GetShortUINameNotMeNoFormat -> [unregistered]
		GetShortUINameNotMeNoTooltip -> [unregistered]
		GetShortUINameNotMeNoTooltipNoFormat -> [unregistered]
		GetShortUINamePossessive -> [unregistered]
		GetShortUINamePossessiveNoFormat -> [unregistered]
		GetShortUINamePossessiveNoTooltip -> [unregistered]
		GetShortUINamePossessiveNoTooltipNoFormat -> [unregistered]
		GetShortUINamePossessiveNotMy -> [unregistered]
		GetShortUINamePossessiveNotMyNoFormat -> [unregistered]
		GetShortUINamePossessiveNotMyNoTooltip -> [unregistered]
		GetShortUINamePossessiveNotMyNoTooltipNoFormat -> [unregistered]
		GetSimpleGoldTooltip -> [unregistered]
		GetSkill -> [unregistered]
		GetSkillWithLevel -> [unregistered]
		GetSlowHistoryIdForDebug -> [unregistered]
		GetSpecialGuestRelationDescription -> CString
		GetSponsoredInspirations -> [unregistered]
		GetStartCouncilTaskInTooltip -> CString
		GetStartRaidBlockers -> CString
		GetStress -> int32
		GetStressLevel -> int32
		GetStressProgress -> float
		GetSuccessionRelation -> CString
		GetTargetWeight -> int32
		GetTheocraticLessee -> [unregistered]
		GetTheocraticLesseeApprovalTooltip -> CString
		GetTitleAsName -> [unregistered]
		GetTitleAsNameNicknamed -> [unregistered]
		GetTitleAsNameNicknamedNoTooltip -> [unregistered]
		GetTitleAsNameNicknamedNoTooltipRegnal -> [unregistered]
		GetTitleAsNameNicknamedOrMe -> [unregistered]
		GetTitleAsNameNicknamedOrMeNoTooltip -> [unregistered]
		GetTitleAsNameNicknamedOrMeNoTooltipRegnal -> [unregistered]
		GetTitleAsNameNicknamedOrMeRegnal -> [unregistered]
		GetTitleAsNameNicknamedPossessive -> [unregistered]
		GetTitleAsNameNicknamedPossessiveNoTooltip -> [unregistered]
		GetTitleAsNameNicknamedPossessiveNoTooltipRegnal -> [unregistered]
		GetTitleAsNameNicknamedPossessiveOrMy -> [unregistered]
		GetTitleAsNameNicknamedPossessiveOrMyNoTooltip -> [unregistered]
		GetTitleAsNameNicknamedPossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetTitleAsNameNicknamedPossessiveOrMyRegnal -> [unregistered]
		GetTitleAsNameNicknamedPossessiveRegnal -> [unregistered]
		GetTitleAsNameNicknamedRegnal -> [unregistered]
		GetTitleAsNameNoTooltip -> [unregistered]
		GetTitleAsNameNoTooltipRegnal -> [unregistered]
		GetTitleAsNameOrMe -> [unregistered]
		GetTitleAsNameOrMeNoTooltip -> [unregistered]
		GetTitleAsNameOrMeNoTooltipRegnal -> [unregistered]
		GetTitleAsNameOrMeRegnal -> [unregistered]
		GetTitleAsNamePossessive -> [unregistered]
		GetTitleAsNamePossessiveNoTooltip -> [unregistered]
		GetTitleAsNamePossessiveNoTooltipRegnal -> [unregistered]
		GetTitleAsNamePossessiveOrMy -> [unregistered]
		GetTitleAsNamePossessiveOrMyNoTooltip -> [unregistered]
		GetTitleAsNamePossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetTitleAsNamePossessiveOrMyRegnal -> [unregistered]
		GetTitleAsNamePossessiveRegnal -> [unregistered]
		GetTitleAsNameRegnal -> [unregistered]
		GetTitleTierName -> CString
		GetTitleTierNamePossessive -> CString
		GetTitledFirstName -> [unregistered]
		GetTitledFirstNameNicknamed -> [unregistered]
		GetTitledFirstNameNicknamedNoTooltip -> [unregistered]
		GetTitledFirstNameNicknamedNoTooltipRegnal -> [unregistered]
		GetTitledFirstNameNicknamedOrMe -> [unregistered]
		GetTitledFirstNameNicknamedOrMeNoTooltip -> [unregistered]
		GetTitledFirstNameNicknamedOrMeNoTooltipRegnal -> [unregistered]
		GetTitledFirstNameNicknamedOrMeRegnal -> [unregistered]
		GetTitledFirstNameNicknamedPossessive -> [unregistered]
		GetTitledFirstNameNicknamedPossessiveNoTooltip -> [unregistered]
		GetTitledFirstNameNicknamedPossessiveNoTooltipRegnal -> [unregistered]
		GetTitledFirstNameNicknamedPossessiveOrMy -> [unregistered]
		GetTitledFirstNameNicknamedPossessiveOrMyNoTooltip -> [unregistered]
		GetTitledFirstNameNicknamedPossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetTitledFirstNameNicknamedPossessiveOrMyRegnal -> [unregistered]
		GetTitledFirstNameNicknamedPossessiveRegnal -> [unregistered]
		GetTitledFirstNameNicknamedRegnal -> [unregistered]
		GetTitledFirstNameNoTooltip -> [unregistered]
		GetTitledFirstNameNoTooltipRegnal -> [unregistered]
		GetTitledFirstNameOrMe -> [unregistered]
		GetTitledFirstNameOrMeNoTooltip -> [unregistered]
		GetTitledFirstNameOrMeNoTooltipRegnal -> [unregistered]
		GetTitledFirstNameOrMeRegnal -> [unregistered]
		GetTitledFirstNamePossessive -> [unregistered]
		GetTitledFirstNamePossessiveNoTooltip -> [unregistered]
		GetTitledFirstNamePossessiveNoTooltipRegnal -> [unregistered]
		GetTitledFirstNamePossessiveOrMy -> [unregistered]
		GetTitledFirstNamePossessiveOrMyNoTooltip -> [unregistered]
		GetTitledFirstNamePossessiveOrMyNoTooltipRegnal -> [unregistered]
		GetTitledFirstNamePossessiveOrMyRegnal -> [unregistered]
		GetTitledFirstNamePossessiveRegnal -> [unregistered]
		GetTitledFirstNameRegnal -> [unregistered]
		GetTitles -> [unregistered]
		GetTopLiege -> [unregistered]
		GetTotalPerkPoints -> int32
		GetTraitFromGroup -> [unregistered]
		GetTraitGroupLevel -> int32
		GetTraitIndices -> [unregistered]
		GetUIName -> [unregistered]
		GetUINameNoFormat -> [unregistered]
		GetUINameNoTooltip -> [unregistered]
		GetUINameNoTooltipNoFormat -> [unregistered]
		GetUINameNotMe -> [unregistered]
		GetUINameNotMeNoFormat -> [unregistered]
		GetUINameNotMeNoTooltip -> [unregistered]
		GetUINameNotMeNoTooltipNoFormat -> [unregistered]
		GetUINamePossessive -> [unregistered]
		GetUINamePossessiveNoFormat -> [unregistered]
		GetUINamePossessiveNoTooltip -> [unregistered]
		GetUINamePossessiveNoTooltipNoFormat -> [unregistered]
		GetUINamePossessiveNotMy -> [unregistered]
		GetUINamePossessiveNotMyNoFormat -> [unregistered]
		GetUINamePossessiveNotMyNoTooltip -> [unregistered]
		GetUINamePossessiveNotMyNoTooltipNoFormat -> [unregistered]
		GetUnlandedTitle -> [unregistered]
		GetUnlandedTitleSkipPlayer -> [unregistered]
		GetUnraisedKnightBreakdown -> [unregistered]
		GetUnraisedKnightCount -> [unregistered]
		GetVariablesDescription -> [unregistered]
		GetVassalContract -> [unregistered]
		GetVassalInfoText -> CString
		GetVassalLimit -> int32
		GetVassalLimitBreakdown -> CString
		GetVassalLimitOverrun -> int32
		GetVassalLimitTooltip -> CString
		GetVassals -> [unregistered]
		GetWarsInfo -> [unregistered]
		GetWifeHusband -> [unregistered]
		GetWomanMan -> [unregistered]
		GetWomenMen -> [unregistered]
		HasAnyArtifactClaims -> bool
		HasArtifacts -> bool
		HasAtMostOneSpouse -> [unregistered]
		HasClaimOnTitle -> [unregistered]
		HasCompletedAnInspiration -> bool
		HasCouncillor -> bool
		HasCouncillorWithTaskIn -> [unregistered]
		HasDifficultyInfo -> [unregistered]
		HasDormantRoyalCourt -> bool
		HasDynasty -> bool
		HasInspiration -> bool
		HasKillsKnownTo -> bool
		HasLandedTitle -> bool
		HasLandedTitleByKey -> bool
		HasLandedTitles -> bool
		HasLiege -> [unregistered]
		HasLocation -> bool
		HasMultipleSpouses -> [unregistered]
		HasNormalCouncilPosition -> bool
		HasPerk -> bool
		HasPressedClaimOnTitle -> [unregistered]
		HasRaisedRegiments -> [unregistered]
		HasRealmLaw -> [unregistered]
		HasRegnalName -> bool
		HasRelationTo -> bool
		HasRoyalCourt -> bool
		HasSealCoA -> bool
		HasSexuality -> bool
		HasSpecialCouncilPosition -> bool
		HasTimedModifier -> bool
		HasTrait -> bool
		HasTraitByKey -> bool
		HasTraitFromGroup -> bool
		HasTruce -> bool
		HasUnpressedClaimOnTitle -> [unregistered]
		HasVassalInfo -> bool
		HasVassals -> bool
		HoldsCourtPosition -> bool
		HookTooltip -> [unregistered]
		IsAdult -> bool
		IsAlive -> bool
		IsAtWar -> bool
		IsAway -> bool
		IsBastard -> bool
		IsBetrothed -> bool
		IsCharacterCourtLanguage -> bool
		IsConcubine -> bool
		IsCouncilTaskValid -> bool
		IsCouncillor -> bool
		IsDead -> [unregistered]
		IsDeadAndValid -> [unregistered]
		IsDynast -> bool
		IsDynastyHead -> bool
		IsFemale -> bool
		IsFounderOfDynasty -> bool
		IsGuest -> bool
		IsHouseHead -> bool
		IsHovered -> bool
		IsImprisoned -> bool
		IsIncapable -> bool
		IsIndependentRuler -> bool
		IsKnight -> bool
		IsKnightDefault -> [unregistered]
		IsKnightDisallowed -> [unregistered]
		IsKnightForced -> [unregistered]
		IsKnightInArmy -> bool
		IsKnightInSpecificArmy -> bool
		IsLegitimateMemberOfHouse -> bool
		IsLegitimizedBastard -> bool
		IsLocalPlayer -> [unregistered]
		IsMyPowerfulVassal -> [unregistered]
		IsOpposing -> bool
		IsOtherLiegeOrAbove -> bool
		IsOtherPlayer -> [unregistered]
		IsPinned -> [unregistered]
		IsPlayer -> [unregistered]
		IsPlayerInteractionShown -> [unregistered]
		IsPlayerInteractionShownAndCanPickTitle -> [unregistered]
		IsPlayerInteractionValid -> [unregistered]
		IsPlayerInteractionWithTargetCharacterValid -> bool
		IsPlayerInteractionWithTargetSecretValid -> bool
		IsPlayerInteractionWithTargetTitleValid -> [unregistered]
		IsPowerfulVassal -> bool
		IsReligiousHead -> [unregistered]
		IsRuler -> bool
		IsSelected -> bool
		IsShownInCharacterWindow -> [unregistered]
		IsTheocraticLessee -> bool
		IsTheocraticLesseeOf -> bool
		IsValid -> bool
		IsVisiblyInfertile -> bool
		LocalPlayerString -> CString
		MakeScope -> Scope
		NumberOfDirectlyHeldCounties -> int32
		OnCustomizePortrait -> void
		OnMouseEnter -> void
		OnMouseLeave -> void
		OpenDeclareWarViewWithArtifactCB -> void
		OpenPlayerInteraction -> [unregistered]
		OpenPlayerInteractionWithTargetCharacter -> void
		OpenPlayerInteractionWithTargetSecret -> void
		OpenPlayerInteractionWithTargetTitle -> [unregistered]
		OpenRoyalCourtView -> void
		PlayerCanManageFocus -> bool
		PlayerHasHooksOrHookableSecrets -> [unregistered]
		PlayerName -> [unregistered]
		PunishmentTooltip -> CString
		RealmSize -> int32
		Self -> [unregistered]
		ShouldShowDreadEffectIcon -> [unregistered]
		ShouldShowDreadEffectIconFor -> bool
		StartCouncilTaskIn -> [unregistered]
		StressLevelEffect -> [unregistered]
		StressProgressDesc -> [unregistered]
		TheocraticLesseeApprovesOfLiege -> bool
		TheocraticLesseeHasApprovalStatus -> bool
		ToggleCharacterPinned -> [unregistered]
	}

	CharacterFilterPreset = {
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetName -> CString
		Self -> [unregistered]
	}

	CharacterFinderWindow = {
		GetCharacterList -> CharacterSelectionList
		AccessSelf -> [unregistered]
		Close -> void
		GetCharacterList -> [unregistered]
		Self -> [unregistered]
	}

	CharacterFocusWindow = {
		GetCharacter -> Character
		GetFocus -> FocusType
		AccessSelf -> [unregistered]
		CanChangeFocus -> bool
		Close -> void
		GetCanChangeFocusDescription -> CString
		GetCharacter -> [unregistered]
		GetDispositionFrame -> int32
		GetFocus -> [unregistered]
		GetFocusDescriptionFromDatabase -> CString
		GetFocusIconTooltip -> CString
		GetSelectedFocusDescription -> CString
		GetSelectedFocusEffectDesc -> CString
		GetSelectedFocusModifierDesc -> CString
		GetSelectedFocusName -> CString
		GetWarningText -> CString
		GetWindowTitle -> CString
		IsCharacterFocus -> bool
		IsFocusAvailable -> bool
		IsSelectedFocus -> bool
		OnClickChangeFocus -> void
		OnClickSetSelectedFocus -> void
		Self -> [unregistered]
	}

	CharacterInteraction = {
		AccessSelf -> [unregistered]
		GetAlertIcon -> [unregistered]
		GetIcon -> [unregistered]
		Self -> [unregistered]
		ShowEffectsInNotification -> bool
		UsesArtifactTarget -> bool
		UsesTitleTarget -> bool
	}

	CharacterInteractionCategory = {
		AccessSelf -> [unregistered]
		GetBackground -> [unregistered]
		GetDescription -> CString
		GetIcon -> [unregistered]
		GetName -> CString
		HasBackground -> [unregistered]
		HasIcon -> [unregistered]
		Self -> [unregistered]
	}

	CharacterInteractionConfirmationWindow = {
		GetActor -> Character
		GetCharacterList -> CharacterSelectionList
		GetEffectsDescription -> InteractionEffectsDescription
		GetInteraction -> CharacterInteraction
		GetRecipient -> Character
		GetSchemeInfo -> InteractionSchemeInfo
		GetSecondaryActor -> Character
		GetSecondaryRecipient -> Character
		GetSelectedArtifact -> Artifact
		GetSelectedTitle -> Title
		GetTopCharacterItem -> CharacterListItem
		AccessSelf -> [unregistered]
		CanChangeActorCharacter -> bool
		CanChangeRecipientCharacter -> bool
		CanChangeTitle -> bool
		CanClear -> bool
		CanRevertActorCharacter -> bool
		CanRevertRecipientCharacter -> bool
		CanSelectAnybody -> bool
		CanSend -> bool
		Close -> void
		GetActor -> [unregistered]
		GetActorSecondaryLabel -> CString
		GetAnswer -> CString
		GetAnswerProgress -> float
		GetAnswerReason -> CString
		GetAnswerScore -> int32
		GetArtifacts -> [unregistered]
		GetCanSendDescription -> CString
		GetCharacterList -> [unregistered]
		GetCostDescription -> CString
		GetCostTooltip -> CString
		GetDebugInfo -> CString
		GetEffectsDescription -> [unregistered]
		GetInteraction -> [unregistered]
		GetInteractionDescription -> CString
		GetInteractionTooltip -> CString
		GetOnDeclineSummary -> CString
		GetOptionItems -> [unregistered]
		GetOptionsHeading -> CString
		GetPrompt -> CString
		GetRecipient -> [unregistered]
		GetRecipientSecondaryLabel -> CString
		GetSchemeInfo -> [unregistered]
		GetSecondaryActor -> [unregistered]
		GetSecondaryRecipient -> [unregistered]
		GetSelectedArtifact -> [unregistered]
		GetSelectedTitle -> [unregistered]
		GetSendName -> CString
		GetTitles -> [unregistered]
		GetTopCharacterItem -> [unregistered]
		GetVisibleOptionsCount -> int32
		HasCost -> bool
		HasExclusiveOptions -> bool
		HasInteractionDescription -> bool
		HasOnDeclineSummary -> bool
		HasOptions -> bool
		HasPickedCharacters -> bool
		HasSelectedArtifact -> bool
		HasSelectedTitle -> bool
		HasTopCharacterItem -> bool
		IsActorRecipientSame -> bool
		IsAiAcceptNegotiation -> bool
		IsAiMaybe -> bool
		IsAnswerPositive -> bool
		IsForcedToAccept -> bool
		IsPickingSecondaryActor -> bool
		IsPickingSecondaryRecipient -> bool
		OnChangeOrRevertActorCharacter -> void
		OnChangeOrRevertRecipientCharacter -> void
		OnClear -> void
		Reload -> void
		Self -> [unregistered]
		Send -> bool
		SetSelectedArtifact -> void
		ShouldPickSecondaryActor -> bool
		ShouldPickSecondaryRecipient -> bool
		ShouldShowAnswer -> bool
		ShouldShowScheme -> bool
		ShouldShowSecondaryRecipient -> bool
		ShowFourCharacters -> bool
		ShowThreeCharacters -> bool
		ShowTwoCharacters -> bool
		UsesArtifactTarget -> bool
		UsesTitleTarget -> bool
	}

	CharacterInteractionEffectValues = {
		AccessSelf -> [unregistered]
		GetGoldPaid -> CFixedPoint
		GetGoldReceived -> CFixedPoint
		Self -> [unregistered]
	}

	CharacterInteractionMenuWindow = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		AreMoreInteractionsVisisble -> bool
		Close -> void
		GetCategoryItems -> [unregistered]
		GetMoreInteractions -> [unregistered]
		GoToCharacter -> void
		OutsideDiplomaticRange -> bool
		Self -> [unregistered]
	}

	CharacterInteractionNotificationWindow = {
		GetCharacterInteraction -> CharacterInteraction
		GetEffectsDescription -> InteractionEffectsDescription
		GetSender -> Character
		Accept -> void
		AccessSelf -> [unregistered]
		Acknowledge -> void
		Block -> void
		CanAccept -> bool
		CanBeBlocked -> bool
		CanPotentiallyBeBlocked -> bool
		CanReject -> bool
		Close -> void
		GetAnswerAcceptText -> CString
		GetAnswerAcknowledgeText -> CString
		GetAnswerBlockText -> CString
		GetAnswerRejectText -> CString
		GetCanBeBlockedTooltip -> CString
		GetCharacterInteraction -> [unregistered]
		GetContextName -> CString
		GetEffectsDescription -> [unregistered]
		GetNotificationText -> CString
		GetSender -> [unregistered]
		GetSignature -> CString
		GetSigned -> CString
		IsAutoAcceptNotification -> bool
		Reject -> void
		Self -> [unregistered]
	}

	CharacterItem = {
		GetCharacter -> Character
		GetComposition -> ArmyComposition
		AccessSelf -> [unregistered]
		GetAllyCount -> int32
		GetCharacter -> [unregistered]
		GetComposition -> [unregistered]
		GetGold -> CFixedPoint
		Self -> [unregistered]
		ShowAllyList -> void
	}

	CharacterLifestyleWindow = {
		GetCharacter -> Character
		GetSelectedFocus -> FocusType
		GetSelectedLifestyle -> Lifestyle
		AccessSelf -> [unregistered]
		CanRefundPerks -> bool
		CanRefundPerksDesc -> CString
		CanSelectFocus -> bool
		CanSelectFocusDesc -> CString
		CanSelectPerk -> bool
		CanSelectPerkDesc -> CString
		CanSelectPerkIgnoreCost -> bool
		Close -> void
		GetCharacter -> [unregistered]
		GetFocuses -> [unregistered]
		GetLifestyleProgressTooltip -> CString
		GetLifestyles -> [unregistered]
		GetPerkTrees -> [unregistered]
		GetSelectedFocus -> [unregistered]
		GetSelectedLifestyle -> [unregistered]
		OpenFocus -> void
		OpenLifestyle -> void
		OpenRefundPerks -> void
		RefundPerksEffectsDesc -> CString
		SelectFocus -> void
		SelectPerk -> void
		Self -> [unregistered]
	}

	CharacterListFilter = {
		AccessSelf -> [unregistered]
		GetCurrentFilterIndex -> CVector2i
		GetName -> CString
		GetOptions -> [unregistered]
		Self -> [unregistered]
		SetCurrentFilterFromIndex -> void
	}

	CharacterListFilterCategory = {
		AccessSelf -> [unregistered]
		GetFilters -> [unregistered]
		GetLabel -> CString
		GetName -> CString
		IsExpanded -> bool
		OnExpand -> void
		Self -> [unregistered]
	}

	CharacterListFilterOption = {
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetName -> CString
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	CharacterListItem = {
		GetCharacter -> Character
		GetDiplomacySkill -> SkillItem
		GetFirstClaim -> Claim
		GetFirstTitleItem -> Title
		GetIntrigueSkill -> SkillItem
		GetLearningSkill -> SkillItem
		GetMartialSkill -> SkillItem
		GetProwessSkill -> SkillItem
		GetStewardshipSkill -> SkillItem
		AccessSelf -> [unregistered]
		GetBool -> bool
		GetCharacter -> [unregistered]
		GetDiplomacySkill -> [unregistered]
		GetFirstClaim -> [unregistered]
		GetFirstTitleItem -> [unregistered]
		GetInt -> int32
		GetIntrigueSkill -> [unregistered]
		GetLearningSkill -> [unregistered]
		GetMartialSkill -> [unregistered]
		GetNonFittingTraitsCount -> int32
		GetNonFittingTraitsDesc -> CString
		GetOpinionOfOtherCharacter -> int32
		GetOpinionOfOtherCharacterDesc -> CString
		GetOrderIndex -> int32
		GetOtherCharacterItems -> [unregistered]
		GetProwessSkill -> [unregistered]
		GetSkillItems -> [unregistered]
		GetStewardshipSkill -> [unregistered]
		GetText -> CString
		GetTitleItemCount -> int32
		GetTitleItems -> [unregistered]
		GetTraits -> [unregistered]
		HasEvenOrderIndex -> bool
		HasNonFittingTraits -> bool
		HasOpinionCharacter -> bool
		HasOtherCharacterItems -> bool
		HasTitleItems -> bool
		IsSelectable -> bool
		ListTitleItems -> CString
		OnClick -> void
		Self -> [unregistered]
	}

	CharacterListSortItem = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	CharacterPoolWatchWindow = {
		AccessSelf -> [unregistered]
		Close -> void
		GetCharacters -> [unregistered]
		GetTitle -> CString
		Self -> [unregistered]
	}

	CharacterProperties = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	CharacterSelectionList = {
		GetCategory -> CharacterListFilterCategory
		GetFilter -> CharacterListFilter
		GetFilterWithDefault -> CharacterListFilter
		GetMatchingFilterPreset -> CharacterFilterPreset
		GetSelectedPreset -> CharacterFilterPreset
		AccessSelf -> [unregistered]
		ApplyFiltersSort -> void
		CanSavePreset -> bool
		CanSavePresetTooltip -> CString
		ClearPattern -> void
		DeleteFilterPreset -> void
		DeleteSelectedPreset -> void
		FiltersShown -> bool
		FinishEdit -> void
		GetApplyFilterPresetTooltip -> CString
		GetCategory -> [unregistered]
		GetFilter -> [unregistered]
		GetFilterCategories -> [unregistered]
		GetFilterPresetName -> CString
		GetFilterWithDefault -> [unregistered]
		GetList -> [unregistered]
		GetMatchedPatterns -> [unregistered]
		GetMatchingFilterPreset -> [unregistered]
		GetOpenLoadFilterWarning -> CString
		GetSavePresetWarning -> CString
		GetSavedFilterPresets -> [unregistered]
		GetSelectedPreset -> [unregistered]
		GetSelectedPresetIndex -> CVector2i
		GetSortOrder -> bool
		GetTotalNumber -> int32
		GetUnsaveableFiltersWarning -> CString
		HasFilterPresets -> bool
		HasItems -> bool
		HasMatchingFilterPreset -> bool
		HasOnlyInapplicableFilters -> bool
		HasSelectedPreset -> bool
		HasTextInEdit -> bool
		HideFilterPresets -> void
		IsAllDefault -> bool
		IsBuildingList -> bool
		IsFilterPresetsShown -> bool
		IsSortingBySkill -> bool
		IsSuggesting -> bool
		NumberOfShownCharacters -> int32
		OnFilterPresetNameEdit -> void
		OnResetFilters -> void
		OnToggleFilters -> void
		RevertSortOrder -> void
		SaveFiltersToPreset -> void
		SelectPresetIndex -> void
		Self -> [unregistered]
		SetPattern -> void
		SetSavePresetName -> void
		ShowFilterPresets -> void
		SortBySkill -> void
	}

	CharacterWindow = {
		GetCharacter -> Character
		GetCourt -> CharacterSelectionList
		GetCourtOwner -> Character
		GetSpouse -> Character
		GetVassals -> CharacterSelectionList
		AccessSelf -> [unregistered]
		AreClaimsExpanded -> bool
		AreDiplomacyExpanded -> bool
		AreNoneExpanded -> bool
		AreRelationsExpanded -> bool
		AreTitlesExpanded -> bool
		AreTraitsExpanded -> bool
		CalcUnusedRelationSlots -> int32
		CanClickFocusButton -> bool
		Close -> void
		ExpandNone -> void
		GetCachedMilitaryStrengthText -> CString
		GetCharacter -> [unregistered]
		GetChildren -> [unregistered]
		GetClaims -> [unregistered]
		GetConcubines -> [unregistered]
		GetCourt -> [unregistered]
		GetCourtOwner -> [unregistered]
		GetCurrentSoldiers -> int32
		GetDescription -> CString
		GetDiplomacyItems -> [unregistered]
		GetFocusButtonTooltip -> CString
		GetFocusText -> CString
		GetGrandparents -> [unregistered]
		GetMarriageIcon -> int32
		GetMarriageIconTooltip -> CString
		GetMaxSoldiers -> int32
		GetMilitaryStrengthTooltip -> CString
		GetNextSpouseTooltip -> CString
		GetParents -> [unregistered]
		GetPersonalityTraits -> [unregistered]
		GetPreviousSpouseTooltip -> CString
		GetRelationsOfType -> [unregistered]
		GetRelationsOfTypeFillEmpty -> [unregistered]
		GetSecondarySpouses -> [unregistered]
		GetSiblings -> [unregistered]
		GetSkills -> [unregistered]
		GetSpouse -> [unregistered]
		GetSpouseText -> CString
		GetTabItemsCount -> int32
		GetTimedModifiers -> [unregistered]
		GetTitles -> [unregistered]
		GetTraits -> [unregistered]
		GetVassals -> [unregistered]
		HasLiegeEvenWhenDead -> bool
		HasLiegeTitleEvenWhenDead -> bool
		IsRelationExpanded -> bool
		IsShowNext -> bool
		IsShowPrevious -> bool
		IsTabShown -> bool
		NextSpouse -> void
		OnAIWatch -> void
		OnClickFocusButton -> void
		OnCopyPortrait -> void
		OnWatch -> void
		PreviousSpouse -> void
		ResetTab -> void
		Self -> [unregistered]
		SetTab -> void
		ShouldShowFindSpouse -> bool
		ShouldShowSpouseButtons -> bool
		ShouldShowSpouses -> bool
		ShowMarriageIcon -> bool
		ToggleExpandedClaims -> void
		ToggleExpandedDiplomacy -> void
		ToggleExpandedRelation -> void
		ToggleExpandedTitles -> void
		ToggleExpandedTraits -> void
	}

	Chat = {
		GetReceiver -> Friend
		AccessChatMessages -> [unregistered]
		AccessSelf -> [unregistered]
		GetReceiver -> [unregistered]
		GetReceiverName -> CUTF8String
		GetUnreadMessageCount -> int32
		HasUnreadMessages -> bool
		IsRoomChat -> bool
		Self -> [unregistered]
	}

	ChatMessage = {
		AccessSelf -> [unregistered]
		GetMessage -> CUTF8String
		GetName -> CUTF8String
		Self -> [unregistered]
	}

	ChatNotificationMessage = {
		ChatMessage -> ChatMessage
		AccessSelf -> [unregistered]
		ChatMessage -> [unregistered]
		Kill -> void
		Self -> [unregistered]
		StartChat -> void
	}

	ChatTab = {
		GetChat -> Chat
		AccessSelf -> [unregistered]
		Activate -> void
		Close -> void
		GetChat -> [unregistered]
		GetChatTitle -> CUTF8String
		IsActive -> bool
		Self -> [unregistered]
	}

	ChatWindow = {
		AccessChatTabs -> [unregistered]
		AccessSelf -> [unregistered]
		CanSendMessage -> bool
		Hide -> void
		Self -> [unregistered]
		SendMessage -> void
		ShouldBeShown -> bool
		Show -> void
	}

	ChildGenerator = {
		AccessSelf -> [unregistered]
		GetGenerationItems -> [unregistered]
		GetRandomChildrenRatio -> float
		OnRandomizedRatioChanged -> void
		Regenerate -> void
		Self -> [unregistered]
	}

	ChildItem = {
		AccessSelf -> [unregistered]
		CopyDnaToClipboard -> void
		GetDna -> CString
		GetDnaForTexture -> CString
		IsRandomized -> bool
		PasteDna -> void
		Self -> [unregistered]
	}

	Claim = {
		GetTitle -> Title
		AccessSelf -> [unregistered]
		GetTitle -> [unregistered]
		GetTooltip -> CString
		IsImplicit -> bool
		IsPressed -> bool
		Self -> [unregistered]
	}

	ClaimTitleItem = {
		GetTitle -> Title
		AccessSelf -> [unregistered]
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	ClaimantEntry = {
		GetArmyComposition -> ArmyComposition
		GetCharacter -> Character
		GetHouse -> DynastyHouse
		AccessSelf -> [unregistered]
		CanDeclareWarForClaim -> bool
		GetArmyComposition -> [unregistered]
		GetCharacter -> [unregistered]
		GetHouse -> [unregistered]
		IsCharacter -> bool
		IsHouse -> bool
		Self -> [unregistered]
	}

	ClaimantSortOption = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	ClaimantsWindow = {
		GetParent -> TitleViewWindow
		AccessSelf -> [unregistered]
		Close -> void
		GetClaimants -> [unregistered]
		Self -> [unregistered]
	}

	CloudSaveData = {
		AccessSelf -> [unregistered]
		AreCloudSavesAvailable -> bool
		GetCloudSaveTooltip -> CString
		OnCloudSaveClick -> void
		Self -> [unregistered]
		ShouldSaveToCloud -> bool
	}

	CoatOfArms = {
		AccessSelf -> [unregistered]
		GetColor -> CVector4f
		GetFrame -> int32
		GetSlot -> CVector4f
		GetTexture -> [unregistered]
		Self -> [unregistered]
	}

	CoatOfArmsDesigner = {
		GetBackgroundPanel -> CoatOfArmsDesignerBackgroundPanel
		GetEmblemInstancesPanel -> CoatOfArmsDesignerEmblemInstancesPanel
		GetEmblemLayoutPanel -> CoatOfArmsDesignerEmblemLayoutPanel
		GetHistoricalCoASprite -> CoatOfArms
		GetHistoricalCoatOfArmsSprite -> CoatOfArms
		GetOriginalCoASprite -> CoatOfArms
		GetPastePreviewCoA -> DesignerCoA
		GetPreviewCoA -> DesignerCoA
		AccessSelf -> [unregistered]
		AreQuarteringOptionsAvailable -> bool
		CanLoadHistoricalCoatOfArms -> bool
		CanPasteFromClipboard -> bool
		CanRedoEdit -> bool
		CanUndoEdit -> bool
		GetAllPaletteColors -> [unregistered]
		GetBackgroundPanel -> [unregistered]
		GetEmblemInstances -> [unregistered]
		GetEmblemInstancesPanel -> [unregistered]
		GetEmblemLayoutPanel -> [unregistered]
		GetPastePreviewCoA -> [unregistered]
		GetPreviewCoA -> [unregistered]
		IsCustomMode -> bool
		IsQuarteringEnabled -> bool
		OnCopyToClipboard -> void
		OnPasteFromClipboard -> void
		OnRandomize -> void
		OnResetToHistorical -> void
		OnResetToLoaded -> void
		OnSetAdjustedMode -> void
		OnSetCustomMode -> void
		RedoEdit -> void
		SaveCoatOfArmsImageToDisk -> void
		Self -> [unregistered]
		SetQuarteringEnabled -> void
		UndoEdit -> void
		WasDesignChanged -> bool
		WasDesignResetToHistorical -> bool
	}

	CoatOfArmsDesignerBackgroundPanel = {
		AccessSelf -> [unregistered]
		GetAllPatterns -> [unregistered]
		GetColor -> CVector4f
		GetNumColors -> int32
		IsColorForNumberUsed -> bool
		IsColorSelected -> bool
		OnFinishColor -> void
		OnSelectColor -> void
		OnSelectPaletteColor -> void
		OnSelectPattern -> void
		Self -> [unregistered]
		UpdatePatternPreviewColors -> void
	}

	CoatOfArmsDesignerEmblemInstance = {
		GetPreviewCoA -> DesignerCoA
		AccessSelf -> [unregistered]
		GetIndex -> int32
		GetIndexString -> CString
		GetPreviewCoA -> [unregistered]
		IsSelected -> bool
		OnSelect -> void
		OnSelectForDetailEdit -> void
		OnSelectMulti -> void
		Self -> [unregistered]
	}

	CoatOfArmsDesignerEmblemInstancesPanel = {
		GetDetailEditCoAPreview -> DesignerCoA
		GetPagedEmblemInstances -> CoatOfArmsDesignerPagedEmblemInstances
		AccessSelf -> [unregistered]
		AddEmblemInstance -> void
		ClearDetailEdit -> void
		EditDetailPositionAxisX -> void
		EditDetailPositionAxisY -> void
		EditDetailRotation -> void
		EditDetailScaleAxisX -> void
		EditDetailScaleAxisY -> void
		EditDetailScaleCombined -> void
		FinishEditDetailPositionAxisX -> void
		FinishEditDetailPositionAxisY -> void
		FinishEditDetailRotation -> void
		FinishEditDetailScaleAxisX -> void
		FinishEditDetailScaleAxisY -> void
		FinishEditDetailScaleCombined -> void
		GetAllEmblemInstances -> [unregistered]
		GetColor -> CVector4f
		GetDetailEditCoAPreview -> [unregistered]
		GetDetailEditIndex -> int32
		GetDetailPositionAxisX -> float
		GetDetailPositionAxisY -> float
		GetDetailRotation -> int32
		GetDetailScaleAxisX -> float
		GetDetailScaleAxisY -> float
		GetEmblemTextures -> [unregistered]
		GetMaxNumColorsForSelected -> int32
		GetPagedEmblemInstances -> [unregistered]
		GetSelectedEmblemTextureCategoryIndex -> CVector2i
		IsColorForNumberUsed -> bool
		IsColorSelected -> bool
		OnFinishColor -> void
		OnSelectColor -> void
		OnSelectPaletteColor -> void
		RemoveEmblemInstance -> void
		ResetSelectedEmblems -> void
		SelectEmblemTextureCategory -> void
		Self -> [unregistered]
		SetAllSelectedEmblems -> void
		ShouldMatchEmblemDetailScale -> bool
		ToggleMatchEmblemDetailScale -> void
		UpdateTexturePreviewColors -> void
	}

	CoatOfArmsDesignerEmblemLayout = {
		GetPreviewCoA -> DesignerCoA
		AccessSelf -> [unregistered]
		GetName -> CString
		GetPreviewCoA -> [unregistered]
		IsSelected -> bool
		OnSelect -> void
		Self -> [unregistered]
	}

	CoatOfArmsDesignerEmblemLayoutPanel = {
		AccessSelf -> [unregistered]
		GetAllLayouts -> [unregistered]
		Self -> [unregistered]
	}

	CoatOfArmsDesignerEmblemTexture = {
		GetPreviewCoA -> DesignerCoA
		AccessSelf -> [unregistered]
		GetName -> CString
		GetPreviewCoA -> [unregistered]
		IsSelected -> bool
		OnSelect -> void
		Self -> [unregistered]
	}

	CoatOfArmsDesignerPagedEmblemInstances = {
		AccessSelf -> [unregistered]
		CanShowNextPage -> bool
		CanShowPreviousPage -> bool
		GetCurrentPage -> int32
		GetEmblemInstances -> [unregistered]
		GetMaxPage -> int32
		Self -> [unregistered]
		ShowNextPage -> void
		ShowPreviousPage -> void
	}

	CoatOfArmsDesignerPaletteColor = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetValue -> CVector4f
		Self -> [unregistered]
	}

	CoatOfArmsDesignerPattern = {
		GetPreviewCoA -> DesignerCoA
		AccessSelf -> [unregistered]
		GetName -> CString
		GetPreviewCoA -> [unregistered]
		IsSelected -> bool
		OnSelect -> void
		Self -> [unregistered]
	}

	CollapsibleCultureList = {
		AccessItems -> [unregistered]
		AccessSelf -> [unregistered]
		HideAllChildren -> void
		Self -> [unregistered]
		ShowAllChildren -> void
	}

	CollapsibleCultureListGroup = {
		GetItem -> CulturePillar
		AccessSelf -> [unregistered]
		AreChildrenVisible -> bool
		GetItem -> [unregistered]
		Self -> [unregistered]
		SetChildrenVisible -> void
		ToggleChildrenVisible -> void
	}

	CollapsibleReligionList = {
		AccessItems -> [unregistered]
		AccessSelf -> [unregistered]
		HideAllChildren -> void
		Self -> [unregistered]
		ShowAllChildren -> void
	}

	CollapsibleReligionListGroup = {
		GetItem -> Religion
		AccessSelf -> [unregistered]
		AreChildrenVisible -> bool
		GetItem -> [unregistered]
		Self -> [unregistered]
		SetChildrenVisible -> void
		ToggleChildrenVisible -> void
	}

	ColorGenePicker = {
		AccessSelf -> [unregistered]
		GetPosition -> CVector2f
		GetPositionInfo -> CString
		GetTexture -> [unregistered]
		OnClick -> void
		Self -> [unregistered]
	}

	Combat = {
		GetAttacker -> CombatSide
		GetDefender -> CombatSide
		GetLeftSide -> CombatSide
		GetLeftSideResult -> CombatSideResultData
		GetProvince -> Province
		GetRightSide -> CombatSide
		GetRightSideResult -> CombatSideResultData
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		Custom -> CString
		GetAdvantageSlider -> float
		GetCombatWidth -> CFixedPoint
		GetCombatWidthBreakdown -> CString
		GetName -> CString
		GetPhaseDesc -> CString
		GetPhaseTooltip -> CString
		GetPowerSlider -> float
		IsInPursuitPhase -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	CombatEffect = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	CombatMaaItem = {
		GetMenAtArmsType -> MenAtArmsType
		AccessSelf -> [unregistered]
		GetCountered -> CFixedPoint
		GetCounteredByMaa -> [unregistered]
		GetCountersMaa -> [unregistered]
		GetCurrentStrength -> int32
		GetMaxStrength -> int32
		GetPerformance -> int32
		GetRegimentCount -> int32
		GetStat -> CFixedPoint
		GetStatDecreased -> bool
		GetStatDesc -> CString
		GetStatIncreased -> bool
		GetStatModifiedDiff -> CFixedPoint
		GetTerrainBonus -> int32
		IsGoodAftermath -> bool
		Self -> [unregistered]
	}

	CombatMapIcon = {
		GetCombat -> Combat
		AccessSelf -> [unregistered]
		GetCombat -> [unregistered]
		IsSelected -> bool
		LeftIsAlly -> bool
		LeftIsEnemy -> bool
		LeftIsHostile -> bool
		LeftIsNeutral -> bool
		LeftIsPlayer -> bool
		OnClick -> void
		PlayerIsLeftCommander -> bool
		PlayerIsRightCommander -> bool
		RightIsAlly -> bool
		RightIsEnemy -> bool
		RightIsHostile -> bool
		RightIsNeutral -> bool
		RightIsPlayer -> bool
		Self -> [unregistered]
	}

	CombatPredictionEdge = {
		AccessSelf -> [unregistered]
		GetIcon -> [unregistered]
		GetLabel -> CString
		Self -> [unregistered]
	}

	CombatPredictionMapIcon = {
		GetAttackerCharacter -> Character
		GetDefenderCharacter -> Character
		GetEnemySideCharacter -> Character
		GetPlayerSideCharacter -> Character
		AccessSelf -> [unregistered]
		GetAttackerCharacter -> [unregistered]
		GetAttackerEdges -> [unregistered]
		GetDefenderCharacter -> [unregistered]
		GetDefenderEdges -> [unregistered]
		GetEnemySideCharacter -> [unregistered]
		GetEnemySideEdges -> [unregistered]
		GetHeader -> CString
		GetPlayerSideCharacter -> [unregistered]
		GetPlayerSideEdges -> [unregistered]
		GetPredictionLevelFrame -> int32
		GetPredictionScore -> CFixedPoint
		GetPredictionText -> CString
		GetTempInfo -> CString
		Self -> [unregistered]
	}

	CombatResultData = {
		AccessSelf -> [unregistered]
		GetPlayerGoldGain -> CFixedPoint
		GetPlayerPietyGain -> CFixedPoint
		GetPlayerPrestigeGain -> CFixedPoint
		GetWarContribution -> int32
		GotWarContribution -> bool
		PlayerGotGold -> bool
		PlayerGotPiety -> bool
		PlayerGotPrestige -> bool
		PlayerIsWinnerPrimaryWarParticipant -> bool
		PlayerIsWinnerWarLeader -> bool
		Self -> [unregistered]
	}

	CombatRollModifiers = {
		AccessSelf -> [unregistered]
		GetFrame -> int32
		GetIcon -> [unregistered]
		Self -> [unregistered]
	}

	CombatSide = {
		GetComposition -> ArmyComposition
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		GetComposition -> [unregistered]
		GetCurrentFightingMen -> CFixedPoint
		GetHardCasualties -> CFixedPoint
		GetPursuingRetreatingLabel -> CString
		GetPursuitPhaseMen -> CFixedPoint
		GetSoftCasualties -> CFixedPoint
		IsAttacker -> bool
		IsStillFighting -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	CombatSideModifierItem = {
		GetCombatEffect -> CombatEffect
		AccessSelf -> [unregistered]
		GetAdvantage -> CFixedPoint
		GetCommanderTooltip -> CString
		GetDescription -> CString
		GetModifierIconSmall -> [unregistered]
		GetModifiers -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	CombatSideResultData = {
		GetCommander -> Character
		GetMainParticipant -> Character
		AccessSelf -> [unregistered]
		GetCommander -> [unregistered]
		GetInitialNumberOfSoldiers -> CFixedPoint
		GetLossPercent -> float
		GetMainParticipant -> [unregistered]
		GetNumberOfLostSoldiers -> CFixedPoint
		GetNumberOfSurvivingSoldiers -> CFixedPoint
		GetRegimentStats -> [unregistered]
		Self -> [unregistered]
	}

	CombatWindow = {
		GetCombat -> Combat
		GetCurrentBattleEvent -> BattleEvent
		GetLeftCombatSide -> CombatSide
		GetLeftSideCommander -> Character
		GetLeftSideMainParticipant -> Character
		GetRightCombatSide -> CombatSide
		GetRightSideCommander -> Character
		GetRightSideMainParticipant -> Character
		AccessSelf -> [unregistered]
		BattleEventIsShown -> bool
		CloseAndDeselect -> void
		GetAdvantage -> CFixedPoint
		GetAdvantageDescription -> CString
		GetAdvantagePosition -> [unregistered]
		GetCurrentPhaseTooltip -> CString
		GetLeftCommanderTraits -> [unregistered]
		GetLeftKnightBreakdown -> CString
		GetLeftKnightCount -> int32
		GetLeftRoll -> int32
		GetLeftRollBreakdown -> CString
		GetLeftSideAttackOrDefendFrame -> int32
		GetLeftSideAttackOrDefendTooltip -> CString
		GetLeftSideCommanderTooltip -> CString
		GetLeftSideMaaTypes -> [unregistered]
		GetLeftSideModifierItems -> [unregistered]
		GetLeftSideRealmFlagTooltip -> CString
		GetLeftSideRelation -> CString
		GetLeftTerrainEffects -> CString
		GetName -> CString
		GetPowerPosition -> [unregistered]
		GetRetreatTooltip -> CString
		GetRightCommanderTraits -> [unregistered]
		GetRightKnightBreakdown -> CString
		GetRightKnightCount -> int32
		GetRightRoll -> int32
		GetRightRollBreakdown -> CString
		GetRightSideAttackOrDefendFrame -> int32
		GetRightSideAttackOrDefendTooltip -> CString
		GetRightSideCommanderTooltip -> CString
		GetRightSideMaaTypes -> [unregistered]
		GetRightSideModifierItems -> [unregistered]
		GetRightSideRealmFlagTooltip -> CString
		GetRightSideRelation -> CString
		GetRightTerrainEffects -> CString
		GetWonLostLabel -> CString
		GoToProvince -> void
		HasCombatEnded -> bool
		HasPlayer -> bool
		HasPlayerLost -> bool
		HasPlayerWon -> bool
		IncrementBattleEvent -> void
		IsAttackerOnLeftSide -> bool
		IsCombatInManeuverPhase -> bool
		IsCombatInPursuitPhase -> bool
		IsLeftSideWinning -> bool
		IsRightSideWinning -> bool
		LeftHasTerrainEffects -> bool
		RightHasTerrainEffects -> bool
		Self -> [unregistered]
		ShowNoRetreatIcon -> bool
		ShowRetreatIcon -> bool
	}

	ConcubineInfo = {
		GetBaseOffer -> MatchOffer
		AccessSelf -> [unregistered]
		GetBaseOffer -> [unregistered]
		Self -> [unregistered]
	}

	ConcubineInteractionWindow = {
		GetBaseWindow -> MatchmakerInteractionWindow
		GetConcubineInfo -> ConcubineInfo
		AccessSelf -> [unregistered]
		CanClear -> bool
		GetBaseWindow -> [unregistered]
		GetConcubineInfo -> [unregistered]
		GetPrompt -> CString
		Self -> [unregistered]
	}

	ConsoleMenuItem = {
		AccessSelf -> [unregistered]
		GetHelp -> CString
		GetName -> CString
		IsCurrentGroup -> bool
		Select -> void
		Self -> [unregistered]
	}

	ConsoleWindow = {
		AccessSelf -> [unregistered]
		IsMenuShown -> bool
		Self -> [unregistered]
		ToggleMenu -> void
	}

	Container = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	ContextMenuItem = {
		AccessSelf -> [unregistered]
		GetIcon -> [unregistered]
		GetLabel -> CString
		Self -> [unregistered]
	}

	CouncilPositionType = {
		AccessSelf -> [unregistered]
		GetCouncilModifierDescFor -> CString
		GetCouncilOwnerModifierDescFor -> CString
		GetCouncillorModifierDescFor -> CString
		GetName -> CString
		GetPortraitAnimation -> CString
		GetTooltip -> CString
		Self -> [unregistered]
	}

	CouncilTaskInteractionItem = {
		GetActiveCouncilTask -> ActiveCouncilTask
		GetMainSkillItem -> SkillItem
		AccessSelf -> [unregistered]
		GetActiveCouncilTask -> [unregistered]
		GetMainSkillItem -> [unregistered]
		GetSkillItems -> [unregistered]
		Select -> void
		Self -> [unregistered]
	}

	CouncilTaskInteractionWindow = {
		GetCharacterInteractionConfirmationWindow -> CharacterInteractionConfirmationWindow
		GetSelectedTask -> ActiveCouncilTask
		GetSkillItemForPosition -> SkillItem
		AccessPositions -> [unregistered]
		AccessSelf -> [unregistered]
		CanSendOffer -> bool
		Close -> void
		GetCharacterInteractionConfirmationWindow -> [unregistered]
		GetPlayerSkillItems -> [unregistered]
		GetSelectedTask -> [unregistered]
		GetSendOfferTooltip -> CString
		GetSkillItemForPosition -> [unregistered]
		HasSelectedTask -> bool
		SelectTask -> void
		Self -> [unregistered]
		Send -> void
	}

	CouncilTaskType = {
		GetCouncilPosition -> CouncilPositionType
		AccessSelf -> [unregistered]
		GetCouncilPosition -> [unregistered]
		GetEffectDesc -> CString
		GetIcon -> [unregistered]
		GetName -> CString
		HasMainSkill -> bool
		IsCountyTask -> bool
		IsCourtTask -> bool
		IsGeneralTask -> bool
		IsInfiniteTask -> bool
		IsPercentageTask -> bool
		IsProgressDefined -> bool
		IsValueTask -> bool
		Self -> [unregistered]
	}

	CouncilWindow = {
		GetCharacter -> Character
		GetCouncillor -> GuiCouncilPosition
		AccessSelf -> [unregistered]
		Close -> void
		GetCharacter -> [unregistered]
		GetCouncilPositions -> [unregistered]
		GetNumberOfPowerfulVassalsNotInCouncil -> int32
		GetPositionAtLiege -> CString
		GetToggleText -> CString
		HasPowerfulVassalNotInCouncil -> bool
		IsLiegeCouncilShown -> bool
		IsPlayerCouncilShown -> bool
		OnLeaveCouncil -> void
		Self -> [unregistered]
		SetLiegeCouncil -> void
		SetPlayerCouncil -> void
	}

	CountryEntry = {
		AccessSelf -> [unregistered]
		GetCountry -> CUTF8String
		Self -> [unregistered]
	}

	County = {
		GetCapital -> Province
		GetCount -> Character
		GetCountyOccupant -> Character
		GetCulture -> Culture
		GetFaith -> Faith
		GetTitle -> Title
		AccessSelf -> [unregistered]
		GetCapital -> [unregistered]
		GetControl -> CFixedPoint
		GetControlLevel -> CString
		GetControlLevelOutOfMax -> CString
		GetCount -> [unregistered]
		GetCountyControlEffectsDesc -> CString
		GetCountyControlIncreaseDesc -> CString
		GetCountyDevelopmentEffectsDesc -> CString
		GetCountyDevelopmentIncreaseDesc -> CString
		GetCountyOccupant -> [unregistered]
		GetCulture -> [unregistered]
		GetDevelopmentIgnoredDesc -> CString
		GetDevelopmentLevel -> int32
		GetDevelopmentLevelString -> CString
		GetFaith -> [unregistered]
		GetName -> CString
		GetTitle -> [unregistered]
		IsFullyOccupied -> bool
		Self -> [unregistered]
	}

	CountyGroup = {
		GetCapitalProvince -> Province
		GetCounty -> Title
		AccessSelf -> [unregistered]
		GetCapitalProvince -> [unregistered]
		GetCounty -> [unregistered]
		GetCountyControlColored -> CString
		GetEmptyHoldings -> [unregistered]
		GetHoldings -> [unregistered]
		IsExpanded -> bool
		Self -> [unregistered]
		ToggleExpanded -> void
	}

	CourtAmenitiesCategoryItem = {
		AccessPossibleSettings -> [unregistered]
		AccessSelf -> [unregistered]
		GetPossibleSettings -> [unregistered]
		Self -> [unregistered]
	}

	CourtAmenitiesSetting = {
		AccessSelf -> [unregistered]
		GetCostDescription -> CString
		GetDescription -> CString
		GetEffectDescription -> CString
		GetIcon -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		Self -> [unregistered]
	}

	CourtAmenitiesSettingItem = {
		GetSetting -> CourtAmenitiesSetting
		AccessSelf -> [unregistered]
		GetLevel -> int32
		GetSetting -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
		WasSelected -> bool
	}

	CourtAmenitiesWindow = {
		GetCategory -> CourtAmenitiesCategoryItem
		AccessSelf -> [unregistered]
		CanApplyCourtAmenitySetting -> bool
		GetCategories -> [unregistered]
		GetCategory -> [unregistered]
		GetCategoryOnCooldownTooltip -> CString
		GetCurrentSettingLevel -> int32
		GetCurrentSettingName -> CString
		GetMonthlyCost -> CString
		GetMonthlyCostBreakdown -> CString
		GetNewGrandeurBaseline -> CFixedPoint
		GetNewMonthlyCost -> CString
		GetOwner -> [unregistered]
		HasAppliedAmenityChanges -> bool
		HasChangedAnyAmenity -> bool
		IsCategoryOnCooldown -> bool
		NotifyAmenityWidgetHidden -> void
		OpenApplySettingsConfirmation -> void
		ResetSettings -> void
		SelectSetting -> void
		Self -> [unregistered]
	}

	CourtEventItem = {
		GetPositionCharacter -> Character
		AccessSelf -> [unregistered]
		GetDaysRemaining -> int32
		GetPositionCharacter -> [unregistered]
		GetTooltip -> CString
		Self -> [unregistered]
	}

	CourtEventWindow = {
		GetOpenEvent -> EventWindowData
		GetRoyalCourtWindow -> RoyalCourtWindow
		AccessSelf -> [unregistered]
		GetCourtEventItems -> [unregistered]
		GetOpenEvent -> [unregistered]
		GetRoyalCourtWindow -> [unregistered]
		HasOpenEvent -> bool
		IsVisible -> bool
		OnMouseEnterOption -> void
		OnMouseLeaveOption -> void
		OpenEvent -> void
		Self -> [unregistered]
	}

	CourtGrandeurData = {
		GetGracePeriodEndDate -> Date
		AccessSelf -> [unregistered]
		GetBase -> CFixedPoint
		GetChangeTowardsBase -> CFixedPoint
		GetCurrent -> CFixedPoint
		GetCurrentLevel -> int32
		GetCurrentLevelIgnoreGrace -> int32
		GetDaysUntilAtBase -> int32
		GetDifferenceFromExpectedLevel -> int32
		GetGracePeriodEndDate -> [unregistered]
		GetMinimumExpected -> CFixedPoint
		GetMinimumExpectedLevel -> int32
		Self -> [unregistered]
	}

	CourtGrandeurLevel = {
		AccessSelf -> [unregistered]
		GetGrandeurForLevel -> CFixedPoint
		GetTexture -> [unregistered]
		GetValue -> int32
		Self -> [unregistered]
		ShouldShow -> bool
	}

	CourtGrandeurWindow = {
		GetBaseBreakdownTooltip -> ValueBreakdown
		GetChangeTowardsBaseBreakdownTooltip -> ValueBreakdown
		GetRoyalCourtWindow -> RoyalCourtWindow
		AccessSelf -> [unregistered]
		GetBaseBreakdownTooltip -> [unregistered]
		GetChangeTowardsBaseBreakdownTooltip -> [unregistered]
		GetLevels -> [unregistered]
		GetModifierDescForLevel -> CString
		GetModifierDescForLevelCumulative -> CString
		GetRoyalCourtWindow -> [unregistered]
		GetWorldRank -> int32
		GetWorldRankTooltip -> CString
		Self -> [unregistered]
	}

	CourtPosition = {
		GetAptitudeTooltip -> ValueBreakdown
		GetCategory -> CourtPositionCategory
		GetEmployee -> Character
		GetEmployer -> Character
		GetPositionType -> CourtPositionType
		AccessSelf -> [unregistered]
		GetAICandidateScore -> CString
		GetAptitude -> [unregistered]
		GetAptitudeText -> CString
		GetAptitudeTooltip -> [unregistered]
		GetCategory -> [unregistered]
		GetDesc -> CString
		GetEmployeeBonuses -> CString
		GetEmployerBonuses -> CString
		GetMaxAvailableHires, -> int32
		GetName -> CString
		GetNameNoTooltip -> CString
		GetOnRevokeDescription -> CString
		GetOpinionBonus -> int32
		GetPositionType -> [unregistered]
		GetRevokeCostText -> CString
		GetSalaryBreakdownTooltip -> CString
		GetSalaryText -> CString
		GetTimeOfService -> CString
		Self -> [unregistered]
	}

	CourtPositionCategory = {
		AccessSelf -> [unregistered]
		GetKey -> CString
		GetName -> CString
		Self -> [unregistered]
	}

	CourtPositionType = {
		AccessSelf -> [unregistered]
		CourtPositionRequiresRankOrHigher -> bool
		GetBackground -> [unregistered]
		GetCategory -> CourtPositionCategory
		GetCustomEmployeeModifierDescription -> CString
		GetDescription -> CString
		GetEmployeeModifierDescription -> CString
		GetEmployeeRequirementDescriptionText -> CString
		GetLiegeCustomModifierDescription -> CString
		GetLiegeModifierDescription -> CString
		GetLiegeRequirementDescriptionText -> CString
		GetMaxAvailableHires -> int32
		GetName -> CString
		GetNameNoTooltip -> CString
		GetRequiredRank -> [unregistered]
		GetRevokeCostText -> CString
		GetSalaryBreakdownFor -> CString
		GetSalaryText -> CString
		GetSalaryTextFor -> CString
		HasCustomLiegeModifiers -> bool
		HasEmployeeModifiers -> bool
		HasEmployeeRequirements -> bool
		HasLiegeModifiers -> bool
		HasLiegeRequirements -> bool
		HasScalingLiegeModifiers -> bool
		HasStaticLiegeModifiers -> bool
		Self -> [unregistered]
	}

	CourtPositionsWindow = {
		CourtOwner -> Character
		CourtPositionsExpenseBreakdown -> ValueBreakdown
		CourtPositionsIncomeBreakdown -> ValueBreakdown
		AccessSelf -> [unregistered]
		CanShowCategoryTab -> bool
		CanShowCategoryTabs -> bool
		ClearCategoryFilter -> void
		CourtOwner -> [unregistered]
		CourtPositionsExpenseBreakdown -> [unregistered]
		CourtPositionsIncomeBreakdown -> [unregistered]
		EmployedPositions -> [unregistered]
		EmptyPositions -> [unregistered]
		HasCategoryFilter -> bool
		HeldPositions -> [unregistered]
		IsCategoryFiltering -> bool
		MaxNumAvailablePositions -> int32
		MaxNumHirableInCategory -> int32
		NumHiredInCategory -> int32
		NumHiredPositions -> int32
		Self -> [unregistered]
		SetCategoryFilter -> void
		TotalEarnedSalaries -> CString
		TotalPaidSalaries -> CString
	}

	CourtSceneEditorWindow = {
		AccessShadowCamera -> Camera
		AccessToolset -> CourtToolset
		GetActiveSettings -> CourtSceneSettings
		GetToolset -> CourtToolset
		AccessArtifacts -> [unregistered]
		AccessAssets -> [unregistered]
		AccessCameras -> [unregistered]
		AccessCharacters -> [unregistered]
		AccessLights -> [unregistered]
		AccessSelf -> [unregistered]
		AccessShadowCamera -> [unregistered]
		AccessToolset -> [unregistered]
		AddArtifact -> void
		AddAsset -> void
		AddCamera -> void
		AddCharacter -> void
		AddLight -> void
		CanChangeActiveCamera -> bool
		CanRedo -> bool
		CanUndo -> bool
		CollapseAllArtifacts -> void
		CollapseAllAssets -> void
		CollapseAllCameras -> void
		CollapseAllCharacters -> void
		CollapseAllLights -> void
		DuplicateArtifact -> void
		DuplicateAsset -> void
		DuplicateCamera -> void
		DuplicateCharacter -> void
		DuplicateLight -> void
		ExpandAllArtifacts -> void
		ExpandAllAssets -> void
		ExpandAllCameras -> void
		ExpandAllCharacters -> void
		ExpandAllLights -> void
		GetActiveSettings -> [unregistered]
		GetActiveSettingsIndex -> CVector2i
		GetAllSettings -> [unregistered]
		GetArtifactDescription -> CString
		GetArtifactDescriptionOrSlot -> CString
		GetArtifactLocator -> CString
		GetArtifactPosition -> float
		GetArtifactRotation -> float
		GetArtifactSlotType -> CString
		GetAssetDescription -> CString
		GetAssetLocator -> CString
		GetAssetName -> CString
		GetAssetPosition -> float
		GetAssetRotation -> float
		GetAssetScale -> float
		GetCameraDescription -> CString
		GetCameraFar -> float
		GetCameraFov -> float
		GetCameraNameLocalizationKey -> CString
		GetCameraNear -> float
		GetCameraPosition -> float
		GetCharacterDescription -> CString
		GetCharacterLocator -> CString
		GetCharacterPosition -> float
		GetCharacterRoles -> CString
		GetCharacterRotation -> float
		GetColor -> CVector4f
		GetConeInnerAngle -> float
		GetConeOuterAngle -> float
		GetCurrentCamera -> [unregistered]
		GetIntensity -> float
		GetLightDescription -> CString
		GetLightIntensityVariation -> float
		GetLightIntensityVariationFrequency -> float
		GetLightLookAt -> float
		GetLightPitch -> float
		GetLightPosition -> float
		GetLightPositionVariation -> float
		GetLightPositionVariationFrequency -> float
		GetLightYaw -> float
		GetPitch -> float
		GetRadius -> float
		GetToolset -> [unregistered]
		GetYaw -> float
		IsAffectedByShadow -> bool
		IsAnimatedLight -> bool
		IsArtifactExpanded -> bool
		IsAssetExpanded -> bool
		IsCameraActive -> bool
		IsCameraDefault -> bool
		IsCameraExpanded -> bool
		IsCameraIdleAnimated -> bool
		IsCameraTransitionAnimated -> bool
		IsCameraUsedForScreenshots -> bool
		IsCharacterExpanded -> bool
		IsCubemapShadow -> bool
		IsDeveloperCameraActive -> bool
		IsLightEnabled -> bool
		IsLightExpanded -> bool
		IsLightInLimits -> bool
		IsLightShadowInLimits -> bool
		IsShowDebugCamera -> bool
		IsShowDebugLight -> bool
		IsToolsetEnabled -> bool
		OnActiveSettingsChange -> void
		OnArtifactDescriptionEdit -> void
		OnArtifactEditFinished -> void
		OnArtifactEditStarted -> void
		OnArtifactLocatorEdit -> void
		OnArtifactPositionEdit -> void
		OnArtifactRotationEdit -> void
		OnArtifactSlotTypeEdit -> void
		OnAssetDescriptionEdit -> void
		OnAssetEditFinished -> void
		OnAssetEditStarted -> void
		OnAssetLocatorEdit -> void
		OnAssetNameEdit -> void
		OnAssetPositionEdit -> void
		OnAssetRotationEdit -> void
		OnAssetScaleEdit -> void
		OnCameraDescriptionEdit -> void
		OnCameraEditFinished -> void
		OnCameraEditStarted -> void
		OnCameraFarEdit -> void
		OnCameraFovEdit -> void
		OnCameraNameLocalizationKeyEdit -> void
		OnCameraNearEdit -> void
		OnCameraPositionEdit -> void
		OnCharacterDescriptionEdit -> void
		OnCharacterEditFinished -> void
		OnCharacterEditStarted -> void
		OnCharacterLocatorEdit -> void
		OnCharacterPositionEdit -> void
		OnCharacterRolesEdit -> void
		OnCharacterRotationEdit -> void
		OnColorChange -> void
		OnConeInnerAngleEdit -> void
		OnConeOuterAngleEdit -> void
		OnIntensityEdit -> void
		OnLightCameraEdit -> void
		OnLightColorPickerFinishChange -> void
		OnLightDescriptionEdit -> void
		OnLightEditFinished -> void
		OnLightEditStarted -> void
		OnLightIntensityVariationEdit -> void
		OnLightIntensityVariationFrequencyEdit -> void
		OnLightLookAtEdit -> void
		OnLightPitchEdit -> void
		OnLightPositionEdit -> void
		OnLightPositionVariationEdit -> void
		OnLightPositionVariationFrequencyEdit -> void
		OnLightYawEdit -> void
		OnRadiusEdit -> void
		OnSetPitch -> void
		OnSetYaw -> void
		PauseSelectionUpdate -> void
		RedoCommand -> void
		ReloadEdit -> void
		ReloadSafe -> void
		RemoveArtifact -> void
		RemoveAsset -> void
		RemoveCamera -> void
		RemoveCharacter -> void
		RemoveLight -> void
		ResumeSelectionUpdate -> void
		Save -> void
		Self -> [unregistered]
		SetArtifactPosition -> void
		SetArtifactRotation -> void
		SetAssetPosition -> void
		SetAssetRotation -> void
		SetAssetScale -> void
		SetCameraActive -> void
		SetCameraDefault -> void
		SetCameraFar -> void
		SetCameraFov -> void
		SetCameraNear -> void
		SetCameraPosition -> void
		SetCharacterPosition -> void
		SetCharacterRotation -> void
		SetConeInnerAngle -> void
		SetConeOuterAngle -> void
		SetDeveloperCameraActive -> void
		SetIntensity -> void
		SetLightIntensityVariation -> void
		SetLightIntensityVariationFrequency -> void
		SetLightLookAt -> void
		SetLightPitch -> void
		SetLightPosition -> void
		SetLightPositionVariation -> void
		SetLightPositionVariationFrequency -> void
		SetLightYaw -> void
		SetPitch -> void
		SetRadius -> void
		SetYaw -> void
		ShowArtifactDebugLines -> bool
		ShowAssetsDebugLines -> bool
		ShowCharacterDebugLines -> bool
		ShowSelectionDebugLines -> bool
		ToggleAnimatedLight -> void
		ToggleAnimationCameraIdle -> void
		ToggleAnimationCameraTransition -> void
		ToggleArtifactDebugLines -> void
		ToggleArtifactExpanded -> void
		ToggleAssetExpanded -> void
		ToggleAssetsDebugLines -> void
		ToggleCameraExpanded -> void
		ToggleCameraToTakeScreenshot -> void
		ToggleCharacterDebugLines -> void
		ToggleCharacterExpanded -> void
		ToggleCubemapShadow -> void
		ToggleLightAffectedByShadow -> void
		ToggleLightEnabled -> void
		ToggleLightExpanded -> void
		ToggleSelectionDebugLines -> void
		ToggleShowDebugCamera -> void
		ToggleShowDebugLight -> void
		ToggleToolsedEnabled -> void
		UndoCommand -> void
	}

	CourtSceneSettings = {
		AccessSelf -> [unregistered]
		GetSettingsCulture -> CString
		Self -> [unregistered]
	}

	CourtToolset = {
		AccessSelf -> [unregistered]
		IsModeRotation -> bool
		IsModeScale -> bool
		IsModeSelect -> bool
		IsModeTranslate -> bool
		Self -> [unregistered]
		SetModeRotation -> void
		SetModeScale -> void
		SetModeSelect -> void
		SetModeTranslate -> void
	}

	CourtType = {
		AccessSelf -> [unregistered]
		GetEffectDesc -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		GetTooltipDesc -> CString
		Self -> [unregistered]
	}

	CourtTypeSettingItem = {
		AccessSelf -> [unregistered]
		CanAfford -> bool
		CannotSelectTooltip -> CString
		GetBackground -> [unregistered]
		GetConfirmChangeTooltip -> CString
		GetCostString -> CString
		GetDescription -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		IsShown -> bool
		IsValid -> bool
		Self -> [unregistered]
	}

	CourtTypeWindow = {
		GetActiveCourtTypeItem -> CourtTypeSettingItem
		GetCurrentlySelectedCourtTypeItem -> CourtTypeSettingItem
		GetOwner -> Character
		AccessSelf -> [unregistered]
		FinalizeCourtTypeChange -> void
		GetActiveCourtTypeItem -> [unregistered]
		GetCourtTypes -> [unregistered]
		GetCurrentlySelectedCourtTypeItem -> [unregistered]
		GetOwner -> [unregistered]
		GetShowHideTooltip -> CString
		IsCourtTypeWindowVisible -> bool
		SelectCourtType -> void
		Self -> [unregistered]
		ToggleShowHideCourtTypeWindow -> void
	}

	CourtWindow = {
		AccessCourtPositionWindow -> CourtPositionsWindow
		GetCourt -> CharacterSelectionList
		GetCourtOwner -> Character
		GetPrisoners -> CharacterSelectionList
		AccessCourtPositionWindow -> [unregistered]
		AccessSelf -> [unregistered]
		CanDoMassPrisonerAction -> bool
		Close -> void
		GetCourt -> [unregistered]
		GetCourtOwner -> [unregistered]
		GetMassPrisonerActionTooltip -> CString
		GetPrisoners -> [unregistered]
		IsShowCourt -> bool
		IsShowPositions -> bool
		IsShowPrison -> bool
		MassPrisonerAction -> void
		Self -> [unregistered]
		SetShowCourt -> void
		SetShowPositions -> void
		SetShowPrison -> void
	}

	CreateClaimantFactionAgainstWindow = {
		GetCharacterInteractionConfirmationWindow -> CharacterInteractionConfirmationWindow
		GetCharacterSelectionList -> CharacterSelectionList
		GetSelectedTitle -> ClaimTitleItem
		AccessSelf -> [unregistered]
		CanSendOffer -> bool
		ClearRecipient -> void
		Close -> void
		GetCharacterInteractionConfirmationWindow -> [unregistered]
		GetCharacterSelectionList -> [unregistered]
		GetSelectedTitle -> [unregistered]
		GetSendOfferTooltip -> CString
		GetTitles -> [unregistered]
		HasTitles -> bool
		IsTitleSelected -> bool
		Self -> [unregistered]
		Send -> void
	}

	CreateFactionItem = {
		AccessSelf -> [unregistered]
		BuildCreateFactionTooltip -> CString
		CanPlayerCreateFaction -> bool
		CreateFaction -> void
		GetCreateFactionText -> CString
		Self -> [unregistered]
	}

	CreateSocialProfile = {
		AccessSelf -> [unregistered]
		Create -> void
		GetErrorMessage -> CString
		GetName -> CString
		IsCreatingProfile -> bool
		IsValidName -> bool
		Self -> [unregistered]
		SetName -> void
	}

	CreateSocialProfileWindow = {
		AccessSelf -> [unregistered]
		Hide -> void
		Self -> [unregistered]
		ShouldBeShown -> bool
		Show -> void
	}

	CreditPortraitData = {
		GetBookmarkPortrait -> BookmarkPortrait
		AccessSelf -> [unregistered]
		GetBookmarkPortrait -> [unregistered]
		GetText -> CString
		Self -> [unregistered]
	}

	CreditsWindow = {
		AccessSelf -> [unregistered]
		GetCredits -> CUTF8String
		HasReachedEnd -> bool
		IsFastest -> bool
		IsPaused -> bool
		IsSlowest -> bool
		OnClose -> void
		OnFaster -> void
		OnSlower -> void
		OnTogglePause -> void
		Self -> [unregistered]
	}

	Culture = {
		GetCultureEra -> CultureEra
		GetCultureHead -> Character
		GetEthos -> CulturePillar
		GetFascination -> CultureInnovation
		GetFascinationType -> CultureInnovationType
		GetHeritage -> CulturePillar
		GetLanguage -> CulturePillar
		GetMartial -> CulturePillar
		GetReformation -> CultureReformation
		GetTemplate -> CultureTemplate
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		CanAddTradition -> bool
		CanDiverge -> bool
		CanHybridize -> bool
		GetAcceptance -> CFixedPoint
		GetAcceptanceBaselineDesc -> CString
		GetAcceptanceChangelog -> CString
		GetAcceptanceDiff -> CFixedPoint
		GetAddTraditionBlockers -> CString
		GetBuildingGfxName -> CString
		GetClothingGfxName -> CString
		GetCoAGfxName -> CString
		GetCollectiveNoun -> CString
		GetCollectiveNounNoTooltip -> CString
		GetCreationString -> CString
		GetCultureEra -> [unregistered]
		GetCultureHead -> [unregistered]
		GetDivergenceBlockers -> CString
		GetEthos -> [unregistered]
		GetFascination -> [unregistered]
		GetFascinationType -> [unregistered]
		GetHeritage -> [unregistered]
		GetHybridizationBlockers -> CString
		GetID -> uint32
		GetLanguage -> [unregistered]
		GetMartial -> [unregistered]
		GetMaxNumberOfTraditions -> int32
		GetMaxNumberOfTraditionsBreakdown -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		GetNamingListName -> CString
		GetNoHeadReason -> CString
		GetNumberOfDiscoveredInnovations -> int32
		GetPlayerRelationString -> CString
		GetPrefix -> CString
		GetPrefixNoTooltip -> CString
		GetReformation -> [unregistered]
		GetRelationToPlayer -> [unregistered]
		GetTemplate -> [unregistered]
		GetTotalReformTimeBreakdownForNewTradition -> CString
		GetTotalReformTimeBreakdownForPillar -> CString
		GetTotalReformTimeBreakdownForReplacingTradition -> CString
		GetTotalReformTimeForNewTradition -> CString
		GetTotalReformTimeForPillar -> CString
		GetTotalReformTimeForReplacingTradition -> CString
		GetTraditions -> [unregistered]
		GetUnitGfxName -> CString
		GetYearlyAcceptanceChangeDesc -> CString
		HasAvailableInnovation -> bool
		HasCultureHead -> bool
		HasFascination -> bool
		IsChildOf -> bool
		IsPlayerCulture -> [unregistered]
		IsPlayerCultureHead -> [unregistered]
		IsPlayerHeritage -> [unregistered]
		IsReforming -> bool
		MakeScope -> Scope
		OpenAddTraditionWindow -> void
		OpenDivergenceWindow -> void
		OpenHybridizationWindow -> void
		OpenReplaceEthosWindow -> void
		OpenReplaceLanguageWindow -> void
		OpenReplaceMartialWindow -> void
		OpenReplaceTraditionWindow -> void
		Self -> [unregistered]
	}

	CultureAesthetics = {
		AccessSelf -> [unregistered]
		GetDesc -> CString
		GetName -> CString
		Self -> [unregistered]
	}

	CultureEra = {
		GetCulture -> Culture
		GetType -> CultureEraType
		AccessSelf -> [unregistered]
		CanGainProgress -> [unregistered]
		GetCantGainProgressReason -> [unregistered]
		GetCulture -> [unregistered]
		GetCultureEraProgressEstimation -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		GetNumberOfActiveInnovations -> int32
		GetNumberOfInnovations -> int32
		GetProgress -> CFixedPoint
		GetProgressAndGainBreakdown -> [unregistered]
		GetType -> [unregistered]
		IsActive -> bool
		Self -> [unregistered]
	}

	CultureEraType = {
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetEffectsDesc -> CString
		GetFrame -> [unregistered]
		GetIllustration -> [unregistered]
		GetName -> CString
		GetYear -> int32
		HasEffects -> bool
		IsInvalidForPlayerGovernment -> bool
		Self -> [unregistered]
	}

	CultureInnovation = {
		GetCulture -> Culture
		GetCultureEra -> CultureEra
		GetType -> CultureInnovationType
		AccessSelf -> [unregistered]
		CanBeFascination -> [unregistered]
		CanGainProgress -> bool
		CanPlayerSetAsFascination -> [unregistered]
		GetCantGainProgressReason -> CString
		GetCulture -> [unregistered]
		GetCultureEra -> [unregistered]
		GetInnovationState -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		GetProgress -> CFixedPoint
		GetProgressChance -> [unregistered]
		GetProgressChanceBreakdownString -> [unregistered]
		GetProgressGain -> [unregistered]
		GetProgressGainBreakdownString -> [unregistered]
		GetType -> [unregistered]
		HasExposureMarker -> bool
		IsActive -> bool
		IsFascination -> bool
		SelectAsFascination -> [unregistered]
		Self -> [unregistered]
	}

	CultureInnovationType = {
		GetCultureEraType -> CultureEraType
		AccessSelf -> [unregistered]
		GetCultureEraType -> [unregistered]
		GetDescription -> CString
		GetEffectsDesc -> CString
		GetGroupName -> [unregistered]
		GetIcon -> [unregistered]
		GetName -> CString
		GetProgressDesc -> [unregistered]
		HasEffects -> bool
		IsActiveForPlayer -> [unregistered]
		Self -> [unregistered]
	}

	CulturePillar = {
		AccessSelf -> [unregistered]
		GetCulturesWithPillar -> [unregistered]
		GetDescription -> CString
		GetEffectDescription -> CString
		GetIcon -> [unregistered]
		GetIndex -> int32
		GetName -> CString
		GetNameNoTooltip -> CString
		GetTypeName -> CString
		GetTypeNameNoTooltip -> CString
		IsValid -> bool
		Self -> [unregistered]
	}

	CultureReformation = {
		GetNewPillar -> CulturePillar
		GetNewTradition -> CultureTradition
		GetReplacedTradition -> CultureTradition
		AccessSelf -> [unregistered]
		GetNewPillar -> [unregistered]
		GetNewTradition -> [unregistered]
		GetProgress -> CFixedPoint
		GetProgressBreakdown -> CString
		GetReplacedTradition -> [unregistered]
		GetTimeLeft -> CString
		IsAddingNewTradition -> bool
		IsReformingSamePillarTypeAs -> bool
		Self -> [unregistered]
	}

	CultureTemplate = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	CultureTradition = {
		GetLayeredIcon -> LayeredIcon
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetEffectDescription -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		IsValid -> bool
		Self -> [unregistered]
	}

	CultureWindow = {
		GetCulture -> Culture
		GetLearningLevel -> SkillItem
		GetSelectedCultureEra -> GuiCultureEra
		AccessSelf -> [unregistered]
		Close -> void
		ConfirmReformationCancel -> void
		GetCulture -> [unregistered]
		GetCultureEras -> [unregistered]
		GetCultureHeadInfo -> CString
		GetCultureTraditions -> [unregistered]
		GetLearningLevel -> [unregistered]
		GetMyCultureInfo -> CString
		GetSelectedCultureEra -> [unregistered]
		HideReformationMode -> void
		IsInReformationMode -> bool
		Self -> [unregistered]
		ShouldShowMyCultureInfo -> bool
		ShowReformationMode -> void
	}

	CurveEditor = {
		AccessSelf -> [unregistered]
		Configure -> void
		Delete -> void
		Self -> [unregistered]
	}

	CurvePoint = {
		AccessSelf -> [unregistered]
		Position -> CVector2f
		Self -> [unregistered]
	}

	DatatypesExplorer = {
		AccessSelf -> [unregistered]
		DumpDataTypes -> bool
		IsEnableFilterFunctions -> bool
		IsEnableFilterOrphanTypes -> bool
		IsEnableFilterPromotes -> bool
		IsEnableFilterTypes -> bool
		Self -> [unregistered]
		SetDataTypeFilter -> void
		SetNameFilter -> void
		ToggleFilterFunctions -> void
		ToggleFilterOrphanTypes -> void
		ToggleFilterPromotes -> void
		ToggleFilterTypes -> void
	}

	Date = {
		AccessSelf -> [unregistered]
		GetString -> CString
		GetStringLong -> CString
		GetStringShort -> CString
		GetStringShortNoYear -> CString
		GetTimeDiffFromNow -> CString
		GetTimeDiffFromNowNoDays -> CString
		GetTimeToDate -> CString
		GetYear -> int32
		Self -> [unregistered]
	}

	DeJureVassalGroupItem = {
		AccessSelf -> [unregistered]
		GetOwnedBy -> CString
		GetTitleItems -> [unregistered]
		HasTitles -> bool
		Self -> [unregistered]
	}

	DebugTutorialChainItem = {
		AccessSelf -> [unregistered]
		CanComplete -> bool
		CanReset -> bool
		CanStart -> bool
		Complete -> void
		GetLessons -> [unregistered]
		GetTitle -> CString
		IsCompleted -> bool
		IsCurrent -> bool
		IsLast -> bool
		IsValidToTrigger -> bool
		Reset -> void
		Self -> [unregistered]
		Start -> void
	}

	DebugTutorialLessonItem = {
		AccessSelf -> [unregistered]
		CanComplete -> bool
		CanReset -> bool
		CanStart -> bool
		Complete -> void
		GetSteps -> [unregistered]
		GetTitle -> CString
		IsCompleted -> bool
		IsCurrent -> bool
		IsDelayed -> bool
		IsValidToTrigger -> bool
		Reset -> void
		Self -> [unregistered]
		ShouldStartAutomatically -> bool
		Start -> void
	}

	DebugTutorialStepItem = {
		AccessSelf -> [unregistered]
		GetTitle -> CString
		GetTooltip -> CString
		IsCurrent -> bool
		Self -> [unregistered]
	}

	DebugTutorialWindow = {
		AccessSelf -> [unregistered]
		Close -> void
		GetChains -> [unregistered]
		IsIgnoringDelays -> bool
		IsTutorialEnabled -> bool
		ResetTutorial -> void
		Self -> [unregistered]
		ToggleIgnoreDelays -> void
		ToggleTutorialEnabled -> void
	}

	Decision = {
		AccessSelf -> [unregistered]
		ExecuteDecision -> void
		GetCommandDescForPlayer -> CString
		GetDescriptionForPlayer -> CString
		GetIcon -> [unregistered]
		GetNextStepButtonLabel -> CString
		GetPicture -> [unregistered]
		GetShortDescForPlayer -> CString
		GetTitleForPlayer -> CString
		HasStepTwo -> bool
		IsImportantForPlayer -> bool
		IsMajor -> bool
		IsPossibleForPlayer -> bool
		IsShownForPlayer -> bool
		OnToggleImportantForPlayer -> [unregistered]
		Self -> [unregistered]
	}

	DecisionDetailView = {
		GetDecision -> Decision
		AccessSelf -> [unregistered]
		CanConfirm -> bool
		Close -> void
		Confirm -> void
		GetConfirmText -> CString
		GetConfirmTooltip -> CString
		GetCostDescription -> CString
		GetDecision -> [unregistered]
		GetDescription -> CString
		GetDynamicPosition -> CVector2f
		GetEffectDescription -> CString
		GetPicture -> [unregistered]
		GetRequirementsDescription -> CString
		GetTitle -> CString
		HasCost -> bool
		HasEffect -> bool
		HasRequirements -> bool
		HasWidgets -> bool
		IsOpenedFromRoyalCourt -> bool
		Self -> [unregistered]
	}

	DecisionViewWidget = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	DecisionViewWidgetCreateHolyOrder = {
		GetCurrentCapital -> Title
		AccessSelf -> [unregistered]
		GetCurrentCapital -> [unregistered]
		HasCurrentCapital -> bool
		HasValidBaronies -> bool
		IsCreate -> bool
		IsRevoke -> bool
		OnSelectCapital -> void
		Self -> [unregistered]
	}

	DecisionViewWidgetOptionList = {
		AccessSelf -> [unregistered]
		GetEntries -> [unregistered]
		OnSelect -> void
		Self -> [unregistered]
	}

	DecisionsView = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		Close -> void
		GetDecisions -> [unregistered]
		Self -> [unregistered]
	}

	DecisionsViewItem = {
		GetDecision -> Decision
		AccessSelf -> [unregistered]
		GetDecision -> [unregistered]
		IsSelected -> bool
		OnSelect -> void
		Self -> [unregistered]
	}

	DeclareWarInteractionWindow = {
		GetAllyListContext -> AllyListSubview
		GetAttackerCharacter -> CharacterItem
		GetCbType -> CasusBelliType
		GetCharacterInteractionConfirmationWindow -> CharacterInteractionConfirmationWindow
		GetClaimant -> Character
		GetCostBreakdown -> ValueBreakdown
		GetDefenderCharacter -> CharacterItem
		GetMilitaryStrengthInfo -> GuiMilitaryStrength
		GetSelectedCasusBelliItem -> CasusBelliItem
		AccessSelf -> [unregistered]
		CanAffordCosts -> bool
		CanSend -> bool
		CanShowWarGoalSubview -> bool
		Close -> void
		GetAttackerCharacter -> [unregistered]
		GetCasusBelliItems -> [unregistered]
		GetCbType -> [unregistered]
		GetCharacterInteractionConfirmationWindow -> [unregistered]
		GetClaimant -> [unregistered]
		GetCostBreakdown -> [unregistered]
		GetCostDescription -> CString
		GetCurrentTabEffectsDescription -> CString
		GetCurrentTabEffectsLabel -> CString
		GetCurrentTabMainOutputDescription -> CString
		GetDeclareWarButtonTooltip -> CString
		GetDefenderCharacter -> [unregistered]
		GetDefenders -> [unregistered]
		GetHeader -> CString
		GetMilitaryStrength -> CString
		GetPickPrompt -> CString
		GetSelectedCasusBelliItem -> [unregistered]
		GetSpecificCost -> CFixedPoint
		GetTitleItems -> [unregistered]
		GetWarningTooltipDesc -> CString
		HasCost -> bool
		HasNoValidCasusBellis -> bool
		HasSelectedCasusBelli -> bool
		HasTitleItems -> bool
		IsBreakingAlliance -> bool
		IsBreakingTruce -> bool
		IsEffectsTabDefeat -> bool
		IsEffectsTabVictory -> bool
		IsEffectsTabWhitePeace -> bool
		IsWarEffectsExpanded -> bool
		Self -> [unregistered]
		Send -> void
		SetEffectsTabDefeat -> void
		SetEffectsTabVictory -> void
		SetEffectsTabWhitePeace -> void
		ShouldShowAdditionalWarning -> bool
		ToggleWarEffectsExpanded -> void
		UsesMutuallyExclusiveTitles -> bool
		WriteAdditionalWarningMessage -> CString
	}

	DesignateHeirWindow = {
		GetHeirs -> CharacterSelectionList
		AccessSelf -> [unregistered]
		CanDesignate -> bool
		Close -> void
		Designate -> void
		GetCostDescription -> CString
		GetDesignateTooltip -> CString
		GetHeirs -> [unregistered]
		Self -> [unregistered]
	}

	DesignerCoA = {
		GetCoA -> CoatOfArms
		AccessSelf -> [unregistered]
		IsSet -> bool
		Self -> [unregistered]
	}

	DetailData = {
		AccessSelf -> [unregistered]
		ErrorsCount -> int32
		IsUpdating -> bool
		MaterialIntensityBias -> float
		MaterialsLimit -> int32
		Repack -> void
		Self -> [unregistered]
		SetMaterialIntensityBias -> void
		SetMaterialIntensityBiasStr -> void
		SetMaterialsLimit -> void
		SupportedMaterialsLimits -> [unregistered]
	}

	DiplomacyItem = {
		GetLeftReasonCharacter -> Character
		GetRightReasonCharacter -> Character
		GetTargetCharacter -> Character
		AccessSelf -> [unregistered]
		GetDiplomacyFrame -> int32
		GetInfo -> CString
		GetTooltip -> CString
		GetWarScoreFraction -> CFixedPoint
		HasReasonCharacters -> bool
		HasWarScore -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	DiplomaticItem = {
		GetTimeoutDate -> Date
		AccessSelf -> [unregistered]
		AddingFinished -> void
		EndAnimation -> void
		GetDaysUntilTimeout -> int32
		GetIcon -> [unregistered]
		GetInteractionDesc -> CString
		GetTimeoutDate -> [unregistered]
		GetTimeoutDesc -> CString
		GetTooltip -> CString
		IsAdded -> bool
		IsAdding -> bool
		IsBad -> bool
		IsDiplomatic -> bool
		IsGood -> bool
		IsNeutral -> bool
		IsRemoving -> bool
		IsVisible -> bool
		OnClick -> void
		OnRightClick -> void
		RemovingFinished -> void
		Self -> [unregistered]
		StartAnimation -> void
	}

	DivergenceWindow = {
		GetEthos -> CulturePillar
		GetHeritage -> CulturePillar
		GetLanguage -> CulturePillar
		GetMartial -> CulturePillar
		GetSelectedTradition -> CultureTradition
		GetSelectedTraditionGrouping -> TraditionGrouping
		GetTraditionGrouping -> TraditionGrouping
		GetVassalConversionWindow -> VassalConversionWindow
		AccessSelf -> [unregistered]
		CanDiverge -> bool
		CanPayCost -> bool
		CanPickPillar -> bool
		CanPickTradition -> bool
		ClearSelectedTradition -> void
		Close -> void
		DivergeCulture -> void
		GetColor -> CVector4f
		GetDivergeBlockers -> CString
		GetDivergeCostBreakdown -> CString
		GetDivergeCostString -> CString
		GetEthos -> [unregistered]
		GetHeritage -> [unregistered]
		GetLanguage -> [unregistered]
		GetMartial -> [unregistered]
		GetNewCultureName -> CString
		GetPickPillarBlockers -> CString
		GetPickTraditionBlockers -> CString
		GetPossibleAesthetics -> [unregistered]
		GetPossibleEthos -> [unregistered]
		GetPossibleHeritage -> [unregistered]
		GetPossibleLanguage -> [unregistered]
		GetPossibleMartial -> [unregistered]
		GetSelectedTradition -> [unregistered]
		GetSelectedTraditionGrouping -> [unregistered]
		GetTraditionCost -> CString
		GetTraditionCostBreakdown -> CString
		GetTraditionGrouping -> [unregistered]
		GetTraditions -> [unregistered]
		GetVassalConversionWindow -> [unregistered]
		HasAesthetic -> bool
		HasPillar -> bool
		HasTradition -> bool
		HasTraditionCategory -> bool
		OnEditCollectiveNoun -> void
		OnEditName -> void
		OnEditPrefix -> void
		ReplaceTradition -> void
		Self -> [unregistered]
		SetAesthetic -> void
		SetColor -> void
		SetPillar -> void
		SetSelectedTradition -> void
		SetTraditionCategory -> void
	}

	DockableLayout = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	DockableLayoutManager = {
		AccessActiveLayout -> DockableLayout
		AccessLayoutSearchList -> ToolPropertySearchList
		AccessSelectedLayout -> DockableLayout
		AccessActiveLayout -> [unregistered]
		AccessLayoutSearchList -> [unregistered]
		AccessLayouts -> [unregistered]
		AccessSelectedLayout -> [unregistered]
		AccessSelf -> [unregistered]
		DeleteUserLayout -> void
		SaveAsNewUserLayout -> void
		SaveUserLayout -> void
		Self -> [unregistered]
		SwitchToSelectedLayout -> void
	}

	DockableWindow = {
		AccessSelf -> [unregistered]
		Close -> void
		IsHidden -> bool
		IsMoving -> bool
		Position -> CVector2f
		ResizeHandleSize -> CVector2f
		Self -> [unregistered]
		Size -> CVector2f
		Title -> CString
		WidgetPosition -> CVector2f
		WidgetSize -> CVector2f
	}

	DoctrineGroupWindow = {
		GetDoctrineGroup -> FaithDoctrineGroup
		GetFaithCreationWindow -> FaithCreationWindow
		AccessSelf -> [unregistered]
		GetDoctrineGroup -> [unregistered]
		GetDoctrines -> [unregistered]
		GetFaithCreationWindow -> [unregistered]
		GetSlotIndex -> int32
		Self -> [unregistered]
		ShowWindow -> void
		ShowWindowSortList -> void
	}

	DoctrineGroupingFetcher = {
		AccessSelf -> [unregistered]
		GetGrouping -> [unregistered]
		Self -> [unregistered]
	}

	DoctrineGroupingFetcher2 = {
		AccessSelf -> [unregistered]
		GetGrouping -> [unregistered]
		Self -> [unregistered]
	}

	DrawCmdsList = {
		AccessSelf -> [unregistered]
		GetAttachmentInfo -> CString
		GetDrawNumber -> CString
		GetFormat -> CString
		GetResolution -> CString
		GetSize -> uint64
		GetTextureName -> [unregistered]
		GetZoneName -> CString
		IsCaptured -> bool
		Self -> [unregistered]
	}

	DrawCmdsViewer = {
		AccessSelf -> [unregistered]
		CaptureFrame -> void
		ClearCapture -> void
		DecrementCapturedDrawCount -> void
		DecrementCapturedDrawNumberOffset -> void
		GetCapturedDrawCount -> uint32
		GetCapturedDrawNumberOffset -> uint32
		GetCapturedFrameNumber -> uint32
		GetDrawCommandData -> [unregistered]
		IncrementCapturedDrawCount -> void
		IncrementCapturedDrawNumberOffset -> void
		Self -> [unregistered]
		SetDrawCount -> void
		SetDrawOffset -> void
	}

	DuchyGroup = {
		GetDuchy -> Title
		AccessSelf -> [unregistered]
		GetCounties -> [unregistered]
		GetDuchy -> [unregistered]
		Self -> [unregistered]
	}

	Dynasty = {
		GetDynast -> Character
		GetDynastyCoA -> CoatOfArms
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		CanPlayerCustomize -> bool
		CanUnlockRelevantPerk -> bool
		GetAliveMembers -> [unregistered]
		GetBaseName -> CString
		GetBaseNameNoTooltip -> CString
		GetDeadMembers -> [unregistered]
		GetDynast -> [unregistered]
		GetDynastyHouses -> [unregistered]
		GetDynastyPrestigeLevelTexture -> [unregistered]
		GetFoundedDynastyHousesCount -> int32
		GetID -> uint32
		GetMembers -> [unregistered]
		GetMembersText -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		GetNextPerkCost -> int32
		GetNextPerkProgress -> CFixedPoint
		GetNextPrestigeLevelName -> [unregistered]
		GetNumberOfLivingMembers -> int32
		GetNumberOfMembers -> int32
		GetPrestige -> CFixedPoint
		GetPrestigeBreakdown -> [unregistered]
		GetPrestigeFrame -> [unregistered]
		GetPrestigeIncome -> CFixedPoint
		GetPrestigeLevel -> int32
		GetPrestigeLevelEffect -> [unregistered]
		GetPrestigeLevelName -> [unregistered]
		GetPrestigeLevelProgress -> [unregistered]
		GetPrestigeLevelProgressTooltip -> [unregistered]
		GetPrestigeNextLevelText -> [unregistered]
		GetPrestigeProgress -> CString
		GetRequiredPowerToReplaceDynast -> CFixedPoint
		HasDynast -> bool
		HasPerk -> bool
		IsMyDynasty -> bool
		IsValid -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	DynastyCustomizationWindow = {
		GetCoatOfArmsDesigner -> CoatOfArmsDesigner
		GetDynasty -> Dynasty
		AccessSelf -> [unregistered]
		CanClickFinish -> bool
		Close -> void
		GetCanClickFinishText -> CString
		GetDynasty -> [unregistered]
		GetDynastyNameText -> CString
		OnClickFinish -> void
		OnEditDynastyNameText -> void
		Self -> [unregistered]
	}

	DynastyHouse = {
		GetDynasty -> Dynasty
		GetFounder -> Character
		GetHeadOfHouse -> Character
		GetHeadOfHouseOrLastHistoricHead -> Character
		GetHeirOfHouse -> Character
		GetHouseCoA -> CoatOfArms
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		CanPlayerCustomize -> bool
		GetAliveMembers -> [unregistered]
		GetBaseName -> CString
		GetBaseNameNoTooltip -> CString
		GetClaimedArtifacts -> [unregistered]
		GetDeadMembers -> [unregistered]
		GetFoundYear -> int32
		GetHeadOfHouseOrLastHistoricHead -> [unregistered]
		GetID -> uint32
		GetMembers -> [unregistered]
		GetMembersText -> CString
		GetMotto -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		GetNumberOfMembers -> int32
		HasBeenFounded -> bool
		HasHeadOfHouse -> bool
		HasHeirOfHouse -> bool
		IsFoundingHouse -> bool
		IsPlayerMember -> [unregistered]
		IsValid -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	DynastyHouseIcon = {
		GetHouse -> DynastyHouse
		AccessSelf -> [unregistered]
		GetHouse -> [unregistered]
		Self -> [unregistered]
	}

	DynastyHouseMembersWindow = {
		GetCharacterList -> CharacterSelectionList
		GetDynasty -> Dynasty
		GetHouse -> DynastyHouse
		AccessSelf -> [unregistered]
		Close -> void
		GetCharacterList -> [unregistered]
		GetDynasty -> [unregistered]
		GetHeader -> CString
		GetHouse -> [unregistered]
		IsDynasty -> bool
		IsHouse -> bool
		Self -> [unregistered]
	}

	DynastyHouseView = {
		GetDynastyHouse -> DynastyHouse
		GetTopLegacy -> DynastyLegacyItem
		AccessSelf -> [unregistered]
		AreMembersShown -> bool
		Close -> void
		CloseMembersWindow -> void
		GetDynastyHouses -> [unregistered]
		GetDynastyModifiers -> [unregistered]
		GetHouseModifiers -> [unregistered]
		GetLegacies -> [unregistered]
		GetOrderOptions -> [unregistered]
		GetSortSelectedIndex -> CVector2i
		Self -> [unregistered]
		SortHouses -> void
		ToggleMembersWindow -> void
	}

	DynastyLegacy = {
		AccessSelf -> [unregistered]
		GetDesc -> CString
		GetIcon -> [unregistered]
		GetName -> CString
		GetPerks -> [unregistered]
		GetTrackIcon -> [unregistered]
		Self -> [unregistered]
	}

	DynastyLegacyItem = {
		GetLegacy -> DynastyLegacy
		AccessSelf -> [unregistered]
		GetTooltip -> CString
		GetTotalPerksCount -> int32
		GetUnlockedPerksCount -> int32
		IsTopLegacy -> bool
		Self -> [unregistered]
	}

	DynastyPerk = {
		AccessSelf -> [unregistered]
		GetCostString -> CString
		GetCostStringOnly -> CString
		GetEffectDescription -> CString
		GetFrame -> int32
		GetName -> CString
		GetNameNoTooltip -> CString
		Self -> [unregistered]
	}

	DynastyPerkConfirmation = {
		GetPerk -> DynastyPerk
		GetSelectedTrait -> Trait
		AccessSelf -> [unregistered]
		GetAssociatedTraits -> [unregistered]
		GetPerk -> [unregistered]
		GetSelectedTrait -> [unregistered]
		SelectTrait -> void
		Self -> [unregistered]
	}

	DynastyTemplate = {
		GetCoA -> CoatOfArms
		AccessSelf -> [unregistered]
		GetMotto -> CString
		GetName -> CString
		Self -> [unregistered]
	}

	DynastyTreeItem = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		AreChildrenVisible -> bool
		GetCharacter -> [unregistered]
		GetChildren -> [unregistered]
		GetExpandedSize -> int32
		GetLineEndPoint -> CVector2f
		GetLineStartPoint -> CVector2f
		GetTreeSize -> int32
		HasParent -> bool
		IsCadetBranchFounder -> bool
		IsFromOtherDynasty -> bool
		IsSelectedCharacter -> bool
		IsTopDisplayed -> bool
		IsTopParent -> bool
		Self -> [unregistered]
		SetupCharacterWidget -> bool
		SetupTopWidget -> bool
		ToggleChildrenVisibility -> void
		ToggleParentVisibility -> void
	}

	DynastyTreeView = {
		GetDynasty -> Dynasty
		AccessSelf -> [unregistered]
		Close -> void
		GetDynasty -> [unregistered]
		GetDynastyHouses -> [unregistered]
		GetDynastyTrees -> [unregistered]
		GetModifiers -> [unregistered]
		IsShownPanToMe -> bool
		PanToDynast -> void
		PanToMe -> void
		Self -> [unregistered]
	}

	DynastyView = {
		GetDynasty -> Dynasty
		AccessSelf -> [unregistered]
		CanSelectPerk -> bool
		CanSelectPerkDesc -> CString
		Close -> void
		GetLegacies -> [unregistered]
		GetPerkProgressCost -> float
		GetTotalUnlockedPerks -> int32
		GetUnlockedPerkCountForTrack -> int32
		IsNextUnlockablePerk -> bool
		SelectPerk -> void
		Self -> [unregistered]
		ToggleMembersWindow -> void
	}

	EmitterNodeWindow = {
		AccessSelf -> [unregistered]
		ConfigureUserData -> void
		Self -> [unregistered]
	}

	EmployedPositionItem = {
		GetPosition -> CourtPosition
		AccessSelf -> [unregistered]
		CanShow -> bool
		GetPosition -> [unregistered]
		IsReplacing -> bool
		Replace -> void
		Revoke -> void
		Self -> [unregistered]
	}

	EmptyCourtPosition = {
		GetType -> CourtPositionType
		AccessSelf -> [unregistered]
		Appoint -> void
		CanHirePosition -> bool
		CanShow -> bool
		GetAiCandidateScore -> CString
		GetNumHiredCourtiers -> int32
		GetType -> [unregistered]
		IsAppointing -> bool
		NumValidCourtiers -> int32
		Self -> [unregistered]
	}

	Encyclopedia = {
		AccessCurrentPage -> EncyclopediaPage
		GetAllPage -> EncyclopediaPage
		GetCurrentPage -> EncyclopediaPage
		AccessCurrentPage -> [unregistered]
		AccessPages -> [unregistered]
		AccessSelf -> [unregistered]
		CanFilterFromHistoryBack -> bool
		CanFilterFromHistoryForward -> bool
		FilterFromHistoryBack -> void
		FilterFromHistoryForward -> void
		GetAllPage -> [unregistered]
		GetCurrentPage -> [unregistered]
		GetPages -> [unregistered]
		GetViewedEntries -> [unregistered]
		Hide -> void
		IsShown -> bool
		Self -> [unregistered]
		SetCurrentPage -> void
		ViewAllEntries -> void
	}

	EncyclopediaEntry = {
		AccessSelf -> [unregistered]
		GetBody -> CString
		GetFrame -> int32
		GetFrameSize -> CVector2i
		GetImage -> [unregistered]
		GetTitle -> CString
		HasImage -> bool
		Self -> [unregistered]
	}

	EncyclopediaEntryView = {
		Get -> EncyclopediaEntry
		AccessSelf -> [unregistered]
		Get -> [unregistered]
		Self -> [unregistered]
	}

	EncyclopediaPage = {
		AccessSelf -> [unregistered]
		FilterFromText -> void
		GetTitle -> CString
		ResetFilter -> void
		SearchFromEnteredText -> void
		Self -> [unregistered]
	}

	EndPrepConfirm = {
		AccessSelf -> [unregistered]
		Cancel -> void
		Confirm -> void
		Self -> [unregistered]
	}

	Entity = {
		State -> EntityState
		AccessSelf -> [unregistered]
		CurrentFrame -> int32
		CurrentTime -> double
		EntityLods -> [unregistered]
		HasStates -> bool
		HasUnsavedChanges -> bool
		IsLooping -> bool
		IsPlaying -> bool
		Name -> [unregistered]
		NumJoints -> int32
		PauseAnimation -> void
		RollForward -> void
		Rollback -> void
		Scale -> float
		Self -> [unregistered]
		SetCurrentFrameText -> void
		SetCurrentTimeText -> void
		State -> [unregistered]
		StepBackwards -> void
		StepForward -> void
		ToggleLooping -> void
		TogglePausePlay -> void
	}

	EntityEditor = {
		Entity -> Entity
		AccessSelf -> [unregistered]
		AddAudioLayer -> void
		AddEntityRemovalLayer -> void
		AddEntitySpawnLayer -> void
		AddKeyframeOnMouseToHoveredLane -> void
		AddKeyframeOnNeedleToHoveredLane -> void
		AddVfxLayer -> void
		CanInteract -> bool
		CurrentAnimationMax -> float
		DeleteKeyframe -> void
		Entity -> [unregistered]
		FitCamera -> void
		GetLastAutoSaveDuration -> double
		GetLastAutoSaveTimestamp -> [unregistered]
		HasEntities -> bool
		HasEntity -> bool
		HasLastSaveTimestamp -> bool
		IsAutoSaving -> bool
		IsGridVisible -> bool
		IsLoading -> bool
		IsScrubbing -> bool
		IsWorldMuted -> bool
		MovePlayerWithKeyframe -> bool
		OnAddLayerClick -> void
		OnKeyframeClick -> void
		OnKeyframeMove -> void
		OnKeyframePressed -> void
		OnKeyframeReleased -> void
		OnKeyframeRightClick -> void
		OnLayerRightClick -> void
		OnScrubEnd -> void
		OnScrubStart -> void
		OpenEventEditor -> void
		Redo -> void
		SaveChanges -> void
		ScrubPlayer -> void
		Self -> [unregistered]
		SetClickedLane -> void
		SetMovePlayerWithKeyframe -> void
		ToggleGridVisible -> void
		ToggleMovePlayerWithKeyframe -> void
		ToggleMuteWorld -> void
		Undo -> void
	}

	EntityEditorTimelineState = {
		AccessSelf -> [unregistered]
		AnimationLength -> float
		KeyframeLayers -> [unregistered]
		Name -> [unregistered]
		Self -> [unregistered]
	}

	EntityEventLayer = {
		AccessSelf -> [unregistered]
		HasKeyframes -> bool
		IsHovered -> bool
		Keyframes -> [unregistered]
		Self -> [unregistered]
		SetHovered -> void
	}

	EntityKeyframe = {
		AccessSelf -> [unregistered]
		HasEvent -> bool
		IsHovered -> bool
		IsSelected -> bool
		IsStartEvent -> bool
		KeyframeColor -> CVector4f
		Label -> CString
		Self -> [unregistered]
		SetHovered -> void
		SetSelected -> void
		TimePoint -> float
	}

	EntityState = {
		AccessSelf -> [unregistered]
		AnimationLength -> float
		HasAnimation -> bool
		KeyframeLayers -> [unregistered]
		Name -> [unregistered]
		NumFrames -> int32
		Self -> [unregistered]
	}

	EntityStatePtr = {
		AccessState -> EntityState
		AccessSelf -> [unregistered]
		AccessState -> [unregistered]
		Self -> [unregistered]
	}

	EntityViewerProperties = {
		AccessSelf -> [unregistered]
		GetLightColor -> CVector4f
		GetLightIntensity -> float
		GetLightYawDegrees -> float
		IsEnvSelected -> bool
		IsMeshSelected -> bool
		OnSetLightIntensityFinish -> void
		OnSetLightIntensityStart -> void
		OnSetLightYawFinish -> void
		OnSetLightYawStart -> void
		SelectEnvWindow -> void
		SelectMeshWindow -> void
		Self -> [unregistered]
		SetLightIntensity -> void
		SetLightIntensityText -> void
		SetLightYawDegrees -> void
		SetLightYawText -> void
	}

	Entry = {
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetIcon -> [unregistered]
		GetIsValidBlockerDesc -> CString
		GetName -> CString
		GetTooltip -> CString
		IsEnabled -> bool
		IsSelected -> bool
		Self -> [unregistered]
	}

	EnumSettingEntry = {
		AccessSelf -> [unregistered]
		AccessSetting -> [unregistered]
		GetEnumString -> CString
		GetGUIName -> CUTF8String
		GetRecommendedText -> CString
		GetTooltip -> CUTF8String
		IsSelected -> bool
		Self -> [unregistered]
	}

	ErrorMessageBox = {
		AccessSelf -> [unregistered]
		GetErrorMessage -> CUTF8String
		Hide -> void
		Self -> [unregistered]
		Show -> void
	}

	Ethnicity = {
		AccessSelf -> [unregistered]
		GetName -> CString
		IsVisible -> bool
		Self -> [unregistered]
	}

	EthnicityItem = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	EventChainProgressEntry = {
		AccessSelf -> [unregistered]
		GetIndex -> int32
		IsDoing -> bool
		IsDone -> bool
		IsNotDone -> bool
		Self -> [unregistered]
	}

	EventEditor = {
		AccessSelf -> [unregistered]
		EventDescription -> [unregistered]
		HasEvent -> bool
		HasKeyframe -> bool
		IsAudioHandler -> bool
		IsVfxHandler -> bool
		KeyframeEditorId -> [unregistered]
		KeyframeId -> CString
		Self -> [unregistered]
	}

	EventInfo = {
		AccessSelf -> [unregistered]
		GetAsWhoInfo -> CString
		GetDate -> CString
		GetName -> CString
		Self -> [unregistered]
	}

	EventLayer = {
		AccessSelf -> [unregistered]
		AddStartEventKeyframe -> void
		HasKeyframes -> bool
		IsExpanded -> bool
		IsHovered -> bool
		Keyframes -> [unregistered]
		Self -> [unregistered]
		SetHovered -> void
		Title -> [unregistered]
		ToggleExpanded -> void
	}

	EventOption = {
		AccessSelf -> [unregistered]
		DebugOpen -> void
		Effects -> [unregistered]
		GetText -> CString
		GetTooltip -> CString
		HasFlag -> bool
		IsTimeoutOption -> bool
		IsValid -> bool
		OnEnter -> void
		OnLeave -> void
		Reasons -> [unregistered]
		Select -> void
		Self -> [unregistered]
	}

	EventTargetSetupContext = {
		AccessVariableLists -> VariableListStore
		AccessVariables -> VariableStore
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	EventWindow = {
		AccessEventWindowData -> EventWindowData
		AccessEventWindowData -> [unregistered]
		AccessSelf -> [unregistered]
		ResetContents -> void
		Self -> [unregistered]
	}

	EventWindowData = {
		GetArtifact -> Artifact
		GetPortraitCharacter -> Character
		AccessSelf -> [unregistered]
		CopyToClipboard -> void
		DebugOpen -> void
		GetAnimatedEventPortraitTexture -> [unregistered]
		GetArtifact -> [unregistered]
		GetDaysRemaining -> int32
		GetDebugInfo -> CString
		GetDescription -> CString
		GetEventBackground -> [unregistered]
		GetEventBackgroundSize -> CVector2f
		GetImmediateEffectsTooltip -> CString
		GetInvolvedCharacters -> [unregistered]
		GetOpening -> CString
		GetOptions -> [unregistered]
		GetPortraitCharacter -> [unregistered]
		GetSignature -> CString
		GetSigned -> CString
		GetStaticEventPortraitTexture -> [unregistered]
		GetThemeIcon -> [unregistered]
		GetTitle -> CString
		GetTriggerBreakdown -> CString
		HasArtifact -> bool
		HasArtifacts -> bool
		HasImmediateEffects -> bool
		HasOpening -> bool
		HasPortraitCharacter -> bool
		HasPortraitCharacters -> bool
		HasPortraitOrArtifact -> bool
		HasPortraitsOrArtifacts -> bool
		HasWidgets -> bool
		IsCharacterHighlighted -> bool
		IsTriggerFulfilled -> bool
		Self -> [unregistered]
		ShouldHideImprisonment -> bool
		ShouldShowPortraitInfo -> bool
		ShouldShowTimeoutInfo -> bool
	}

	EventWindowWidget = {
		GetScope -> TopScope
		AccessSelf -> [unregistered]
		GetScope -> [unregistered]
		Self -> [unregistered]
	}

	EventWindowWidgetChainProgress = {
		GetScope -> TopScope
		AccessSelf -> [unregistered]
		GetProgressEntries -> [unregistered]
		GetScope -> [unregistered]
		Self -> [unregistered]
	}

	EventWindowWidgetEnterText = {
		GetScope -> TopScope
		AccessDefaultEntries -> [unregistered]
		AccessSelf -> [unregistered]
		GetScope -> [unregistered]
		OnEdit -> void
		Self -> [unregistered]
	}

	EventWindowWidgetEnterTextDefaultEntry = {
		AccessSelf -> [unregistered]
		GetText -> CString
		IsSelected -> bool
		Select -> void
		Self -> [unregistered]
	}

	EventWindowWidgetNameCharacter = {
		GetCharacter -> Character
		GetScope -> TopScope
		AccessSelf -> [unregistered]
		GetCharacter -> [unregistered]
		GetCurrentName -> CString
		GetRandomAvailableAncestorName -> CString
		GetRandomAvailableCultureName -> CString
		GetRandomAvailableFaithName -> CString
		GetScope -> [unregistered]
		OnEditCurrentName -> void
		Self -> [unregistered]
		SetCurrentName -> void
		SetCurrentNameCultural -> void
	}

	ExportTool = {
		AccessSelf -> [unregistered]
		CanExport -> bool
		Cancel -> void
		CurrentProgress -> float
		CurrentProgressDesc -> CString
		Export -> void
		GetHeightmapTexture -> [unregistered]
		GetMaskEffect -> [unregistered]
		GetNotes -> CString
		GetSelectedMaskIndex -> CVector2i
		GetTexture -> [unregistered]
		HasMasks -> bool
		IsExporting -> bool
		MaxProgress -> float
		Refresh -> void
		Self -> [unregistered]
		SetExportNotes -> void
		SetSelectedMaskIndex -> void
	}

	EyeDropper = {
		GetHoverSample -> MaterialsSample
		AccessSelf -> [unregistered]
		IsEnabled -> bool
		PackedSamples -> [unregistered]
		PackedSamplesDynamic -> [unregistered]
		Self -> [unregistered]
		SetEnabled -> void
	}

	EyeDropperPackedSample = {
		GetSample -> MaterialEntry
		AccessSelf -> [unregistered]
		GetChannel -> CString
		Self -> [unregistered]
	}

	Faction = {
		GetLeader -> Character
		GetSpecialCharacter -> Character
		GetSpecialTitle -> Title
		GetTarget -> Character
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetDiscontent -> float
		GetIcon -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		GetPower -> float
		GetShortEffectDescription -> CString
		GetShowSpecialTitle -> bool
		GetSpecialCharacterTitle -> CString
		HasSpecialCharacter -> bool
		HasSpecialTitle -> bool
		IsAtWar -> bool
		IsDangerous -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	FactionCharacterMember = {
		GetMember -> Character
		AccessSelf -> [unregistered]
		CalcPower -> CFixedPoint
		GetTooltip -> CString
		IsAtWarAgainstTarget -> bool
		Self -> [unregistered]
	}

	FactionCountyMember = {
		GetFaction -> Faction
		GetMember -> Title
		AccessSelf -> [unregistered]
		CalcPower -> CFixedPoint
		GetOpinion -> int32
		GetOpinionDescription -> CString
		Self -> [unregistered]
	}

	FactionItem = {
		GetFaction -> Faction
		AccessSelf -> [unregistered]
		AreMembersVisible -> bool
		BuildJoinFactionTooltip -> CString
		BuildLeaveFactionTooltip -> CString
		BuildPressDemandsTooltip -> CString
		CanJoinFaction -> bool
		CanLeaveFaction -> bool
		CanPressDemands -> bool
		GetCharacterMembers -> [unregistered]
		GetCountyMembers -> [unregistered]
		GetDiscontent -> CFixedPoint
		GetDiscontentTarget -> CFixedPoint
		GetDiscontentTargetPosition -> [unregistered]
		GetDiscontentThresholdPosition -> [unregistered]
		GetDiscontentTooltip -> CString
		GetMaxDiscontent -> float
		GetMembersString -> CString
		GetMonthsUntilMaxDiscontent -> int32
		GetPower -> CFixedPoint
		GetPowerPushPercentage -> float
		GetPowerThresholdPosition -> [unregistered]
		GetPowerTooltip -> CString
		GetShowHideMembersTooltip -> CString
		GetShowMembersFrame -> int32
		HasCharacterMembers -> bool
		HasCountyMembers -> bool
		HasEnoughPower -> bool
		IsDiscontentAtMax -> bool
		IsDiscontentDecreasing -> bool
		IsDiscontentIncreasing -> bool
		IsDiscontentThresholdVisible -> bool
		IsPlayerLeader -> bool
		IsPlayerMember -> bool
		IsPowerThresholdVisible -> bool
		JoinFaction -> void
		LeaveFaction -> void
		PressDemmands -> void
		Self -> [unregistered]
		ShowCannotJoin -> bool
		ShowHideMembersFrame -> void
		ShowJoinButton -> bool
		ShowPotentialMembers -> void
	}

	FactionsWindow = {
		AccessSelf -> [unregistered]
		CanCreateAnyFaction -> bool
		CanJoinAnyFaction -> bool
		Close -> void
		GetCantCreateOrJoinFactionVassals -> [unregistered]
		GetCreateFactionItems -> [unregistered]
		GetJoinableFactions -> [unregistered]
		GetJoinedFactions -> [unregistered]
		GetMembersAvailableToForce -> int32
		GetTargetingFactions -> [unregistered]
		HasTargetingFactions -> bool
		HasVassalsCantCreateOrJoin -> bool
		IsInAnyFaction -> bool
		IsMyFactionsSelected -> bool
		IsTargetingFactionsSelected -> bool
		Self -> [unregistered]
		ShowMyFactions -> void
		ShowTargetingFactions -> void
	}

	Faith = {
		GetFounder -> Character
		GetGreatHolyWar -> GreatHolyWar
		GetReligion -> Religion
		GetReligiousHead -> Character
		GetReligiousHeadTitle -> Title
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		AltPriestTermPlural -> [unregistered]
		BishopFemale -> [unregistered]
		BishopFemalePlural -> [unregistered]
		BishopMale -> [unregistered]
		BishopMalePlural -> [unregistered]
		BishopNeuter -> [unregistered]
		BishopNeuterPlural -> [unregistered]
		CreatorHerHim -> [unregistered]
		CreatorHerHis -> [unregistered]
		CreatorName -> [unregistered]
		CreatorNamePossessive -> [unregistered]
		CreatorSheHe -> [unregistered]
		Custom -> CString
		CustomLoc -> CString
		DeathDeityHerHis -> [unregistered]
		DeathDeityName -> [unregistered]
		DeathDeityNamePossessive -> [unregistered]
		DeathDeitySheHe -> [unregistered]
		DevilHerHis -> [unregistered]
		DevilHerselfHimself -> [unregistered]
		DevilName -> [unregistered]
		DevilNamePossessive -> [unregistered]
		DevilSheHe -> [unregistered]
		DevoteeFemale -> [unregistered]
		DevoteeFemalePlural -> [unregistered]
		DevoteeMale -> [unregistered]
		DevoteeMalePlural -> [unregistered]
		DevoteeNeuter -> [unregistered]
		DevoteeNeuterPlural -> [unregistered]
		DivineRealm -> [unregistered]
		DivineRealm2 -> [unregistered]
		DivineRealm3 -> [unregistered]
		EvilGodNames -> [unregistered]
		FateGodHerHim -> [unregistered]
		FateGodHerHis -> [unregistered]
		FateGodName -> [unregistered]
		FateGodNamePossessive -> [unregistered]
		FateGodSheHe -> [unregistered]
		FertilityGodHerHim -> [unregistered]
		FertilityGodHerHis -> [unregistered]
		FertilityGodName -> [unregistered]
		FertilityGodNamePossessive -> [unregistered]
		FertilityGodSheHe -> [unregistered]
		GHWName -> [unregistered]
		GHWNamePlural -> [unregistered]
		GetAdherentName -> CString
		GetAdherentNameNoTooltip -> CString
		GetAdherentNamePlural -> CString
		GetAdherentNamePluralNoTooltip -> CString
		GetAdjective -> CString
		GetAdjectiveNoTooltip -> CString
		GetDefensiveGreatHolyWars -> [unregistered]
		GetDesc -> CString
		GetDoctrineBackgroundIcon -> [unregistered]
		GetDoctrines -> [unregistered]
		GetFervor -> CFixedPoint
		GetFervorChangelog -> CString
		GetFlavorDesc -> CString
		GetFounder -> [unregistered]
		GetGreatHolyWar -> [unregistered]
		GetHostilityLevelTowards -> int32
		GetID -> uint32
		GetIcon -> [unregistered]
		GetLabelFaithReligion -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		GetNumberOfCountiesOfFaith -> int32
		GetRelationNameTo -> CString
		GetReligion -> [unregistered]
		GetReligiousHead -> [unregistered]
		GetReligiousHeadTitle -> [unregistered]
		GetTextIcon -> CString
		GetYearlyFervorChange -> CFixedPoint
		GetYearlyFervorChangeDesc -> CString
		GoodGodNames -> [unregistered]
		HasDoctrine -> bool
		HasDoctrineByKey -> bool
		HasOffensiveGreatHolyWar -> bool
		HasParameterByKey -> bool
		HasReservedNames -> bool
		HealthGodHerHim -> [unregistered]
		HealthGodHerHis -> [unregistered]
		HealthGodName -> [unregistered]
		HealthGodNamePossessive -> [unregistered]
		HealthGodSheHe -> [unregistered]
		HighGodHerHis -> [unregistered]
		HighGodHerselfHimself -> [unregistered]
		HighGodName -> [unregistered]
		HighGodName2 -> [unregistered]
		HighGodNameAlternate -> [unregistered]
		HighGodNameAlternatePossessive -> [unregistered]
		HighGodNamePossessive -> [unregistered]
		HighGodNameSheHe -> [unregistered]
		HouseOfWorship -> [unregistered]
		HouseOfWorship2 -> [unregistered]
		HouseOfWorship3 -> [unregistered]
		HouseOfWorshipPlural -> [unregistered]
		HouseholdGodHerHim -> [unregistered]
		HouseholdGodHerHis -> [unregistered]
		HouseholdGodName -> [unregistered]
		HouseholdGodNamePossessive -> [unregistered]
		HouseholdGodSheHe -> [unregistered]
		IsSelected -> bool
		IsTraitSin -> bool
		IsTraitVirtue -> bool
		IsUnreformed -> bool
		IsValid -> bool
		KnowledgeGodHerHim -> [unregistered]
		KnowledgeGodHerHis -> [unregistered]
		KnowledgeGodName -> [unregistered]
		KnowledgeGodNamePossessive -> [unregistered]
		KnowledgeGodSheHe -> [unregistered]
		MakeScope -> Scope
		NegativeAfterLife -> [unregistered]
		NegativeAfterLife2 -> [unregistered]
		NegativeAfterLife3 -> [unregistered]
		NightGodHerHim -> [unregistered]
		NightGodHerHis -> [unregistered]
		NightGodName -> [unregistered]
		NightGodNamePossessive -> [unregistered]
		NightGodSheHe -> [unregistered]
		PantheonTerm -> [unregistered]
		PantheonTerm2 -> [unregistered]
		PantheonTerm3 -> [unregistered]
		PantheonTermHasHave -> [unregistered]
		PositiveAfterLife -> [unregistered]
		PositiveAfterLife2 -> [unregistered]
		PositiveAfterLife3 -> [unregistered]
		PriestFemale -> [unregistered]
		PriestFemalePlural -> [unregistered]
		PriestMale -> [unregistered]
		PriestMalePlural -> [unregistered]
		PriestNeuter -> [unregistered]
		PriestNeuterPlural -> [unregistered]
		RandomCustom -> CString
		ReligiousHeadName -> [unregistered]
		ReligiousHeadTitleName -> [unregistered]
		ReligiousSymbol -> [unregistered]
		ReligiousSymbol2 -> [unregistered]
		ReligiousSymbol3 -> [unregistered]
		ReligiousText -> [unregistered]
		ReligiousText2 -> [unregistered]
		ReligiousText3 -> [unregistered]
		Self -> [unregistered]
		TricksterGodHerHim -> [unregistered]
		TricksterGodHerHis -> [unregistered]
		TricksterGodName -> [unregistered]
		TricksterGodNamePossessive -> [unregistered]
		TricksterGodSheHe -> [unregistered]
		WarGodHerHim -> [unregistered]
		WarGodHerHis -> [unregistered]
		WarGodName -> [unregistered]
		WarGodNamePossessive -> [unregistered]
		WarGodSheHe -> [unregistered]
		WaterGodHerHim -> [unregistered]
		WaterGodHerHis -> [unregistered]
		WaterGodName -> [unregistered]
		WaterGodNamePossessive -> [unregistered]
		WaterGodSheHe -> [unregistered]
		WealthGodHerHim -> [unregistered]
		WealthGodHerHis -> [unregistered]
		WealthGodName -> [unregistered]
		WealthGodNamePossessive -> [unregistered]
		WealthGodSheHe -> [unregistered]
		WitchGodHerHim -> [unregistered]
		WitchGodHerHis -> [unregistered]
		WitchGodMistressMaster -> [unregistered]
		WitchGodMotherFather -> [unregistered]
		WitchGodName -> [unregistered]
		WitchGodNamePossessive -> [unregistered]
		WitchGodSheHe -> [unregistered]
		random_AltPriestTermPlural -> [unregistered]
		random_BishopFemale -> [unregistered]
		random_BishopFemalePlural -> [unregistered]
		random_BishopMale -> [unregistered]
		random_BishopMalePlural -> [unregistered]
		random_BishopNeuter -> [unregistered]
		random_BishopNeuterPlural -> [unregistered]
		random_CreatorHerHim -> [unregistered]
		random_CreatorHerHis -> [unregistered]
		random_CreatorName -> [unregistered]
		random_CreatorNamePossessive -> [unregistered]
		random_CreatorSheHe -> [unregistered]
		random_DeathDeityHerHis -> [unregistered]
		random_DeathDeityName -> [unregistered]
		random_DeathDeityNamePossessive -> [unregistered]
		random_DeathDeitySheHe -> [unregistered]
		random_DevilHerHis -> [unregistered]
		random_DevilHerselfHimself -> [unregistered]
		random_DevilName -> [unregistered]
		random_DevilNamePossessive -> [unregistered]
		random_DevilSheHe -> [unregistered]
		random_DevoteeFemale -> [unregistered]
		random_DevoteeFemalePlural -> [unregistered]
		random_DevoteeMale -> [unregistered]
		random_DevoteeMalePlural -> [unregistered]
		random_DevoteeNeuter -> [unregistered]
		random_DevoteeNeuterPlural -> [unregistered]
		random_DivineRealm -> [unregistered]
		random_DivineRealm2 -> [unregistered]
		random_DivineRealm3 -> [unregistered]
		random_EvilGodNames -> [unregistered]
		random_FateGodHerHim -> [unregistered]
		random_FateGodHerHis -> [unregistered]
		random_FateGodName -> [unregistered]
		random_FateGodNamePossessive -> [unregistered]
		random_FateGodSheHe -> [unregistered]
		random_FertilityGodHerHim -> [unregistered]
		random_FertilityGodHerHis -> [unregistered]
		random_FertilityGodName -> [unregistered]
		random_FertilityGodNamePossessive -> [unregistered]
		random_FertilityGodSheHe -> [unregistered]
		random_GHWName -> [unregistered]
		random_GHWNamePlural -> [unregistered]
		random_GoodGodNames -> [unregistered]
		random_HealthGodHerHim -> [unregistered]
		random_HealthGodHerHis -> [unregistered]
		random_HealthGodName -> [unregistered]
		random_HealthGodNamePossessive -> [unregistered]
		random_HealthGodSheHe -> [unregistered]
		random_HighGodHerHis -> [unregistered]
		random_HighGodHerselfHimself -> [unregistered]
		random_HighGodName -> [unregistered]
		random_HighGodName2 -> [unregistered]
		random_HighGodNameAlternate -> [unregistered]
		random_HighGodNameAlternatePossessive -> [unregistered]
		random_HighGodNamePossessive -> [unregistered]
		random_HighGodNameSheHe -> [unregistered]
		random_HouseOfWorship -> [unregistered]
		random_HouseOfWorship2 -> [unregistered]
		random_HouseOfWorship3 -> [unregistered]
		random_HouseOfWorshipPlural -> [unregistered]
		random_HouseholdGodHerHim -> [unregistered]
		random_HouseholdGodHerHis -> [unregistered]
		random_HouseholdGodName -> [unregistered]
		random_HouseholdGodNamePossessive -> [unregistered]
		random_HouseholdGodSheHe -> [unregistered]
		random_KnowledgeGodHerHim -> [unregistered]
		random_KnowledgeGodHerHis -> [unregistered]
		random_KnowledgeGodName -> [unregistered]
		random_KnowledgeGodNamePossessive -> [unregistered]
		random_KnowledgeGodSheHe -> [unregistered]
		random_NegativeAfterLife -> [unregistered]
		random_NegativeAfterLife2 -> [unregistered]
		random_NegativeAfterLife3 -> [unregistered]
		random_NightGodHerHim -> [unregistered]
		random_NightGodHerHis -> [unregistered]
		random_NightGodName -> [unregistered]
		random_NightGodNamePossessive -> [unregistered]
		random_NightGodSheHe -> [unregistered]
		random_PantheonTerm -> [unregistered]
		random_PantheonTerm2 -> [unregistered]
		random_PantheonTerm3 -> [unregistered]
		random_PantheonTermHasHave -> [unregistered]
		random_PositiveAfterLife -> [unregistered]
		random_PositiveAfterLife2 -> [unregistered]
		random_PositiveAfterLife3 -> [unregistered]
		random_PriestFemale -> [unregistered]
		random_PriestFemalePlural -> [unregistered]
		random_PriestMale -> [unregistered]
		random_PriestMalePlural -> [unregistered]
		random_PriestNeuter -> [unregistered]
		random_PriestNeuterPlural -> [unregistered]
		random_ReligiousHeadName -> [unregistered]
		random_ReligiousHeadTitleName -> [unregistered]
		random_ReligiousSymbol -> [unregistered]
		random_ReligiousSymbol2 -> [unregistered]
		random_ReligiousSymbol3 -> [unregistered]
		random_ReligiousText -> [unregistered]
		random_ReligiousText2 -> [unregistered]
		random_ReligiousText3 -> [unregistered]
		random_TricksterGodHerHim -> [unregistered]
		random_TricksterGodHerHis -> [unregistered]
		random_TricksterGodName -> [unregistered]
		random_TricksterGodNamePossessive -> [unregistered]
		random_TricksterGodSheHe -> [unregistered]
		random_WarGodHerHim -> [unregistered]
		random_WarGodHerHis -> [unregistered]
		random_WarGodName -> [unregistered]
		random_WarGodNamePossessive -> [unregistered]
		random_WarGodSheHe -> [unregistered]
		random_WaterGodHerHim -> [unregistered]
		random_WaterGodHerHis -> [unregistered]
		random_WaterGodName -> [unregistered]
		random_WaterGodNamePossessive -> [unregistered]
		random_WaterGodSheHe -> [unregistered]
		random_WealthGodHerHim -> [unregistered]
		random_WealthGodHerHis -> [unregistered]
		random_WealthGodName -> [unregistered]
		random_WealthGodNamePossessive -> [unregistered]
		random_WealthGodSheHe -> [unregistered]
		random_WitchGodHerHim -> [unregistered]
		random_WitchGodHerHis -> [unregistered]
		random_WitchGodMistressMaster -> [unregistered]
		random_WitchGodMotherFather -> [unregistered]
		random_WitchGodName -> [unregistered]
		random_WitchGodNamePossessive -> [unregistered]
		random_WitchGodSheHe -> [unregistered]
	}

	FaithConversionWindow = {
		GetFaith -> Faith
		GetVassalConversionWindow -> VassalConversionWindow
		AccessSelf -> [unregistered]
		CalcPietyCost -> int32
		CalcPietyMissing -> int32
		CanConvertFaith -> bool
		Close -> void
		ConvertFaith -> void
		GetConversionBlockers -> CString
		GetFaith -> [unregistered]
		GetHostilityLevel -> int32
		GetPietyCostDesc -> CString
		GetVassalConversionWindow -> [unregistered]
		Self -> [unregistered]
	}

	FaithCreationWindow = {
		GetDoctrineGroupWindow -> DoctrineGroupWindow
		GetGroupingHelper -> DoctrineGroupingFetcher
		GetVassalConversionWindow -> VassalConversionWindow
		AccessSelf -> [unregistered]
		AddsParameter -> bool
		CalcPietyCost -> int32
		CalcPietyMissing -> int32
		CanCreateFaith -> bool
		Close -> void
		CreateFaith -> void
		GetColor -> CVector4f
		GetCreationBlockers -> CString
		GetDoctrineGroupWindow -> [unregistered]
		GetDoctrineGroupingName -> CString
		GetDoctrines -> [unregistered]
		GetFaithIcon -> [unregistered]
		GetFaithIcons -> [unregistered]
		GetGroupingHelper -> [unregistered]
		GetHostilityLevel -> int32
		GetNewFaithName -> CString
		GetPietyCostDesc -> CString
		GetSins -> [unregistered]
		GetVassalConversionWindow -> [unregistered]
		GetVirtues -> [unregistered]
		HasParameter -> bool
		IsIconWindowShown -> bool
		OnEditAdherent -> void
		OnEditAdherentPlural -> void
		OnEditAdjective -> void
		OnEditDescription -> void
		OnEditName -> void
		RemovesParameter -> bool
		SelectDoctrine -> void
		SelectFaithIcon -> void
		Self -> [unregistered]
		SetColor -> void
		ToggleIconWindow -> void
	}

	FaithDoctrine = {
		GetGroup -> FaithDoctrineGroup
		AccessSelf -> [unregistered]
		CalcPietyCost -> int32
		CalcPietyCostWithFervorDiscount -> int32
		GetBaseName -> CString
		GetBaseNameNoTooltip -> CString
		GetDescription -> CString
		GetEffectsDescription -> CString
		GetGroup -> [unregistered]
		GetIcon -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		IsVisible -> bool
		Self -> [unregistered]
	}

	FaithDoctrineGroup = {
		AccessSelf -> [unregistered]
		GetGroupingKey -> CString
		GetIcon -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	FaithWindow = {
		GetFaith -> Faith
		GetGroupingHelper -> DoctrineGroupingFetcher2
		AccessSelf -> [unregistered]
		Close -> void
		GetDoctrines -> [unregistered]
		GetFaith -> [unregistered]
		GetGroupingHelper -> [unregistered]
		GetHolySites -> [unregistered]
		GetSins -> [unregistered]
		GetVirtues -> [unregistered]
		Self -> [unregistered]
		ToggleReligionWindow -> void
	}

	FeedMessageItem = {
		GetPlayerMessageItem -> PlayerMessageItem
		AccessSelf -> [unregistered]
		ClickedExpand -> bool
		ClickedExpandFinished -> void
		ClickedHide -> bool
		ClickedHideFinished -> void
		Delete -> void
		EndAnimation -> void
		Expand -> void
		GetPlayerMessageItem -> [unregistered]
		IsExpanded -> bool
		IsSetToDelete -> bool
		IsToggled -> bool
		MarkToDelete -> void
		Self -> [unregistered]
		ShouldHide -> bool
		ShouldShow -> bool
		StartAnimation -> void
	}

	FilterPresetItem = {
		GetPreset -> CharacterFilterPreset
		AccessSelf -> [unregistered]
		CanBeApplied -> bool
		GetPreset -> [unregistered]
		Self -> [unregistered]
	}

	FilterablePropertyList = {
		AccessSelf -> [unregistered]
		ClearSearchText -> void
		Filter -> void
		GetSearchText -> CUTF8String
		Search -> void
		Self -> [unregistered]
	}

	FindTitleView = {
		AccessSelf -> [unregistered]
		Close -> void
		GetTitles -> [unregistered]
		OnDone -> void
		OnEdit -> void
		Self -> [unregistered]
	}

	FindVassalListWindow = {
		GetFindVassalList -> CharacterSelectionList
		GetRelevanceBreakdown -> ValueBreakdown
		GetTitle -> Title
		AccessSelf -> [unregistered]
		Close -> void
		GetFindVassalList -> [unregistered]
		GetRelevance -> int32
		GetRelevanceBreakdown -> [unregistered]
		GetTitle -> [unregistered]
		Self -> [unregistered]
	}

	Fleet = {
		GetOwner -> Character
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	FleetPredictionMapIcon = {
		GetEmbarkCostValueBreakdown -> ValueBreakdown
		AccessSelf -> [unregistered]
		GetEmbarkCost -> CFixedPoint
		GetEmbarkCostBreakdownTooltip -> CString
		GetEmbarkCostValueBreakdown -> [unregistered]
		IsCostOverOwned -> bool
		Self -> [unregistered]
	}

	Focus = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		Self -> [unregistered]
	}

	FocusType = {
		GetLifestyle -> Lifestyle
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetEffectDescription -> CString
		GetGainAmount -> CFixedPoint
		GetGainBreakdown -> CString
		GetIcon -> [unregistered]
		GetKey -> CString
		GetLifestyle -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		IsValid -> bool
		Self -> [unregistered]
	}

	Friend = {
		AccessSelf -> [unregistered]
		GetAvailabilityString -> CUTF8String
		GetName -> CUTF8String
		GetNameWithColor -> CUTF8String
		GetUnreadMessageCount -> int32
		HasUnreadMessages -> bool
		RemoveWithConfirmation -> void
		Self -> [unregistered]
		StartChat -> void
	}

	FriendListWindow = {
		AccessSelf -> [unregistered]
		Hide -> void
		Self -> [unregistered]
		ShouldBeShown -> bool
		Show -> void
		ShowAddFriendWindow -> void
	}

	FriendRequest = {
		Accept -> void
		AccessSelf -> [unregistered]
		GetName -> CUTF8String
		Reject -> void
		Self -> [unregistered]
	}

	FriendSearchResult = {
		AccessSelf -> [unregistered]
		AddFriend -> void
		GetName -> CUTF8String
		Self -> [unregistered]
	}

	Friends = {
		AccessAvailabilityEntries -> [unregistered]
		AccessFriendRequests -> [unregistered]
		AccessFriendSearchResults -> [unregistered]
		AccessFriends -> [unregistered]
		AccessOutgoingFriendRequests -> [unregistered]
		AccessSelf -> [unregistered]
		CalcNumberOfOnlineFriends -> int32
		GetAvailabilityStringForLocalAccount -> CUTF8String
		GetLocalProfileName -> CUTF8String
		GetSearchString -> CUTF8String
		GetSelectedAvailabilityEntryIndex -> CVector2i
		HasIngoingFriendRequests -> bool
		HasOutgoingFriendRequests -> bool
		Search -> void
		Self -> [unregistered]
		SetSearchString -> void
		SetSelectedAvailabilityEntryIndex -> void
		UpdateFriends -> void
	}

	FrontEndCreditsView = {
		AccessSelf -> [unregistered]
		OnBack -> void
		Self -> [unregistered]
	}

	FrontEndLoadView = {
		AccessMPConfig -> MPConfig
		GetContinueSave -> SaveGameItem
		GetMPConfig -> MPConfig
		GetSelectedSavegame -> SaveGameItem
		AccessSelf -> [unregistered]
		CanDoContinue -> bool
		GetSaveGames -> [unregistered]
		HasSelectedSavegame -> bool
		OnBack -> void
		OnContinue -> void
		OnDelete -> void
		OnLoad -> void
		OnShowInvalidSavegames -> void
		PreContinueSaveCheck -> void
		Self -> [unregistered]
		ShouldShowInvalidSavegames -> bool
	}

	FrontEndMainView = {
		AccessLoadView -> FrontEndLoadView
		AccessSelf -> [unregistered]
		GetBackground -> [unregistered]
		GetHeirCharacterAge -> int32
		GetHeirCharacterTexture -> [unregistered]
		GetMainCharacterAge -> int32
		GetMainCharacterTexture -> [unregistered]
		GetSecondaryCharacterAge -> int32
		GetSecondaryCharacterTexture -> [unregistered]
		OnContent -> void
		OnContinue -> void
		OnCredits -> void
		OnHost -> void
		OnLoad -> void
		OnLogin -> void
		OnMultiPlayer -> void
		OnNewGame -> void
		OnNudge -> void
		OnQuit -> void
		OnSettings -> void
		Self -> [unregistered]
		ShowHeirCharacter -> bool
		ShowSecondaryCharacter -> bool
	}

	FrontEndMultiplayerView = {
		AccessSelf -> [unregistered]
		OnBack -> void
		OnHost -> void
		OnLoad -> void
		OnNewGame -> void
		Self -> [unregistered]
	}

	FrontEndView = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	GUIAchievement = {
		GetAchievement -> Achievement
		AccessLockedTexture -> [unregistered]
		AccessSelf -> [unregistered]
		AccessTexture -> [unregistered]
		GetAchievement -> [unregistered]
		GetDescription -> CUTF8String
		GetHappenedDescription -> CUTF8String
		GetName -> CUTF8String
		IsPossible -> bool
		OnClick -> void
		Remove -> void
		Self -> [unregistered]
	}

	GUIAlertItem = {
		GetImportantAction -> ImportantActionItem
		GetImportantActionType -> ImportantActionType
		AccessSelf -> [unregistered]
		AddingFinished -> void
		EndAnimation -> void
		GetImportantAction -> [unregistered]
		GetImportantActionType -> [unregistered]
		GetTooltip -> CString
		IsAdded -> bool
		IsAdding -> bool
		IsRemoving -> bool
		OnClick -> void
		OnRightClick -> void
		PlayShowSound -> void
		RemovingFinished -> void
		Self -> [unregistered]
		StartAnimation -> void
	}

	GUIBuildingItem = {
		GetCurrentOrConstrucingBuilding -> Building
		AccessSelf -> [unregistered]
		CanConstructBuilding -> bool
		CanUpgrade -> bool
		CanUpgradePrimaryBuilding -> bool
		CancelConstruction -> void
		GetBuildingDisabledDesc -> CString
		GetConstructingProgress -> float
		GetLevelFrame -> int32
		GetLevelTexture -> [unregistered]
		GetTooltip -> CString
		GetTooltipParentAnchor -> uint32
		GetTooltipWidgetAnchor -> uint32
		HasControlOfBuilding -> bool
		HasLevel -> bool
		HasPotentialBuilding -> bool
		IsBuildNewIconShown -> bool
		IsBuildingButtonEnabled -> bool
		IsBuildingButtonShown -> bool
		IsBuildingDisabled -> bool
		IsBuildingSlotShown -> bool
		IsConstructing -> bool
		IsHighlighted -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	GUICountyHolding = {
		GetHolding -> Holding
		AccessSelf -> [unregistered]
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	GUIPotentialBuildingItem = {
		GetBuilding -> Building
		GetConstructionTime -> ValueBreakdown
		GetGoldCost -> ValueBreakdown
		GetPietyCost -> ValueBreakdown
		GetPrestigeCost -> ValueBreakdown
		AccessSelf -> [unregistered]
		CanConstruct -> bool
		Construct -> void
		GetConstructionTime -> [unregistered]
		GetGoldCost -> [unregistered]
		GetLevelIcon -> [unregistered]
		GetLevelIconFrame -> int32
		GetPietyCost -> [unregistered]
		GetPrestigeCost -> [unregistered]
		GetTooltip -> CString
		HasGoldCost -> bool
		HasPietyCost -> bool
		HasPrestigeCost -> bool
		Self -> [unregistered]
		ShowDetails -> void
	}

	GUITrackItem = {
		GetConstructingBuilding -> Building
		GetCurrentBuilding -> Building
		GetNextBuilding -> Building
		GetNextConstructionTime -> ValueBreakdown
		GetNextGoldCost -> ValueBreakdown
		GetNextPietyCost -> ValueBreakdown
		GetNextPrestigeCost -> ValueBreakdown
		GetSelectedBuilding -> Building
		GetSelectedConstructionTime -> ValueBreakdown
		GetSelectedGoldCost -> ValueBreakdown
		GetSelectedPietyCost -> ValueBreakdown
		GetSelectedPrestigeCost -> ValueBreakdown
		AccessSelf -> [unregistered]
		CanConstructNextBuilding -> bool
		CanConstructSelectedBuilding -> bool
		CanReplaceOrCancel -> bool
		CanShowReplaceOrCancel -> bool
		GetBuildingTypeText -> CString
		GetConstructTimeLeft -> CString
		GetConstructionEndDate -> CString
		GetConstructionProgress -> float
		GetCurrentBuildingTooltip -> CString
		GetCurrentLevelIcon -> [unregistered]
		GetNextBuildingTooltip -> CString
		GetNextConstructionTime -> [unregistered]
		GetNextGoldCost -> [unregistered]
		GetNextLevelIcon -> [unregistered]
		GetNextLevelIconFrame -> int32
		GetNextPietyCost -> [unregistered]
		GetNextPrestigeCost -> [unregistered]
		GetPostLevelItems -> [unregistered]
		GetPreLevelItems -> [unregistered]
		GetReplaceOrCancelTooltip -> CString
		GetSelectedBuildingBlockReasons -> CString
		GetSelectedBuildingTooltip -> CString
		GetSelectedConstructionTime -> [unregistered]
		GetSelectedGoldCost -> [unregistered]
		GetSelectedPietyCost -> [unregistered]
		GetSelectedPrestigeCost -> [unregistered]
		GoBack -> void
		HasCurrentBuilding -> bool
		HasNextBuilding -> bool
		HasNextGoldCost -> bool
		HasNextPietyCost -> bool
		HasNextPrestigeCost -> bool
		HasSelectedGoldCost -> bool
		HasSelectedPietyCost -> bool
		HasSelectedPrestigeCost -> bool
		IsConstructing -> bool
		IsCurrentBuildingSelected -> bool
		IsNextBuildingSelected -> bool
		OnClick -> void
		OnCurrentBuildingClick -> void
		OnNextBuildingClick -> void
		ReplaceOrCancel -> void
		Self -> [unregistered]
	}

	GameConceptTooltip = {
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetFrame -> int32
		GetFrameSize -> CVector2i
		GetIcon -> [unregistered]
		GetName -> CString
		GetOriginalAliasName -> CString
		GetParentText -> CString
		HasIcon -> bool
		Self -> [unregistered]
	}

	GameDialog = {
		Accept -> void
		AccessSelf -> [unregistered]
		CanAccept -> bool
		Decline -> void
		GetAcceptText -> CString
		GetCanAcceptBlocker -> CString
		GetDescription -> CString
		GetTitle -> CString
		Self -> [unregistered]
	}

	GameMpSetup = {
		GetSelectedBookmark -> MpBookmarkItem
		GetSelectedSaveGame -> SaveGameItem
		GetSelectedStartDate -> Date
		AccessSelf -> [unregistered]
		CanStart -> bool
		GetBookmarkDescription -> CString
		GetBookmarkItems -> [unregistered]
		GetEnabledDLCs -> [unregistered]
		GetEnabledMods -> [unregistered]
		GetSaveGames -> [unregistered]
		GetSelectedStartDate -> [unregistered]
		IsAutoAccept -> bool
		IsBookmarkSelected -> bool
		IsInvite -> bool
		IsPublicCrossplay -> bool
		IsPublicNoCrossplay -> bool
		IsSaveGameSelected -> bool
		IsShowInvalidSavegames -> bool
		OnBack -> void
		OnDelete -> void
		OnStart -> void
		Self -> [unregistered]
		SetVisibilityInvite -> void
		SetVisibilityPublicCrossplay -> void
		SetVisibilityPublicNoCrossplay -> void
		StartTooltip -> CString
		ToggleAutoAccept -> void
		ToggleVisibility -> void
	}

	GameRule = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetSettings -> [unregistered]
		Self -> [unregistered]
	}

	GameRuleSetting = {
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetName -> CString
		HasFlag -> bool
		Self -> [unregistered]
	}

	GameSetup = {
		AccessMPConfig -> MPConfig
		GetHoveredCharacterGUI -> BookmarkCharacterGUI
		GetMPConfig -> MPConfig
		GetSelectedBookmark -> Bookmark
		GetSelectedCharacterGUI -> BookmarkCharacterGUI
		GetSelectedDate -> Date
		GetTutorialCharacter -> BookmarkCharacterGUI
		AccessSelf -> [unregistered]
		CanStart -> bool
		CustomPlayTooltip -> CString
		GetBookmarkDescription -> CString
		GetBookmarkName -> CString
		GetBookmarks -> [unregistered]
		GetSelectedBookmarkCharacters -> [unregistered]
		GetSelectedDate -> [unregistered]
		HasGameStarted -> bool
		HasHoveredCharacter -> bool
		HasSelectedCharacter -> bool
		IsCurrentBookmarkPlayable -> bool
		OnBack -> void
		OnCustomStart -> void
		OnPlayTutorial -> void
		OnShowTutorialPrompt -> void
		OnSkipTutorial -> void
		OnStart -> void
		PlayTooltip -> CString
		ResetView -> void
		Self -> [unregistered]
		ShouldShowTutorialPrompt -> bool
		StartGame -> void
	}

	GeneCategory = {
		AccessSelf -> [unregistered]
		GetName -> CString
		IsOnlyVisibleFemale -> bool
		IsType -> bool
		Self -> [unregistered]
		ShowMorphGeneSlider -> bool
	}

	GeneItem = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	GeneTemplate = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	GenerationItem = {
		AccessSelf -> [unregistered]
		GetChildPortraitItems -> [unregistered]
		Self -> [unregistered]
	}

	GeographicalRegion = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		Self -> [unregistered]
	}

	GfxSkin = {
		AccessSelf -> [unregistered]
		GetFolders -> [unregistered]
		GetName -> CString
		GetPath -> CString
		GetTextures -> [unregistered]
		Self -> [unregistered]
	}

	GovernmentType = {
		AccessSelf -> [unregistered]
		GetAdjective -> CString
		GetAdjectiveNoTooltip -> CString
		GetDescription -> CString
		GetFlagInfo -> CString
		GetHoldingInfo -> CString
		GetIcon -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		GetRealmFrame -> [unregistered]
		GetRealmMask -> [unregistered]
		GetRealmName -> CString
		GetRealmNameNoTooltip -> CString
		GetRuleInfo -> CString
		GetVassalsLabel -> CString
		IsAffectedByDevelopment -> bool
		IsType -> bool
		Self -> [unregistered]
	}

	GovernmentTypeHeader = {
		GetGovernmentType -> GovernmentType
		AccessSelf -> [unregistered]
		GetGovernmentType -> [unregistered]
		GetVassalsCount -> int32
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	GrantTitleOffer = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	GrantTitlesInteractionWindow = {
		GetCharacterInteractionConfirmationWindow -> CharacterInteractionConfirmationWindow
		AccessSelf -> [unregistered]
		CanSendOffer -> bool
		Close -> void
		GetCharacterInteractionConfirmationWindow -> [unregistered]
		GetDomainLimitTooltip -> CString
		GetExtraAcceptEffectDescription -> CString
		GetGrantTitleDescription -> CString
		GetLosingVassalText -> CString
		GetResultingDomainSize -> int32
		GetSendOfferTooltip -> CString
		GetTimedFilterLabel -> CString
		GetTimedFilterTooltip -> CString
		HasTimedFilter -> bool
		HasTitles -> bool
		OnTimedFilter -> void
		Self -> [unregistered]
		Send -> void
	}

	Graph = {
		AccessSelf -> [unregistered]
		Errors -> [unregistered]
		HasErrors -> bool
		Self -> [unregistered]
	}

	GraphInterfaceNodeWindow = {
		AccessSelf -> [unregistered]
		AddPin -> void
		Self -> [unregistered]
	}

	GraphPanel = {
		AccessSelf -> [unregistered]
		ClearSelection -> void
		CompoundNodeUpdated -> void
		Copy -> void
		CreateNodeByName -> bool
		Cut -> void
		Delete -> void
		Fit -> void
		GetNodeLineTexture -> [unregistered]
		InvertSelection -> void
		IsPasteable -> bool
		IsRedoable -> bool
		IsSaveable -> bool
		IsUndoable -> bool
		Load -> void
		New -> void
		Paste -> void
		PasteSkipOuter -> void
		Properties -> void
		Redo -> void
		Save -> void
		SaveAs -> void
		SelectAll -> void
		Self -> [unregistered]
		SetZoom -> void
		ShowNodeSearch -> void
		Undo -> void
	}

	GreatHolyWar = {
		GetDesignatedWinner -> Character
		GetFaith -> Faith
		GetLaunchDate -> Date
		GetTargetCharacter -> Character
		GetTargetTitle -> Title
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		CalculateContributionRank -> int32
		Custom -> CString
		GetAttackerStrength -> int32
		GetDefenderStrength -> int32
		GetDesignatedWinner -> [unregistered]
		GetFaith -> [unregistered]
		GetID -> uint32
		GetInverseStrengthBalance -> CFixedPoint
		GetLaunchDate -> [unregistered]
		GetName -> CString
		GetPledgedAttackers -> [unregistered]
		GetPledgedDefenders -> [unregistered]
		GetStrengthBalance -> CFixedPoint
		GetStrengthProgress -> float
		GetTargetCharacter -> [unregistered]
		GetTargetTitle -> [unregistered]
		GetTimeUntilLaunch -> CString
		GetTooltip -> CString
		GetWarChestGold -> CFixedPoint
		GetWarChestPiety -> CFixedPoint
		GetWarChestPrestige -> CFixedPoint
		HasWarStarted -> bool
		IsDirectedGhw -> bool
		IsOverridingDesignatedWinner -> bool
		IsPledgedAttacker -> bool
		IsPledgedDefender -> bool
		IsPledgedParticipant -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	GreatHolyWarParticipant = {
		GetBeneficiary -> Character
		GetParticipant -> Character
		AccessSelf -> [unregistered]
		GetBeneficiary -> [unregistered]
		GetParticipant -> [unregistered]
		IsForced -> bool
		OverridesDesignatedWinner -> bool
		Self -> [unregistered]
	}

	GreatHolyWarParticipantScore = {
		AccessSelf -> [unregistered]
		GetScore -> int32
		GetScorePercent -> CFixedPoint
		Self -> [unregistered]
	}

	GreatHolyWarWindow = {
		GetArmyComposition -> ArmyComposition
		GetGreatHolyWar -> GreatHolyWar
		GetScore -> GreatHolyWarParticipantScore
		AccessSelf -> [unregistered]
		CanHaveScore -> bool
		ChangeTarget -> void
		Close -> void
		GetArmyComposition -> [unregistered]
		GetGiveGoldTooltip -> CString
		GetGoldForCharacter -> int32
		GetGreatHolyWar -> [unregistered]
		GetOverrideCandidateTooltip -> CString
		GetPietyForCharacter -> int32
		GetPlayerScoreTooltip -> CString
		GetPledgeTooltip -> CString
		GetPrestigeForCharacter -> int32
		GetRankForCharacter -> CString
		GetScope -> TopScope
		GetScore -> [unregistered]
		GetScoreBreakdown -> CString
		HasPotentialBeneficiary -> bool
		IsCharacterMaxScoreReached -> bool
		PledgeToGreatHolyWar -> void
		Self -> [unregistered]
	}

	Group = {
		AccessSelf -> [unregistered]
		AccessVisibleAchievements -> [unregistered]
		CalcNumberOfUnlockedVisibleAchievements -> int32
		GetName -> CUTF8String
		GetNumberOfVisibleAchievements -> int32
		IsCollapsed -> bool
		Self -> [unregistered]
		ToggleCollapsed -> void
	}

	GroupNodeWindow = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	GuiActionImportantActionItem = {
		GetImportantAction -> ImportantActionItem
		AccessSelf -> [unregistered]
		GetImportantAction -> [unregistered]
		Self -> [unregistered]
	}

	GuiActionItem = {
		GetActionItem -> ImportantActionItem
		GetActionType -> ImportantActionType
		GetFirstVisibleActionItem -> ImportantActionItem
		AccessSelf -> [unregistered]
		Dismiss -> void
		GetActionItem -> [unregistered]
		GetActionType -> [unregistered]
		GetCombinedGroupLabel -> CString
		GetCombinedGroupName -> CString
		GetCombinedTooltip -> CString
		GetFirstVisibleActionItem -> [unregistered]
		GetImportantActionItems -> [unregistered]
		GetNumberOfVisibleItems -> int32
		HasAnyActionIsDangerous -> bool
		HasMultipleActions -> bool
		IsExpanded -> bool
		IsRead -> bool
		IsUnimportant -> bool
		IsVisible -> bool
		MarkAsRead -> void
		OnClick -> void
		Self -> [unregistered]
	}

	GuiAnimationTimeline = {
		AnimationTimelineState -> Timeline
		AccessSelf -> [unregistered]
		AddKeyframeAtTimelineMarker -> void
		AnimationTimelineState -> [unregistered]
		CanResetAnimatableState -> bool
		CreateNewAnimation -> void
		CreateNewAnimationSet -> void
		DeleteAnimationSet -> void
		DeleteSelectedAnimation -> void
		EditorPlayerSize -> CVector2f
		EditorStep -> float
		GetSelectedWidgetDescription -> CString
		HasLoadedAnimation -> bool
		HasSelectedWidget -> bool
		IsLooping -> bool
		IsPlaying -> bool
		IsRedoable -> bool
		IsUndoable -> bool
		OnKeyframeMove -> void
		OnKeyframePressed -> void
		OnKeyframeReleased -> void
		OnKeyframeRightClick -> void
		OnRenameSelectedAnimationClicked -> void
		OnRenameSelectedAnimationSetClicked -> void
		OnTimelinePlayerChange -> void
		Redo -> void
		ResetAnimatableState -> void
		RollForward -> void
		Rollback -> void
		Save -> void
		SaveAs -> void
		Self -> [unregistered]
		SetAnimationLength -> void
		StepBackwards -> void
		StepForward -> void
		ToggleLooping -> void
		TogglePausePlay -> void
		Undo -> void
	}

	GuiClaimant = {
		GetCharacter -> Character
		GetMilitaryStrengthInfo -> GuiMilitaryStrength
		AccessSelf -> [unregistered]
		GetCharacter -> [unregistered]
		IsAlly -> bool
		IsAllyDesc -> CString
		IsImplicit -> bool
		IsPressed -> bool
		Self -> [unregistered]
	}

	GuiContext = {
		AccessSelf -> [unregistered]
		GetScreenResolution -> CVector2f
		Self -> [unregistered]
	}

	GuiCouncilPosition = {
		GetActiveCouncilTask -> ActiveCouncilTask
		GetMainSkillItem -> SkillItem
		GetSkillItemForTask -> SkillItem
		AccessSelf -> [unregistered]
		ArePotentialTasksVisible -> bool
		CanPotentiallySelectCouncillor -> bool
		CanSelectCouncillor -> bool
		GetActiveCouncilTask -> [unregistered]
		GetMainSkillItem -> [unregistered]
		GetPotentialCouncilTasks -> [unregistered]
		GetSelectCouncillorTooltip -> CString
		GetShowHideTasksFrame -> int32
		GetShowHideTooltip -> CString
		GetSkillItemForTask -> [unregistered]
		GetSkillItems -> [unregistered]
		GetSkillModifierForTask -> int32
		SelectCouncillor -> void
		Self -> [unregistered]
		ShouldShowExpandTasks -> bool
		ShowHideTasks -> void
	}

	GuiCultureEra = {
		GetCultureEra -> CultureEra
		AccessSelf -> [unregistered]
		GetCultureEra -> [unregistered]
		GetCultureEraGroups -> [unregistered]
		GetDiscoveredByString -> CString
		GetJoinedLeftString -> CString
		IsSelected -> bool
		Select -> void
		Self -> [unregistered]
		ShowDiscoveredByString -> bool
	}

	GuiCultureEraGroup = {
		AccessSelf -> [unregistered]
		GetInnovations -> [unregistered]
		GetName -> CString
		HasInnovations -> bool
		Self -> [unregistered]
	}

	GuiCultureInnovation = {
		GetCultureInnovation -> CultureInnovation
		GetWindow -> CultureWindow
		AccessSelf -> [unregistered]
		GetCultureInnovation -> [unregistered]
		GetWindow -> [unregistered]
		Self -> [unregistered]
	}

	GuiCultureTradition = {
		GetTradition -> CultureTradition
		AccessSelf -> [unregistered]
		GetTradition -> [unregistered]
		IsEmpty -> bool
		IsNextAvailable -> bool
		Self -> [unregistered]
	}

	GuiEditor = {
		GetTooltip -> GuiEditorTooltip
		SelectionHistory -> SelectionHistory
		AccessSelf -> [unregistered]
		GetSelectedAnchor -> CVector2f
		GetSelectedName -> CString
		GetSelectedParentAnchor -> CVector2f
		GetSelectedType -> CString
		HasWidgetSelected -> bool
		HasWidgetSelectedParent -> bool
		IsDescSelected -> bool
		IsEnableAutosave -> bool
		IsEnableEdit -> bool
		IsEnableHierarchy -> bool
		IsEnableOutsideParent -> bool
		IsRedoable -> bool
		IsSaveable -> bool
		IsUndoable -> bool
		SelectNext -> void
		SelectPrevious -> void
		Self -> [unregistered]
		ShowOutlinerSettingsMenu -> void
	}

	GuiEditorCategory = {
		AccessSelf -> [unregistered]
		AddProperty -> void
		OpenFile -> void
		SelectDescription -> void
		Self -> [unregistered]
	}

	GuiEditorDockable = {
		AccessSelf -> [unregistered]
		OnClose -> void
		Self -> [unregistered]
		Title -> CString
	}

	GuiEditorOutliner = {
		GuiEditor -> GuiEditor
		AccessSelf -> [unregistered]
		GetAutoSaveTooltip -> CString
		GetFilterCount -> int32
		GetSaveAsTooltip -> CString
		GetSaveTooltip -> CString
		HasFilterMatches -> bool
		IsDescTreeFiltered -> bool
		IsShowOnlyActiveFile -> bool
		OpenWindowMenu -> void
		Self -> [unregistered]
		SetShowOnlyActiveFile -> void
	}

	GuiEditorProperties = {
		GuiEditor -> GuiEditor
		AccessSelf -> [unregistered]
		Add -> void
		CollapseCategories -> void
		IsHovering -> bool
		IsShowAll -> bool
		Self -> [unregistered]
		SetHovering -> void
		SetPropertyFilter -> void
		SetShowAll -> void
		ShowPropertiesSettingsMenu -> void
	}

	GuiEditorProperty = {
		ToolProperty -> ToolProperty
		AccessSelf -> [unregistered]
		GetComments -> CString
		HasComments -> bool
		IsProperty -> bool
		OpenDataPropertySelector -> void
		RemoveProperty -> void
		Self -> [unregistered]
	}

	GuiEditorTooltip = {
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetTitle -> CString
		HasDescription -> bool
		HasTitle -> bool
		IsVisible -> bool
		Self -> [unregistered]
	}

	GuiFaithCreationDoctrineItem = {
		GetFaithCreationWindow -> FaithCreationWindow
		GetGuiFaithDoctrineItem -> GuiFaithDoctrineItem
		AccessSelf -> [unregistered]
		CanPick -> bool
		GetBlockers -> CString
		GetFaithCreationWindow -> [unregistered]
		GetGuiFaithDoctrineItem -> [unregistered]
		GetSlotIndex -> int32
		IsSelected -> bool
		Self -> [unregistered]
		ShouldDisplay -> bool
	}

	GuiFaithDoctrineItem = {
		GetDoctrine -> FaithDoctrine
		GetFaith -> Faith
		AccessSelf -> [unregistered]
		GetDoctrine -> [unregistered]
		GetFaith -> [unregistered]
		Self -> [unregistered]
	}

	GuiFaithIcon = {
		GetFaithCreationWindow -> FaithCreationWindow
		AccessSelf -> [unregistered]
		GetFaithCreationWindow -> [unregistered]
		GetIconName -> CString
		GetIconTexture -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
	}

	GuiGameRule = {
		GetRule -> GameRule
		GetSetting -> GameRuleSetting
		AccessSelf -> [unregistered]
		GetRule -> [unregistered]
		GetSetting -> [unregistered]
		Next -> void
		Prev -> void
		Self -> [unregistered]
	}

	GuiGameRulePreset = {
		GetSettingForRule -> GameRuleSetting
		AccessSelf -> [unregistered]
		GetName -> CString
		GetSettingForRule -> [unregistered]
		HasRuleWithFlag -> bool
		IsIronmanEnabled -> bool
		Self -> [unregistered]
	}

	GuiHolySiteItem = {
		GetFaith -> Faith
		GetHolySite -> HolySite
		AccessSelf -> [unregistered]
		GetControlDesc -> CString
		GetFaith -> [unregistered]
		GetHolySite -> [unregistered]
		IsHeldByFaith -> bool
		Self -> [unregistered]
	}

	GuiLaw = {
		GetLaw -> Law
		AccessSelf -> [unregistered]
		CanEnact -> bool
		Enact -> void
		GetCanEnactDescription -> CString
		GetCostDescription -> CString
		GetEnactEffectDescription -> CString
		GetShortCostString -> CString
		HasCost -> bool
		IsEnacted -> bool
		IsSelected -> bool
		Self -> [unregistered]
		SetSelected -> void
	}

	GuiLawGroup = {
		GetCurrentLevel -> GuiLaw
		GetLawGroup -> LawGroup
		GetNextLevel -> GuiLaw
		GetPreviousLevel -> GuiLaw
		GetRuler -> Character
		AccessSelf -> [unregistered]
		GetCurrentLevel -> [unregistered]
		GetLawGroup -> [unregistered]
		GetLaws -> [unregistered]
		GetNextLevel -> [unregistered]
		GetPreviousLevel -> [unregistered]
		HasNextLevel -> bool
		HasPreviousLevel -> bool
		IsAvailable -> bool
		IsNewAvailable -> bool
		Self -> [unregistered]
	}

	GuiMilitaryStrength = {
		AccessSelf -> [unregistered]
		GetFrame -> int32
		GetRatio -> float
		GetRatioDescription -> CString
		GetRatioName -> CString
		GetTargetAlliesCount -> int32
		GetTargetDescription -> CString
		GetTargetTotal -> CFixedPoint
		GetViewerAlliesCount -> int32
		GetViewerDescription -> CString
		GetViewerTotal -> CFixedPoint
		Self -> [unregistered]
		ShouldShow -> bool
	}

	GuiPotentialCouncilTask = {
		GetCouncilPosition -> GuiCouncilPosition
		GetCouncilTaskType -> CouncilTaskType
		GetDummyTask -> ActiveCouncilTask
		GetDummyTaskOrActualIfActive -> ActiveCouncilTask
		AccessSelf -> [unregistered]
		CanSelect -> bool
		GetCannotSelectTooltip -> CString
		GetDummyTask -> [unregistered]
		GetDummyTaskOrActualIfActive -> [unregistered]
		GetTaskEffect -> CString
		IsActive -> bool
		IsEnabled -> bool
		IsVisible -> bool
		SelectTaskType -> void
		Self -> [unregistered]
	}

	GuiVirtueOrSinItem = {
		GetTrait -> Trait
		AccessSelf -> [unregistered]
		GetFullDescription -> CString
		GetTrait -> [unregistered]
		IsSin -> bool
		IsVirtue -> bool
		Self -> [unregistered]
	}

	HairColorItem = {
		AccessSelf -> [unregistered]
		GetRGBA -> CVector4f
		IsDefault -> bool
		IsSelected -> bool
		OnSelect -> void
		Self -> [unregistered]
	}

	Heightmap = {
		AccessSelf -> [unregistered]
		GetHeightmapSize -> float
		Self -> [unregistered]
	}

	HeightmapPainter = {
		AccessSelf -> [unregistered]
		GetSmoothAmount -> int32
		ReloadHeightmap -> void
		Self -> [unregistered]
		SetSmoothAmount -> void
	}

	HeightmapPainterMode = {
		AccessSelf -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
	}

	HeightmapResolution = {
		AccessSelf -> [unregistered]
		ClearSelection -> void
		Decrease -> void
		GetRectangleSelect -> bool
		Increase -> void
		InvertSelection -> void
		Is16Bit -> bool
		Is8Bit -> bool
		ReloadHeightmap -> void
		SelectAll -> void
		SelectedCount -> int32
		Self -> [unregistered]
		Set16Bit -> void
		Set8Bit -> void
	}

	HiredTroop = {
		GetHiredBy -> Character
		GetHolyOrder -> HolyOrder
		GetHolyOrderPatron -> Character
		GetMartialSkillItem -> SkillItem
		GetMercenaryCompany -> MercenaryCompany
		GetTitle -> Title
		AccessSelf -> [unregistered]
		CanBeExtended -> bool
		CanBeHired -> bool
		Extend -> void
		GetCommanderTraits -> [unregistered]
		GetCurrentSoldiers -> int32
		GetExtendInfo -> CString
		GetExtendTooltip -> CString
		GetHireTooltip -> CString
		GetHiredBy -> [unregistered]
		GetHolyOrder -> [unregistered]
		GetHolyOrderLeasedTitles -> [unregistered]
		GetHolyOrderPatron -> [unregistered]
		GetKnightCount -> int32
		GetKnightsTooltip -> CString
		GetMartialSkillItem -> [unregistered]
		GetMercenaryCompany -> [unregistered]
		GetName -> CString
		GetRegiments -> [unregistered]
		GetSoldiersProgressBarRatio -> float
		GetTitle -> [unregistered]
		GetTotalSoldiers -> int32
		Hire -> void
		IsHired -> bool
		IsHiredByPlayer -> bool
		IsHolyOrder -> bool
		IsMercenaryCompany -> bool
		Self -> [unregistered]
	}

	HiredTroopDetailView = {
		GetHiredTroop -> HiredTroop
		AccessSelf -> [unregistered]
		Close -> void
		GetHiredTroop -> [unregistered]
		Self -> [unregistered]
	}

	HiredTroopItem = {
		GetHolyOrder -> HolyOrder
		GetMercenaryCompany -> MercenaryCompany
		AccessSelf -> [unregistered]
		GetHolyOrder -> [unregistered]
		GetMercenaryCompany -> [unregistered]
		GetRegiments -> [unregistered]
		IsHolyOrder -> bool
		IsMercenaryCompany -> bool
		Self -> [unregistered]
	}

	HiredTroopRegiment = {
		GetMenAtArmsType -> MenAtArmsType
		GetRegiment -> Regiment
		AccessSelf -> [unregistered]
		GetCurrentSoldiers -> int32
		GetMenAtArmsType -> [unregistered]
		GetProgressBarRatio -> float
		GetRegiment -> [unregistered]
		GetTotalSoldiers -> int32
		IsLevies -> bool
		Self -> [unregistered]
	}

	HistoryEntry = {
		GetActor -> Character
		GetDate -> Date
		GetLocation -> Province
		GetRecipient -> Character
		AccessSelf -> [unregistered]
		GetActor -> [unregistered]
		GetDate -> [unregistered]
		GetDescription -> CString
		GetLocation -> [unregistered]
		GetRecipient -> [unregistered]
		GetTitle -> CString
		GetType -> CString
		HasActor -> bool
		HasLocation -> bool
		HasRecipient -> bool
		Self -> [unregistered]
	}

	Holding = {
		GetConstructingHoldingType -> HoldingType
		GetConstructionBuilding -> Building
		GetDuchyBuildingType -> Building
		GetHolder -> Character
		GetLesseeOrHolder -> Character
		GetPrimaryBuildingType -> Building
		GetProvince -> Province
		GetType -> HoldingType
		AccessSelf -> [unregistered]
		CanConstructAnyBuilding -> bool
		GetConstructingHoldingType -> [unregistered]
		GetConstructionProgress -> [unregistered]
		GetConstructionTimeLeft -> [unregistered]
		GetCurrentGarrisonSize -> int32
		GetDuchyBuildingType -> [unregistered]
		GetHolder -> [unregistered]
		GetIllustration -> [unregistered]
		GetIncome -> CFixedPoint
		GetLesseeOrHolder -> [unregistered]
		GetLeviesTooltip -> [unregistered]
		GetMaxGarrisonSize -> int32
		GetMaxLevySize -> int32
		GetName -> CString
		GetNameNoTooltip -> CString
		GetPrimaryBuildingType -> [unregistered]
		GetProvince -> [unregistered]
		GetTaxTooltip -> [unregistered]
		GetTooltip -> CString
		GetType -> [unregistered]
		GetUnraisedLevyRatio -> CFixedPoint
		GetUnraisedLevyRatioPercent -> float
		HasDuchyBuildingSlot -> bool
		IsConstructionInProgress -> bool
		IsEmpty -> bool
		IsHoldingOrNonCapitalHoldingHovered -> bool
		IsHovered -> bool
		IsLowControl -> [unregistered]
		IsSelected -> bool
		IsShowHoldingPins -> [unregistered]
		IsValidForLesseeOrHolder -> bool
		LevyAndTaxIsAffectedByFixableSituation -> bool
		OnMouseEnter -> void
		OnMouseLeave -> void
		Self -> [unregistered]
	}

	HoldingItem = {
		GetBarony -> Title
		GetConstructionBuilding -> Building
		GetHolding -> Holding
		AccessSelf -> [unregistered]
		GetBarony -> [unregistered]
		GetBuildings -> [unregistered]
		GetConstructionBuilding -> [unregistered]
		GetHolding -> [unregistered]
		GetStatusText -> CString
		IsRealmCapital -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	HoldingType = {
		AccessSelf -> [unregistered]
		GetConceptName -> CString
		GetKey -> CString
		GetName -> CString
		GetTabIcon -> [unregistered]
		Self -> [unregistered]
	}

	HoldingTypeItem = {
		GetBuilding -> Building
		GetHoldingType -> HoldingType
		GetProvince -> Province
		AccessSelf -> [unregistered]
		CanConstructBuilding -> bool
		GetTooltip -> CString
		GetWrongHoldingCharacterInfo -> CString
		IsValidForPlayer -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	HoldingView = {
		GetCountyTitle -> Title
		GetDirectHolder -> Character
		GetFaction -> Faction
		GetGUIDuchyCapitalBuilding -> GUIBuildingItem
		GetGUIHoldingBuilding -> GUIBuildingItem
		GetGUISpecialBuilding -> GUIBuildingItem
		GetHolder -> Character
		GetHolding -> Holding
		GetHoldingBuilding -> Building
		GetProvince -> Province
		GetTitle -> Title
		GetTopLiege -> Character
		GetTrack -> GUITrackItem
		AccessSelf -> [unregistered]
		CanCancelConstruction -> bool
		CanNewHoldingBeConstructed -> bool
		CanSetCountyCapital -> bool
		CanSetRealmCapital -> bool
		CancelHoldingConstruction -> void
		Close -> void
		CloseHoldingConstruction -> void
		CloseSubwindows -> void
		GetAllFactionNames -> CString
		GetBuildings -> [unregistered]
		GetConstructionProgressForSlot -> float
		GetConstructionTimeLeftForSlot -> CString
		GetCountyHoldings -> [unregistered]
		GetCountyModifiers -> [unregistered]
		GetCountyOpinion -> int32
		GetCountyOpinionDesc -> CString
		GetCountyTitle -> [unregistered]
		GetCurrentGarrisonSize -> int32
		GetDeJureLieges -> [unregistered]
		GetDirectHolder -> [unregistered]
		GetFaction -> [unregistered]
		GetGarrisonRatio -> float
		GetGarrisonTooltip -> CString
		GetHolder -> [unregistered]
		GetHolderEffectsFromBuildingsDescription -> CString
		GetHolderModifierFromBuildingsValue -> CFixedPoint
		GetHolding -> [unregistered]
		GetHoldingBuilding -> [unregistered]
		GetHoldingConstructionTooltip -> CString
		GetHoldingDesc -> CString
		GetHoldingModifiers -> [unregistered]
		GetHoldingTypeItems -> [unregistered]
		GetHoldingUnderConstructionTooltip -> CString
		GetOccupiedInfo -> CString
		GetPotentialBuildings -> [unregistered]
		GetProvince -> [unregistered]
		GetSetRealmCapitalTooltip -> CString
		GetSupplyLimit -> int32
		GetSupplyLimitTooltip -> CString
		GetTitle -> [unregistered]
		GetTopLiege -> [unregistered]
		GetTracksViewLabel -> CString
		GetTracksViewPrompt -> CString
		GoToLocation -> void
		HasControlOfHolding -> bool
		HasDirectHolder -> bool
		HasDuchyCapitalBuildingSlot -> bool
		HasHolder -> bool
		HasHolding -> bool
		HasSpecialBuildingSlot -> bool
		HasTopLiege -> bool
		IsBeingConstructed -> bool
		IsInFaction -> bool
		IsSelectingBuildingToConstruct -> bool
		IsSelectingHoldingType -> bool
		IsSelectingNewBuilding -> bool
		NextHolding -> void
		OnClickHoldingBuilding -> void
		OnClickHoldingCancelBuilding -> void
		OnConstructHoldingClick -> void
		OnGotoFaction -> void
		OpenSiegeWindow -> void
		PanToCountyCapital -> void
		PotentialSetRealmCapital -> bool
		PreviousHolding -> void
		Self -> [unregistered]
		SetCountyCapital -> void
		SetRealmCapital -> void
		ToggleFindVassalListWindow -> void
	}

	HolyOrder = {
		GetCapital -> Title
		GetComposition -> ArmyComposition
		GetFaith -> Faith
		GetOwner -> Character
		GetPledgedGreatHolyWar -> GreatHolyWar
		GetTitle -> Title
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		CanBeRaised -> bool
		GetCapital -> [unregistered]
		GetComposition -> [unregistered]
		GetCostDescForPlayer -> [unregistered]
		GetCurrentSoldiers -> int32
		GetFaith -> [unregistered]
		GetMaxSoldiers -> int32
		GetName -> CString
		GetNumberOfKnights -> int32
		GetOwner -> [unregistered]
		GetPledgedGreatHolyWar -> [unregistered]
		GetSoldiersRatioForProgressBar -> [unregistered]
		GetTitle -> [unregistered]
		IsHired -> bool
		IsHiredByLocalPlayer -> [unregistered]
		IsPlayerPatron -> [unregistered]
		IsPledgedToGreatHolyWar -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	HolySite = {
		GetBarony -> Title
		AccessSelf -> [unregistered]
		GetBarony -> [unregistered]
		GetEffectDesc -> CString
		GetName -> CString
		Self -> [unregistered]
	}

	HolySiteIcon = {
		GetHolySite -> GuiHolySiteItem
		AccessSelf -> [unregistered]
		GetHolySite -> [unregistered]
		Self -> [unregistered]
	}

	Hook = {
		GetExpirationDate -> Date
		AccessSelf -> [unregistered]
		GetExpirationDate -> [unregistered]
		GetHookFrame -> int32
		GetHookStrengthState -> CString
		GetName -> CString
		HasExpirationDate -> bool
		Self -> [unregistered]
	}

	HouseCustomizationWindow = {
		GetCoatOfArmsDesigner -> CoatOfArmsDesigner
		GetHouse -> DynastyHouse
		AccessSelf -> [unregistered]
		CanClickFinish -> bool
		Close -> void
		GetCanClickFinishText -> CString
		GetHouse -> [unregistered]
		GetHouseNameText -> CString
		GetMottoText -> CString
		OnClickFinish -> void
		OnEditHouseNameText -> void
		OnEditMottoText -> void
		Self -> [unregistered]
	}

	HouseOrderOption = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	HudBottomWidget = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	HybridizationWindow = {
		GetEthos -> CulturePillar
		GetHeritage -> CulturePillar
		GetLanguage -> CulturePillar
		GetLeftCoA -> DesignerCoA
		GetMartial -> CulturePillar
		GetOtherCulture -> Culture
		GetRightCoA -> DesignerCoA
		GetVassalConversionWindow -> VassalConversionWindow
		AccessSelf -> [unregistered]
		CanDoHybridNamingList -> bool
		CanHaveHybridClothing -> bool
		CanHaveHybridCoAs -> bool
		CanHybridize -> bool
		CanPayCost -> bool
		Close -> void
		GetColor -> CVector4f
		GetEthos -> [unregistered]
		GetHeritage -> [unregistered]
		GetHybridizeBlockers -> CString
		GetHybridizeCostBreakdown -> CString
		GetHybridizeCostString -> CString
		GetInnovationsGained -> [unregistered]
		GetLanguage -> [unregistered]
		GetLeftCoA -> [unregistered]
		GetLeftHoldingTexture -> [unregistered]
		GetLeftNamingExamples -> CString
		GetLeftPortraitTexture -> [unregistered]
		GetMartial -> [unregistered]
		GetNewCultureName -> CString
		GetOtherCulture -> [unregistered]
		GetRightCoA -> [unregistered]
		GetRightHoldingTexture -> [unregistered]
		GetRightNamingExamples -> CString
		GetRightPortraitTexture -> [unregistered]
		GetTraditionPicksRemaining -> int32
		GetTraditionPicksTotal -> int32
		GetTraditions -> [unregistered]
		GetVassalConversionWindow -> [unregistered]
		HasHybridClothing -> bool
		HasHybridCoAs -> bool
		HasHybridNamingList -> bool
		HasLeftBuildings -> bool
		HasLeftClothing -> bool
		HasLeftCoAs -> bool
		HasLeftNamingList -> bool
		HasLeftUnits -> bool
		HasPillar -> bool
		HasRightBuildings -> bool
		HasRightClothing -> bool
		HasRightCoAs -> bool
		HasRightNamingList -> bool
		HasRightUnits -> bool
		HasTradition -> bool
		HybridizeCulture -> void
		OnEditCollectiveNoun -> void
		OnEditName -> void
		OnEditPrefix -> void
		Self -> [unregistered]
		SetColor -> void
		SetHybridClothing -> void
		SetHybridCoAs -> void
		SetHybridNamingList -> void
		SetLeftBuildings -> void
		SetLeftClothing -> void
		SetLeftCoAs -> void
		SetLeftNamingList -> void
		SetLeftUnits -> void
		SetPillar -> void
		SetRightBuildings -> void
		SetRightClothing -> void
		SetRightCoAs -> void
		SetRightNamingList -> void
		SetRightUnits -> void
		ToggleTradition -> void
	}

	Illustration = {
		AccessSelf -> [unregistered]
		GetEnvironment -> CString
		GetTexture -> [unregistered]
		GetTextureForCulture -> [unregistered]
		GetTextureForFaith -> [unregistered]
		GetTextureForTitle -> [unregistered]
		Self -> [unregistered]
	}

	ImageImport = {
		AcceptSelection -> void
		AccessSelf -> [unregistered]
		Commit -> void
		DeltaTexture -> [unregistered]
		Fit -> void
		GetErrors -> [unregistered]
		HasErrors -> bool
		IsCommitable -> bool
		IsDeltaVisible -> bool
		IsLoaded -> bool
		IsValid -> bool
		LoadStep -> float
		LoadSteps -> float
		OutputTexture -> [unregistered]
		Self -> [unregistered]
		Size -> CVector2f
		Skip -> void
		ToggleDeltaVisible -> void
		Zoom -> void
	}

	ImagePopup = {
		AccessSelf -> [unregistered]
		GetTexture -> [unregistered]
		Self -> [unregistered]
	}

	ImportTool = {
		AccessSelf -> [unregistered]
		AreAllSelected -> bool
		Cancel -> void
		GetExportMaskTexture -> [unregistered]
		GetExportNotes -> CString
		GetHeightmapTexture -> [unregistered]
		GetMaskEffect -> [unregistered]
		HasExportNotes -> bool
		Import -> void
		IsImporting -> bool
		IsSelectedIndeterminable -> bool
		IsZipLoaded -> bool
		RefreshHeightmap -> void
		Self -> [unregistered]
		SetMaskAsReferenceOverlay -> void
		ToggleAllSelected -> void
	}

	Importable = {
		AccessSelf -> [unregistered]
		GetName -> CString
		IsSelected -> bool
		Self -> [unregistered]
		SetSelected -> void
	}

	ImportableGroup = {
		AccessSelf -> [unregistered]
		AreAllSelected -> bool
		GetImportableCount -> int32
		GetImportables -> [unregistered]
		GetTitle -> CString
		HasDiffTool -> bool
		IsCollapsed -> bool
		IsSelectedIndeterminable -> bool
		LaunchDiffTool -> void
		Self -> [unregistered]
		ToggleAllSelected -> void
		ToggleCollapsed -> void
	}

	ImportantActionItem = {
		GetActionType -> ImportantActionType
		AccessSelf -> [unregistered]
		Dismiss -> void
		GetActionType -> [unregistered]
		GetCombinedLabel -> CString
		GetDescription -> CString
		GetLabel -> CString
		GetSelectionMarker -> CString
		GetTooltip -> CString
		IsRead -> bool
		IsSelected -> bool
		IsUnimportant -> bool
		IsVisible -> bool
		MarkAsRead -> void
		OnClick -> void
		Self -> [unregistered]
	}

	ImportantActionType = {
		AccessSelf -> [unregistered]
		GetIcon -> [unregistered]
		GetName -> CString
		IsDangerous -> bool
		Self -> [unregistered]
	}

	InFrontTopBar = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
		ShouldBeVisible -> bool
	}

	InGameBottomBar = {
		GetSelectedInspiration -> Inspiration
		AccessSelf -> [unregistered]
		ClearSelectedInspiration -> void
		GetSchemes -> [unregistered]
		GetSelectedInspiration -> [unregistered]
		GetWarItems -> [unregistered]
		HasSelectedInspiration -> bool
		Self -> [unregistered]
		ToggleSelectedInspiration -> void
	}

	InGameTopbar = {
		GetDynastyPrestigeItem -> PlayerValueItem
		GetExpensesBalanceBreakdown -> ValueBreakdown
		GetIncomeBalanceBreakdown -> ValueBreakdown
		GetPietyItem -> PlayerValueItem
		GetPrestigeItem -> PlayerValueItem
		AccessSelf -> [unregistered]
		GetAlertItems -> [unregistered]
		GetDiplomaticItems -> [unregistered]
		GetDynastyPrestigeItem -> [unregistered]
		GetExpensesBalanceBreakdown -> [unregistered]
		GetIncomeBalanceBreakdown -> [unregistered]
		GetPietyItem -> [unregistered]
		GetPrestigeItem -> [unregistered]
		Self -> [unregistered]
		ShouldBeVisible -> bool
	}

	InputActionBinding = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	InspectorPanel = {
		AccessSelf -> [unregistered]
		GetAnchorItems -> [unregistered]
		GetSearchFilter -> CString
		Self -> [unregistered]
		SetSearchFilter -> void
	}

	Inspiration = {
		GetOwner -> Character
		GetSponsor -> Character
		GetType -> InspirationType
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		GetBaseGoldCost -> CFixedPoint
		GetCompletionEffect -> CString
		GetDescription -> CString
		GetEstimatedTimeRemaining -> CString
		GetInvestedGold -> CFixedPoint
		GetName -> CString
		GetNameNoTooltip -> CString
		GetOwner -> [unregistered]
		GetProgress -> int32
		GetProgressChance -> int32
		GetSponsor -> [unregistered]
		GetType -> [unregistered]
		IsComplete -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	InspirationType = {
		AccessSelf -> [unregistered]
		GetIcon -> [unregistered]
		Self -> [unregistered]
	}

	InspirationsWindow = {
		GetSelectedInspiration -> Inspiration
		AccessSelf -> [unregistered]
		ClearNewInspirations -> void
		ClearSelectedInspiration -> void
		GetPotentialInspirations -> [unregistered]
		GetSelectedInspiration -> [unregistered]
		GetSponsoredInspirations -> [unregistered]
		HasPotentialOrSponsoredInspirations -> bool
		HasSelectedInspiration -> bool
		IsNewInspiration -> bool
		RemoveNewInspiration -> void
		SelectInspiration -> void
		Self -> [unregistered]
		ToggleInspiration -> void
	}

	InteractionCategoryItem = {
		GetCharacterInteractionCategory -> CharacterInteractionCategory
		AccessSelf -> [unregistered]
		GetCharacterInteractionCategory -> [unregistered]
		GetIndex -> int32
		GetInteractions -> [unregistered]
		GetName -> CString
		HasMoreHighlightedInteraction -> bool
		HasMoreInteractions -> bool
		IsVisible -> bool
		Self -> [unregistered]
		ShowMoreInteractions -> void
	}

	InteractionContainer = {
		AccessSelf -> [unregistered]
		GetInteractions -> [unregistered]
		IsVisible -> bool
		Self -> [unregistered]
	}

	InteractionEffectsDescription = {
		GetActor -> Character
		GetRecipient -> Character
		AccessSelf -> [unregistered]
		GetAcceptEffectDescription -> CString
		GetActor -> [unregistered]
		GetActorAcceptEffectDescription -> CString
		GetActorDeclineEffectDescription -> CString
		GetOtherInteractionAcceptEffects -> [unregistered]
		GetOtherInteractionDeclineEffects -> [unregistered]
		GetRecipient -> [unregistered]
		GetRecipientAcceptEffectDescription -> CString
		GetRecipientDeclineEffectDescription -> CString
		GetRejectionEffectDescription -> CString
		HasActorAcceptEffect -> bool
		HasActorDeclineEffect -> bool
		HasAnyAcceptEffect -> bool
		HasAnyDeclineEffect -> bool
		HasRecipientAcceptEffect -> bool
		HasRecipientDeclineEffect -> bool
		HasRejectionEffect -> bool
		IsMaybeAnswer -> bool
		IsShowingOnAcceptEffects -> bool
		Self -> [unregistered]
		ShowOnAcceptEffect -> void
		ShowOnDeclineEffect -> void
	}

	InteractionItem = {
		GetCharacterInteraction -> CharacterInteraction
		AccessSelf -> [unregistered]
		CheckboxEnabled -> bool
		GetAcceptTooltip -> CString
		GetCharacterInteraction -> [unregistered]
		GetCheckboxFrame -> int32
		GetCheckboxTooltip -> CString
		GetExtraIcon -> [unregistered]
		GetExtraIconText -> CString
		GetName -> CString
		GetTooltip -> CString
		GetWarningTooltipDesc -> CString
		HasIcon -> bool
		HasWarningIcon -> bool
		IsCharacterInteraction -> bool
		IsHighlighted -> bool
		IsMarriageSetting -> bool
		IsMore -> bool
		IsPotentialAccept -> bool
		IsValid -> bool
		OnClick -> void
		OnClickCheckbox -> void
		Self -> [unregistered]
		ShouldUseExtraIcon -> bool
	}

	InteractionOtherEffect = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		GetCharacter -> [unregistered]
		GetEffect -> CString
		GetListTooltip -> CString
		HasCharacter -> bool
		IsList -> bool
		Self -> [unregistered]
	}

	InteractionSchemeInfo = {
		GetArtifact -> Artifact
		GetOwner -> Character
		GetReplacedScheme -> Scheme
		GetScheme -> SchemeType
		GetTarget -> Character
		AccessSelf -> [unregistered]
		BuildPotentialAgents -> CString
		GetArtifact -> [unregistered]
		GetChanceToProgress -> int32
		GetDiscoveryDesc -> CString
		GetEstimatedTime -> CString
		GetName -> CString
		GetNumberOfPotentialAgents -> int32
		GetOwner -> [unregistered]
		GetReplacedScheme -> [unregistered]
		GetScheme -> [unregistered]
		GetSecrecy -> int32
		GetSecrecyBreakdown -> CString
		GetSuccessBreakdown -> CString
		GetSuccessChance -> int32
		GetSuccessDesc -> CString
		GetTarget -> [unregistered]
		HasDiscoveryDesc -> bool
		HasSuccessDesc -> bool
		IsReplace -> bool
		IsSecret -> bool
		Self -> [unregistered]
	}

	InteractionTitleItem = {
		GetTitle -> Title
		AccessSelf -> [unregistered]
		GetSize -> CVector2f
		GetTooltip -> CString
		IsSelectable -> bool
		IsSelected -> bool
		OnClick -> void
		OnRightClick -> void
		Self -> [unregistered]
	}

	InterfereInWarInteractionNotificationWindow = {
		GetPrimaryAlly -> Character
		GetPrimaryEnemy -> Character
		AccessSelf -> [unregistered]
		GetPrimaryAlly -> [unregistered]
		GetPrimaryEnemy -> [unregistered]
		GetRejectEffectDescription -> CString
		GetSecondaryAllies -> [unregistered]
		GetSecondaryEnemies -> [unregistered]
		HasRejectEffectDescription -> bool
		Self -> [unregistered]
	}

	InterfereInWarInteractionWindow = {
		GetCharacterInteractionConfirmationWindow -> CharacterInteractionConfirmationWindow
		AccessSelf -> [unregistered]
		CanSendOffer -> bool
		Close -> void
		GetActor -> [unregistered]
		GetCharacterInteractionConfirmationWindow -> [unregistered]
		GetRecipient -> [unregistered]
		GetSelectedWarTooltip -> CString
		GetSendOfferTooltip -> CString
		GetWarItems -> [unregistered]
		HasWars -> bool
		Self -> [unregistered]
		Send -> void
	}

	InterfereInWarWarItem = {
		GetWar -> War
		AccessSelf -> [unregistered]
		GetTooltip -> CString
		GetWar -> [unregistered]
		IsEnabled -> bool
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	IntrigueWindow = {
		GetCharacter -> Character
		GetHostileSchemes -> SkillSchemeGroup
		GetPersonalSchemes -> SkillSchemeGroup
		AccessSelf -> [unregistered]
		Close -> void
		ExposeSecret -> void
		GetHooksOnMe -> [unregistered]
		GetKnownSchemes -> [unregistered]
		GetMyHooks -> [unregistered]
		GetMySecrets -> [unregistered]
		GetMyStrongHooksCount -> int32
		GetMyWeakHooksCount -> int32
		GetSecretsKnownToMe -> [unregistered]
		GetStrongHooksOnMeCount -> int32
		GetWeakHooksOnMeCount -> int32
		HasKnownSchemes -> bool
		HasOwnSchemes -> bool
		IsTabShown -> bool
		Self -> [unregistered]
		SetTab -> void
	}

	IntrigueWindowHookItem = {
		GetCharacter -> Character
		GetHook -> Hook
		AccessSelf -> [unregistered]
		GetCharacter -> [unregistered]
		GetHook -> [unregistered]
		Self -> [unregistered]
	}

	IntrigueWindowSecretGroup = {
		GetCharacter -> Character
		GetFirstSecret -> IntrigueWindowSecretItem
		AccessSelf -> [unregistered]
		CanBlackmail -> bool
		GetCharacter -> [unregistered]
		GetFirstSecret -> [unregistered]
		GetSecrets -> [unregistered]
		HasUnspentHooks -> bool
		Self -> [unregistered]
	}

	IntrigueWindowSecretItem = {
		GetSecret -> Secret
		AccessSelf -> [unregistered]
		GetKnownBy -> [unregistered]
		GetSecret -> [unregistered]
		IsExpanded -> bool
		IsExposed -> bool
		IsSpent -> bool
		IsStrongHook -> bool
		IsWeakHook -> bool
		Self -> [unregistered]
		ToggleExpanded -> void
	}

	Inventory = {
		GetSlot -> InventorySlot
		GetSlotFromType -> InventorySlot
		AccessSelf -> [unregistered]
		CanEquip -> bool
		CanEquipArtifactInSlot -> bool
		CanEquipReplace -> bool
		GetArtifacts -> [unregistered]
		GetEquippedArtifactsInSlotTypeString -> CString
		GetEquippedSlotOfMaxSlotText -> CString
		GetNumOfArtifactInCategory -> int32
		GetNumOfArtifacts -> int32
		GetNumberOfArtifactsForSlotType -> int32
		GetNumberOfArtifactsForSlotTypeString -> int32
		GetSlot -> [unregistered]
		GetSlotFromType -> [unregistered]
		GetSlots -> [unregistered]
		HasAnyCourtArtifact -> bool
		HasAnyInventoryArtifact -> bool
		HasArtifactsOfSlotType -> bool
		HasEquippedArtifactsInSlotType -> bool
		HasUnequippedArtifactsInSlotType -> bool
		IsEmpty -> bool
		IsEquipped -> bool
		Self -> [unregistered]
	}

	InventorySlot = {
		GetArtifact -> Artifact
		GetType -> InventorySlotType
		AccessSelf -> [unregistered]
		CanHoldArtifact -> bool
		GetArtifact -> [unregistered]
		GetDesc -> CString
		GetName -> CString
		GetSlotTypeString -> CString
		GetType -> [unregistered]
		HasArtifactEquipped -> bool
		IsEmpty -> bool
		Self -> [unregistered]
	}

	InventorySlotType = {
		AccessSelf -> [unregistered]
		GetIcon -> [unregistered]
		GetName -> CString
		GetSlotTypeString -> CString
		IsInventoryType -> bool
		Self -> [unregistered]
	}

	InventoryView = {
		GetArtifactClaimsList -> ArtifactClaimsList
		GetCharacter -> Character
		GetSelectedSlot -> InventorySlot
		AccessSelf -> [unregistered]
		CanEquipInSelectedSlot -> bool
		ClearSelectedSlot -> void
		Close -> void
		Equip -> void
		GetArtifactClaimsList -> [unregistered]
		GetArtifactOnClickTooltip -> CString
		GetArtifactSortOptions -> [unregistered]
		GetArtifactSortOptionsIndex -> CVector2i
		GetCharacter -> [unregistered]
		GetNumArtifacts -> int32
		GetNumCourtArtifacts -> int32
		GetSelectedSlot -> [unregistered]
		GetSortedArtifacts -> [unregistered]
		GetUniqueInventorySlotTypes -> [unregistered]
		HasSelectedSlot -> bool
		IsArtifactEquippedInSelectedSlot -> bool
		IsArtifactSortOrderDescending -> bool
		IsSelectedSlot -> bool
		OnClickArtifact -> void
		OnClickSlot -> void
		OnClickSlotTypeTab -> void
		SelectedSlotHasType -> bool
		Self -> [unregistered]
		SortArtifacts -> void
		ToggleArtifactSortOrder -> void
		ToggleSelectedSlot -> void
		Unequip -> void
	}

	InviteCreateClaimantFactionOffer = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	JominiGUISetting = {
		AccessSelf -> [unregistered]
		GetDesc -> CString
		Self -> [unregistered]
		ShouldShow -> bool
	}

	JominiGameRules = {
		AccessNamedGameRule -> GuiGameRule
		GetSelectedPreset -> GuiGameRulePreset
		AccessSelf -> [unregistered]
		ApplySettings -> void
		DeletePresetAtIndex -> void
		DeletePresetWithName -> void
		GetInvalidPresetNameTooltip -> CString
		GetPresetSaveName -> CString
		GetRulePresets -> [unregistered]
		GetSelectedPreset -> [unregistered]
		GetSelectedPresetIndex -> int32
		GetSettings -> [unregistered]
		HasPresetWithName -> bool
		HasRuleWithFlag -> bool
		HasValidPresetSelected -> bool
		Hide -> void
		HidePresetWindow -> void
		IsIronman -> bool
		IsPresetWindowShown -> bool
		IsValidPresetName -> bool
		OnPresetSaveNameChange -> void
		OnPresetSaveNameEdit -> void
		OnSelectPreset -> void
		ResetAllToDefaults -> void
		SavePreset -> void
		Self -> [unregistered]
		SetIronman -> void
		SetPresetSaveName -> void
		ShowPresetWindow -> void
	}

	JominiNotification = {
		GetDate -> Date
		SetupDataContexts -> NotificationDummyContext
		AccessSelf -> [unregistered]
		GetAcceptButtonText -> CString
		GetDate -> [unregistered]
		GetDateOrTimestamp -> CString
		GetDeclineButtonText -> CString
		GetText -> CString
		GetTimestamp -> CString
		GetTitle -> CString
		HasDate -> bool
		HasOnAccept -> bool
		HasOnDecline -> bool
		OnAccept -> void
		OnDecline -> void
		OnNotificationClick -> void
		Self -> [unregistered]
	}

	JominiNotificationOverlay = {
		AccessSelf -> [unregistered]
		GetAlertCount -> int32
		GetAlerts -> [unregistered]
		GetNotificationCategoryCount -> int32
		GetNotificationCount -> int32
		GetNotifications -> [unregistered]
		HideSidebar -> void
		Self -> [unregistered]
		ShowSidebar -> void
		ToggleSidebar -> void
	}

	JominiPasswordPopup = {
		AccessSelf -> [unregistered]
		OnDecline -> void
		OnSubmit -> void
		Self -> [unregistered]
	}

	JominiServer = {
		AccessSelf -> [unregistered]
		GetHasPassword -> bool
		GetMaxPlayers -> int32
		GetName -> CString
		GetNumPlayers -> int32
		GetStatus -> CString
		GetVersion -> CString
		IsSameVersion -> bool
		Join -> void
		Self -> [unregistered]
	}

	JominiServerBrowserGui = {
		AccessSelf -> [unregistered]
		AccessServers -> [unregistered]
		GetServers -> [unregistered]
		IsCrossPlatformFilterSet -> bool
		IsEmptyFilterSet -> bool
		IsFullFilterSet -> bool
		IsHasPasswordFilterSet -> bool
		IsRefreshing -> bool
		IsSameModsFilterSet -> bool
		IsSameVersionFilterSet -> bool
		IsSortAscending -> bool
		IsSortedBy -> bool
		JoinServerWithId -> void
		OnFilterTextEdit -> void
		RefreshServers -> void
		Self -> [unregistered]
		SetFilterText -> void
		SetServerId -> void
		Sort -> void
		ToggleCrossPlatformFilter -> void
		ToggleEmptyFilter -> void
		ToggleFullFilter -> void
		ToggleHasPasswordFilter -> void
		ToggleSameModsFilter -> void
		ToggleSameVersionFilter -> void
	}

	JominiSettingsWindow = {
		AccessActivePage -> SettingsPage
		AccessActivePage -> [unregistered]
		AccessPages -> [unregistered]
		AccessSelf -> [unregistered]
		GetInputActionName -> CString
		GetInputBindingText -> CString
		GetInputProfileFileName -> CString
		GetKeyCodeName -> CString
		GetWarningText -> CString
		HasChanged -> bool
		HasDefaultProfile -> bool
		HasInputProfileFileName -> bool
		Hide -> void
		IsCurrentActivePageId -> bool
		IsInputPopUpEnabled -> bool
		OnClickCancel -> void
		OnClickClear -> void
		OnClickConfirm -> void
		OnClickLoadDefaultProfile -> void
		OnClickLoadProfile -> void
		OnClickSaveProfile -> void
		OnEditProfileFileName -> void
		RequireRestart -> bool
		Restore -> void
		Save -> void
		SaveAndClose -> void
		Self -> [unregistered]
		ShouldShowWarningText -> bool
		Show -> void
		ShowInputPopUp -> void
	}

	Keyframe = {
		AccessSelf -> [unregistered]
		IsHovered -> bool
		IsSelected -> bool
		KeyframeColor -> CVector4f
		Label -> CString
		Self -> [unregistered]
		SetHovered -> void
		SetSelected -> void
		TimePoint -> float
	}

	KeyframeEditor = {
		AccessSelf -> [unregistered]
		OnLaneClick -> void
		Self -> [unregistered]
	}

	KeyframeWidget = {
		AccessSelf -> [unregistered]
		GetValue -> float
		Self -> [unregistered]
	}

	KillListWindow = {
		GetCharacter -> Character
		GetKills -> CharacterSelectionList
		AccessSelf -> [unregistered]
		Close -> void
		GetCharacter -> [unregistered]
		GetKills -> [unregistered]
		Self -> [unregistered]
	}

	KnightsView = {
		GetMilitaryView -> MilitaryView
		AccessSelf -> [unregistered]
		Close -> void
		GetMilitaryView -> [unregistered]
		Self -> [unregistered]
	}

	LandedTitpleTemplate = {
		GetCoA -> CoatOfArms
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	LanguageEntry = {
		AccessSelf -> [unregistered]
		GetLanguage -> CUTF8String
		Self -> [unregistered]
	}

	LanguageWindow = {
		GetGrandestRoyalCourt -> RankedRoyalCourtItem
		GetLanguage -> CulturePillar
		AccessSelf -> [unregistered]
		Close -> void
		GetGrandestRoyalCourt -> [unregistered]
		GetLanguage -> [unregistered]
		GetRankedRoyalCourtItems -> [unregistered]
		Self -> [unregistered]
	}

	Law = {
		AccessSelf -> [unregistered]
		GetEffectDescription -> CString
		GetEnactBreakdownForPlayer -> CString
		GetEnactCostForPlayer -> CString
		GetEnactEffectDescriptionForPlayer -> CString
		GetIcon -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		GetSubName -> CString
		GetTitleEnactEffectDescriptionForPlayer -> CString
		HasSubName -> bool
		Self -> [unregistered]
	}

	LawGroup = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetNameSingular -> CString
		HasFlag -> bool
		IsCumulative -> bool
		Self -> [unregistered]
	}

	LawItem = {
		GetLaw -> Law
		AccessSelf -> [unregistered]
		GetLaw -> [unregistered]
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	Layer = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	LayerTreeItem = {
		GetEntry -> Type
		AccessSelf -> [unregistered]
		GetInstanceCount -> int32
		GetLayer -> CString
		IsExpanded -> bool
		IsHidden -> bool
		IsLayer -> bool
		IsLocked -> bool
		IsSelected -> bool
		SelectItem -> void
		Self -> [unregistered]
		ToggleExclusiveLayerHidden -> void
		ToggleExclusiveLock -> void
		ToggleLayerHidden -> void
		ToggleLock -> void
	}

	LayeredIcon = {
		AccessSelf -> [unregistered]
		GetTexture -> [unregistered]
		Self -> [unregistered]
	}

	LeaseOutBaroniesWindow = {
		AccessSelf -> [unregistered]
		CanConfirm -> bool
		Close -> void
		GetSelectionHint -> CString
		GetTitles -> [unregistered]
		OnConfirm -> void
		Self -> [unregistered]
	}

	LeaseOutBaroniesWindowTitleItem = {
		GetTitle -> Title
		AccessSelf -> [unregistered]
		GetTitle -> [unregistered]
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	LegacyItem = {
		GetCharacter -> Character
		GetEndDate -> Date
		GetFoundedFaith -> Faith
		GetFoundedHouse -> DynastyHouse
		GetLifestyle -> Lifestyle
		GetStartDate -> Date
		AccessSelf -> [unregistered]
		DynastyPrestigeIncreased -> bool
		GetCharacter -> [unregistered]
		GetDread -> CFixedPoint
		GetDynastyPrestige -> int32
		GetEndDate -> [unregistered]
		GetFinisherPerks -> [unregistered]
		GetFinisherPerksList -> CString
		GetFoundedFaith -> [unregistered]
		GetFoundedHouse -> [unregistered]
		GetLifestyle -> [unregistered]
		GetNumberOfDefensiveGHWars -> int32
		GetNumberOfDefensiveWars -> int32
		GetNumberOfOffensiveGHWars -> int32
		GetNumberOfOffensiveWars -> int32
		GetPietyLevel -> int32
		GetPrestigeLevel -> int32
		GetReignLength -> CString
		GetScore -> int32
		GetStartDate -> [unregistered]
		GetTotalNumberOfWars -> int32
		GetTyranny -> CFixedPoint
		GetWarBreakdown -> CString
		HasFoughtInWar -> bool
		IsCurrent -> bool
		Self -> [unregistered]
		WasCulturalHead -> bool
	}

	LevyView = {
		GetLevyType -> MenAtArmsType
		AccessSelf -> [unregistered]
		Close -> void
		GetLevyType -> [unregistered]
		GetLivingCount -> CFixedPoint
		GetMaintenanceCost -> CFixedPoint
		GetMaxCount -> CFixedPoint
		GetRaisedCount -> CFixedPoint
		HasRaisedLevies -> bool
		Self -> [unregistered]
	}

	Lifestyle = {
		AccessSelf -> [unregistered]
		GetBackground -> [unregistered]
		GetBigIcon -> [unregistered]
		GetDescription -> CString
		GetHighlightDescription -> CString
		GetIcon -> [unregistered]
		GetKey -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		GetPerksInLifestyle -> int32
		GetXpPerLevel -> int32
		IsHighlightedForCharacter -> bool
		IsValid -> bool
		Self -> [unregistered]
	}

	Light = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	LoadIngameWindow = {
		GetSelectedSavegame -> SaveGameItem
		AccessSelf -> [unregistered]
		GetSaveGames -> [unregistered]
		HasSelectedSavegame -> bool
		OnBack -> void
		OnDelete -> void
		OnLoad -> void
		OnShowInvalidSavegames -> void
		Self -> [unregistered]
		ShouldShowInvalidSavegames -> bool
	}

	LobbyPlayer = {
		GetLobbyView -> LobbyView
		GetPlayable -> Playable
		AccessSelf -> [unregistered]
		CanRemovePlayer -> bool
		GetID -> int32
		GetLoadingString -> CString
		GetName -> CString
		GetTransferProgress -> float
		HasPlayable -> bool
		IsHost -> bool
		IsHotjoining -> bool
		IsLocalPlayer -> bool
		IsObserver -> bool
		IsReady -> bool
		RemovePlayer -> void
		Self -> [unregistered]
		ShowReadyStatus -> bool
	}

	LobbyView = {
		AccessLocalPlayer -> LobbyPlayer
		AccessSelectedPlayable -> Playable
		GetSelectedPlayable -> Playable
		GetServerInfo -> ServerInformation
		AccessSelectedPlayable -> [unregistered]
		AccessSelf -> [unregistered]
		CanControlSelected -> bool
		CanGoBack -> bool
		CanReady -> bool
		CanStart -> bool
		CanTryStartRulerDesigning -> bool
		ClearSelection -> void
		ControlSelected -> void
		CopyServerID -> void
		GetControlToolTip -> CString
		GetEnabledDLCs -> [unregistered]
		GetEnabledMods -> [unregistered]
		GetGoBackToolTip -> CString
		GetOpenMultiplayerToolTip -> CString
		GetOtherPlayersCount -> int32
		GetReadyToolTip -> CString
		GetSelectText -> CString
		GetTryStartRulerDesigningDesc -> CString
		GoBack -> void
		HasEnabledDLCs -> bool
		HasEnabledMods -> bool
		HasGameConfigurationWindow -> bool
		HasSelectedPlayable -> bool
		HasServerInfo -> bool
		IsAutoAccept -> bool
		IsInvite -> bool
		IsObserver -> bool
		IsPublicCrossplay -> bool
		IsPublicNoCrossplay -> bool
		IsReady -> bool
		OnNameEdit -> void
		OnPasswordEdit -> void
		OpenGameConfigurationWindow -> void
		OpenMultiplayer -> void
		Players -> [unregistered]
		Ready -> void
		Self -> [unregistered]
		SetInvite -> void
		SetName -> void
		SetPassword -> void
		SetPublicCrossplay -> void
		SetPublicNoCrossplay -> void
		SetShowPlayerList -> void
		ShouldShowEnabledDLCs -> bool
		ShouldShowEnabledMods -> bool
		ShowHosting -> bool
		ShowModifyServer -> bool
		ShowPlayerList -> bool
		Start -> void
		StartToolTip -> CString
		ToggleAutoAccept -> void
		ToggleObserve -> void
		ToggleShowEnabledDLCs -> void
		ToggleShowEnabledMods -> void
		ToggleVisibility -> void
		UnReady -> void
	}

	LocalPlayerCachedData = {
		AccessCourtEvents -> LocalPlayerCourtEvents
		AccessNewArtifacts -> LocalPlayerNewArtifacts
		AccessCourtEvents -> [unregistered]
		AccessNewArtifacts -> [unregistered]
		AccessSelf -> [unregistered]
		HasEverOpenedRoyalCourt -> bool
		Self -> [unregistered]
	}

	LocalPlayerCourtEvents = {
		AccessSelf -> [unregistered]
		GetNumberCourtEvents -> int32
		Self -> [unregistered]
	}

	LocalPlayerNewArtifacts = {
		AccessSelf -> [unregistered]
		ClearNewArtifacts -> void
		ClearNewArtifactsOfCategory -> void
		GetNumNewArtifacts -> int32
		GetNumNewArtifactsOfCategory -> int32
		GetNumNewArtifactsOfSlot -> int32
		HasNewArtifacts -> bool
		IsNewArtifact -> bool
		RemoveNewArtifact -> void
		Self -> [unregistered]
	}

	LodInfo = {
		AccessSelf -> [unregistered]
		Lod -> int32
		NumTriangles -> int32
		NumVertices -> int32
		Self -> [unregistered]
	}

	LogEntry = {
		AccessSelf -> [unregistered]
		GetColor -> CVector4f
		GetText -> CString
		GetTime -> CString
		Self -> [unregistered]
	}

	LogViewer = {
		GetLastLogEntry -> LogViewerEntry
		GetSelectedLogEntry -> LogViewerEntry
		AccessCategories -> [unregistered]
		AccessSelf -> [unregistered]
		AccessTypes -> [unregistered]
		DecreaseLogInfoExpandSize -> void
		FlushLog -> void
		GetFilteredNum -> int32
		GetLastLogEntry -> [unregistered]
		GetLogInfoExpandSize -> int32
		GetLogInfoExpandSizeVector -> CVector2f
		GetSelectedLogEntry -> [unregistered]
		GetTextFilter -> CUTF8String
		HasEntries -> bool
		IncreaseLogInfoExpandSize -> void
		IsAnyEntrySelected -> bool
		OpenLinkedLogViewer -> void
		OpenLinkedLogViewerFilteredByType -> void
		ResetFilters -> void
		ResetTextFilter -> void
		Self -> [unregistered]
		SetTextFilter -> void
		ToggleHidden -> void
	}

	LogViewerCategory = {
		AccessSelf -> [unregistered]
		GetFilteredCount -> int32
		GetIcon -> [unregistered]
		GetIsFiltered -> bool
		GetName -> CString
		Self -> [unregistered]
		SetIsFiltered -> void
	}

	LogViewerEntry = {
		AccessSelf -> [unregistered]
		ContainsScriptFile -> bool
		GetFileLineNo -> int32
		GetFilename -> [unregistered]
		GetFilepath -> CString
		GetIcon -> [unregistered]
		GetMessage -> CString
		GetTimestampLong -> CString
		GetTimestampShort -> CString
		IsSelected -> bool
		OpenInCodeEditor -> void
		OpenInEditor -> void
		OpenInExternalLogViewer -> void
		OpenInScriptEditor -> void
		Self -> [unregistered]
		SetSelected -> void
	}

	LogViewerType = {
		AccessSelf -> [unregistered]
		GetFilteredCount -> int32
		GetIcon -> [unregistered]
		GetId -> int32
		GetIsFiltered -> bool
		GetName -> CString
		Self -> [unregistered]
		SetIsFiltered -> void
	}

	MAAItem = {
		GetMenAtArmsType -> MenAtArmsType
		GetRegiment -> Regiment
		AccessSelf -> [unregistered]
		GetCurrentSize -> int32
		GetMAAString -> CString
		GetMAATooltip -> CString
		GetMaxSize -> int32
		GetMenAtArmsType -> [unregistered]
		GetName -> CString
		GetNextSize -> int32
		GetPreviousSize -> int32
		GetRegiment -> [unregistered]
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	MPConfig = {
		AccessSelf -> [unregistered]
		GetOfflinePlayerToolTip -> CString
		GetPrivateToolTip -> CString
		GetPublicToolTip -> CString
		IsCrossplayChecked -> bool
		IsHotjoinAutoAccept -> bool
		IsOffline -> bool
		IsPrivate -> bool
		IsPublic -> bool
		Self -> [unregistered]
		SetOffline -> void
		SetPrivate -> void
		SetPublic -> void
		ToggleCrossplay -> void
		ToggleHotjoinAutoAccept -> void
	}

	MapContentEditorMode = {
		AccessSelf -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
	}

	MapContentEditorOptions = {
		AccessSelf -> [unregistered]
		ApplyChanges -> void
		CanApplyChanges -> bool
		CanEraseAnything -> bool
		DiscardChanges -> void
		GetApplyButtonDescription -> CString
		GetEraserDescription -> CString
		GetMapContentSelectionModeDescription -> CString
		GetPaintModeDescription -> CString
		IsCurrentLayerPixelBased -> bool
		IsEraserMode -> bool
		IsEraserModeAllowed -> bool
		IsMapContentSelectionMode -> bool
		IsMapContentSelectionModeAllowed -> bool
		IsPaintMode -> bool
		IsPaintModeAllowed -> bool
		IsPaintingAllowed -> bool
		IsPixelBasedDataContainChanges -> bool
		Self -> [unregistered]
		SetEraserMode -> void
		SetMapContentSelectionMode -> void
		SetPaintMode -> void
	}

	MapContentEditorViewport = {
		GetTooltip -> GuiEditorTooltip
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	MapContentEntryDesc = {
		AccessSelf -> [unregistered]
		ContainsErrors -> bool
		GetErrorMessage -> CString
		GetName -> CString
		GetUniqueId -> int32
		IsDone -> bool
		IsSelected -> bool
		Select -> void
		Self -> [unregistered]
	}

	MapContentLayerDesc = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	MapContentPanel = {
		AccessSelf -> [unregistered]
		CanCreateNewEntry -> bool
		CanDeleteAnySelectedEntry -> bool
		CreateNewEntry -> void
		DeleteSelectedEntries -> void
		GetCreateNewEntryTooltip -> CString
		GetDeleteSelectedEntriesTooltip -> CString
		Self -> [unregistered]
	}

	MapContentPropertyGroup = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	MapContentSelector = {
		AccessSelf -> [unregistered]
		GetErrorsCount -> int32
		GetSelectedCount -> int32
		IsAllSelectedDone -> bool
		IsAllSelectedHasErrors -> bool
		IsShowProgress -> bool
		Self -> [unregistered]
		SetSelectedDone -> void
		SetShowProgress -> void
	}

	MapContentSelectorGui = {
		AccessSelf -> [unregistered]
		ClearEntriesFilter -> void
		GetCurrentLayerIndex -> CVector2i
		GetEntriesFilter -> CString
		GetEntriesWithErrorsCount -> int32
		GetSelectedEntriesCount -> int32
		IsAllSelectedDone -> bool
		IsAllSelectedError -> bool
		IsFilterErrors -> bool
		IsShowProgress -> bool
		Self -> [unregistered]
		SetCurrentLayerIndex -> void
		SetEntriesFilter -> void
		SetFilterErrors -> void
		SetSelectedDone -> void
		SetShowProgress -> void
	}

	MapEditor = {
		AccessSelf -> [unregistered]
		CanToggleMaterialVisibility -> bool
		Exit -> void
		ExportTool -> void
		GetReferenceOverlayVisibility -> bool
		GetTerrainColorMapVisibility -> bool
		ImportDetailMaks -> void
		ImportHeightmap -> void
		ImportTool -> void
		IsAutoSaving -> bool
		IsDynamicTerrainMaterialFeatureTogglable -> bool
		IsDynamicTerrainMaterialSupported -> bool
		IsEnabled -> bool
		IsRedoable -> bool
		IsSavable -> bool
		IsUndoable -> bool
		Redo -> void
		ReloadHeightmap -> void
		Save -> void
		SaveAll -> void
		SaveAs -> void
		Self -> [unregistered]
		SetDynamicTerrainMaterialSupported -> void
		SetReferenceOverlayVisibility -> void
		ToggleTerrainColorMapVisibility -> void
		Undo -> void
	}

	MapEditorGui = {
		AccessLogViewer -> LogViewer
		AccessLogViewer -> [unregistered]
		AccessSelf -> [unregistered]
		GetReferenceOverlayOpacity -> float
		Self -> [unregistered]
		SetReferenceOverlayOpacity -> void
		ShowBordersSettingsOptions -> void
		ShowReferenceOverlayOptions -> void
		ShowSettingsWindow -> void
		ToggleBordersSettingsOptions -> void
		ToggleReferenceOverlayOptions -> void
	}

	MapEditorLayerBorder = {
		AccessSelf -> [unregistered]
		GetLayerIndex -> int32
		IsForceShown -> bool
		Self -> [unregistered]
		SetForceShown -> void
	}

	MapEditorLayerBorderDockable = {
		AccessSelf -> [unregistered]
		GetLayerName -> CString
		Self -> [unregistered]
	}

	MapObjectMask = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetTextValidator -> [unregistered]
		GetThumbnail -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
		SetName -> void
		SetSelected -> void
	}

	MapObjectPainter = {
		AccessSelf -> [unregistered]
		GetTextValidator -> [unregistered]
		MaskList -> [unregistered]
		Self -> [unregistered]
	}

	MapObjectPainterMode = {
		AccessSelf -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
	}

	MapObjectPainterOptions = {
		AccessSelf -> [unregistered]
		GetPaintValue -> float
		IsCurrentBlendMode -> bool
		Self -> [unregistered]
		SetBlendMode -> void
		SetPaintValue -> void
		SetPaintValueStr -> void
	}

	MapObjectTool = {
		GetTooltip -> GuiEditorTooltip
		MoveTool -> MoveTool
		SelectTool -> SelectTool
		AccessSelf -> [unregistered]
		IsCreateTool -> bool
		IsMovingObjects -> bool
		IsRotatingObjects -> bool
		IsScalingObjects -> bool
		IsSelectionModeMapContent -> bool
		IsSelectionModeObjects -> bool
		RotateRandom -> void
		Self -> [unregistered]
		SetCreateTool -> void
		SetMovingObjects -> void
		SetRotatingObjects -> void
		SetScalingObjects -> void
		SetSelectionModeMapContent -> void
		SetSelectionModeObjects -> void
	}

	MarriageInfo = {
		GetBaseOffer -> MatchOffer
		AccessSelf -> [unregistered]
		GetAllianceItems -> [unregistered]
		GetBaseOffer -> [unregistered]
		GetMarriageIconFrame -> int32
		GetMarriageOrBetrothal -> CString
		GetMatrilinealDesc -> CString
		GetMatrilinealFrame -> int32
		HasAlliances -> bool
		IsMatrilineal -> bool
		Self -> [unregistered]
		ToggleMatrilineal -> void
	}

	MarriageInteractionNotificationWindow = {
		GetMarriageInfo -> MarriageInfo
		AccessSelf -> [unregistered]
		GetMarriageInfo -> [unregistered]
		Self -> [unregistered]
	}

	MarriageInteractionWindow = {
		GetBaseWindow -> MatchmakerInteractionWindow
		GetMarriage -> MarriageOffer
		GetMarriageInfo -> MarriageInfo
		AccessSelf -> [unregistered]
		CanClear -> bool
		CanClearMarryOff -> bool
		GetBaseWindow -> [unregistered]
		GetMarriage -> [unregistered]
		GetMarriageInfo -> [unregistered]
		GetPrompt -> CString
		Self -> [unregistered]
	}

	MarriageOffer = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	MaskEntry = {
		AccessSelf -> [unregistered]
		GetKey -> CString
		Self -> [unregistered]
	}

	MaskManagerEntry = {
		AccessSelf -> [unregistered]
		GetKey -> CString
		IsLocked -> bool
		IsSelected -> bool
		Self -> [unregistered]
		SetLocked -> void
		SetSelected -> void
	}

	MaskPainterManager = {
		AccessSelf -> [unregistered]
		CanModify -> bool
		ClearFilter -> void
		GetFilter -> CString
		GetSelectedMaskDesc -> CString
		IsAnyMaskSelected -> bool
		IsSelectedMaskTypeDeveloper -> bool
		IsSelectedMaskTypeLocal -> bool
		OnClear -> void
		OnClone -> void
		OnDelete -> void
		OnNew -> void
		OnRename -> void
		Self -> [unregistered]
		SetFilter -> void
		SetSelectedMaskDesc -> void
		ToggleMaskTypeDeveloper -> void
		ToggleMaskTypeLocal -> void
	}

	MaskPainterMapContentPanel = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	MaskPainterMode = {
		AccessSelf -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
	}

	MaskPainterTool = {
		AccessSelf -> [unregistered]
		IsEraserMode -> bool
		IsEyeDropperMode -> bool
		IsMapContentSelectionMode -> bool
		IsPaintMode -> bool
		Self -> [unregistered]
		SetEraserMode -> void
		SetEyeDropperMode -> void
		SetMapContentSelectionMode -> void
		SetPaintMode -> void
	}

	MaskPainterViewport = {
		GetTooltip -> GuiEditorTooltip
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	MatchOffer = {
		GetSecondaryActor -> Character
		GetSecondaryRecipient -> Character
		AccessSelf -> [unregistered]
		GetActorPrestige -> CFixedPoint
		GetActorPrestigeDesc -> CString
		GetChanceOfChildrenDesc -> CString
		GetChanceOfChildrenTooltip -> CString
		GetChildrensHouse -> CString
		GetInbreedingDesc -> CString
		GetInheritableTraitItems -> [unregistered]
		GetRecipientPrestige -> CFixedPoint
		GetRecipientPrestigeDesc -> CString
		GetSecondaryActor -> [unregistered]
		GetSecondaryRecipient -> [unregistered]
		HasInbreedingRisk -> bool
		HasInheritableTraits -> bool
		IsSameSex -> bool
		Self -> [unregistered]
	}

	MatchmakerInteractionWindow = {
		GetActorToMatch -> Character
		GetCharacterInteractionConfirmationWindow -> CharacterInteractionConfirmationWindow
		GetCharacterList -> CharacterSelectionList
		GetRecipientToMatch -> Character
		GetTopCharacterItem -> CharacterListItem
		AccessSelf -> [unregistered]
		CanChangeActorCharacter -> bool
		CanChangeRecipientCharacter -> bool
		CanRevertActorCharacter -> bool
		CanRevertRecipientCharacter -> bool
		CanSelectAnybody -> bool
		Close -> void
		GetActorToMatch -> [unregistered]
		GetCharacterInteractionConfirmationWindow -> [unregistered]
		GetCharacterList -> [unregistered]
		GetRecipientToMatch -> [unregistered]
		GetTopCharacterItem -> [unregistered]
		HasPickedCharacters -> bool
		HasTopCharacterItem -> bool
		IsBuildingList -> bool
		IsPickingSecondaryActor -> bool
		IsPickingSecondaryRecipient -> bool
		OnChangeOrRevertActorCharacter -> void
		OnChangeOrRevertRecipientCharacter -> void
		OnClear -> void
		OnClickActorToMatch -> void
		OnClickRecipientToMatch -> void
		Self -> [unregistered]
		Send -> void
	}

	MatchmakerTraitInfo = {
		GetCharacter -> Character
		GetTrait -> Trait
		AccessSelf -> [unregistered]
		CanUpgrade -> bool
		GetCharacter -> [unregistered]
		GetInheritanceInfo -> CString
		GetTrait -> [unregistered]
		IsGuaranteed -> bool
		Self -> [unregistered]
	}

	Material = {
		AccessSelf -> [unregistered]
		GetDiffuseTexture -> [unregistered]
		GetName -> CString
		GetThumbnail -> [unregistered]
		IsHighlighted -> bool
		IsLocked -> bool
		IsSelected -> bool
		Self -> [unregistered]
		ToggleHighlight -> void
		ToggleLocked -> void
		ToggleSelected -> void
	}

	MaterialBrowser = {
		GetCurrentMaterial -> Material
		AccessSelf -> [unregistered]
		Apply -> void
		Cancel -> void
		GetCurrentMaterialsList -> [unregistered]
		GetSearchFilter -> CUTF8String
		IsAnyMaterialSelected -> bool
		IsMaterialDisabled -> bool
		IsMaterialSelected -> bool
		Self -> [unregistered]
		SetSearchFilter -> void
		ToggleMaterialSelected -> void
	}

	MaterialEntry = {
		GetMaterial -> Material
		AccessSelf -> [unregistered]
		GetRawValue -> int32
		GetValue -> float
		IsVisible -> bool
		Self -> [unregistered]
	}

	MaterialMix = {
		AccessMaterials -> [unregistered]
		AccessSelf -> [unregistered]
		CanAddMaterialEntry -> bool
		GetMaterials -> [unregistered]
		GetMaterialsCount -> int32
		GetName -> CUTF8String
		IsPersistent -> bool
		Self -> [unregistered]
		SetValue -> void
		TogglePersistence -> void
	}

	MaterialMixBrush = {
		GetHoverSample -> MaterialsSample
		AccessSamples -> [unregistered]
		AccessSelf -> [unregistered]
		ChangeSampleEntryComposition -> void
		Delete -> void
		EndSampleCompositionEdit -> void
		IsSampling -> bool
		IsSelected -> bool
		RenameSample -> void
		Samples -> [unregistered]
		Self -> [unregistered]
		StartSampleCompositionEdit -> void
		ToggleSampleEntryLock -> void
		ToggleSamplePersistence -> void
		ToggleSelected -> void
	}

	MaterialMixEntry = {
		AccessMaterial -> Material
		GetMaterial -> Material
		AccessSelf -> [unregistered]
		GetPercentageValue -> float
		GetValue -> float
		GetValueAsText -> CString
		IsLocked -> bool
		Self -> [unregistered]
		SetPercentageValue -> void
		ToggleLocked -> void
	}

	MaterialPaintingMode = {
		AccessBlurThresholdCtx -> BlurThreshold
		AccessBlurThresholdCtx -> [unregistered]
		AccessSelf -> [unregistered]
		FocusCameraOnError -> void
		IsBlurSelected -> bool
		IsBrushSettingsLock -> bool
		IsEraserSelected -> bool
		IsEyeDropperSelected -> bool
		IsPainterSelected -> bool
		IsPaintingAllowed -> bool
		IsSearchingForError -> bool
		IsSelected -> bool
		IsTrimWhilePainting -> bool
		IsTrimmerSelected -> bool
		SelectBlur -> void
		SelectEraser -> void
		SelectEyeDropper -> void
		SelectPainter -> void
		SelectTrimmer -> void
		Self -> [unregistered]
		SetBrushSettingsLock -> void
		SetTrimWhilePainting -> void
	}

	Materials = {
		AccessSelf -> [unregistered]
		GetList -> [unregistered]
		List -> [unregistered]
		SelectFirst -> void
		SelectLast -> void
		SelectNext -> void
		SelectPrevious -> void
		Self -> [unregistered]
		ToggleHighlight -> void
		ToggleLocked -> void
	}

	MaterialsSample = {
		AccessSelf -> [unregistered]
		Entries -> [unregistered]
		GetX -> int32
		GetY -> int32
		Self -> [unregistered]
	}

	MenAtArmsType = {
		GetWinterHarshModifier -> RegimentWinterModifier
		GetWinterNormalModifier -> RegimentWinterModifier
		AccessSelf -> [unregistered]
		FightsInMainPhase -> bool
		GetBaseTypeName -> CString
		GetCostString -> CString
		GetCountersString -> CString
		GetCreationCostString -> CString
		GetEffectString -> CString
		GetFlavorString -> CString
		GetFullStrengthMaintenanceCostForPlayerString -> CString
		GetHorizontalImage -> [unregistered]
		GetIcon -> [unregistered]
		GetIconKey -> CString
		GetMaxFortLevel -> int32
		GetName -> CString
		GetNameNoTooltip -> CString
		GetReinforcementCostString -> CString
		GetStackSize -> int32
		GetStackSizeString -> CString
		GetStat -> CFixedPoint
		GetStatDesc -> CString
		GetTerrainModifiers -> [unregistered]
		GetVerticalImage -> [unregistered]
		HasWinterHarshModifier -> bool
		HasWinterNormalModifier -> bool
		Self -> [unregistered]
	}

	MenAtArmsTypeView = {
		GetSelectedMenAtArmsType -> MenAtArmsType
		AccessSelf -> [unregistered]
		CanCreate -> bool
		Close -> void
		Create -> void
		GetCostString -> CString
		GetCreateTooltip -> CString
		GetMenAtArmsTypes -> [unregistered]
		IsAnyMenAtArmsTypeSelected -> bool
		Self -> [unregistered]
	}

	MenAtArmsTypeViewTypeItem = {
		GetMenAtArmsType -> MenAtArmsType
		AccessSelf -> [unregistered]
		CanCreate -> bool
		GetCreateWarning -> CString
		GetMenAtArmsType -> [unregistered]
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	MenAtArmsView = {
		GetMaaGuiItem -> MAAItem
		AccessSelf -> [unregistered]
		BuyMaa -> void
		CanBuyMaa -> bool
		CanDestroyMaa -> bool
		CanSellMaa -> bool
		Close -> void
		DestroyMAARegiment -> void
		GetBuyCost -> CString
		GetFullStrengthText -> CString
		GetReduceSizeBlockers -> CString
		Self -> [unregistered]
		SellMaa -> void
	}

	MercenaryCompany = {
		GetComposition -> ArmyComposition
		GetCulture -> Culture
		GetHomeCounty -> Title
		GetHomeCountyTitle -> Title
		GetOwner -> Character
		GetTitle -> Title
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		CanBeRaised -> bool
		GetComposition -> [unregistered]
		GetCostDesc -> [unregistered]
		GetCulture -> [unregistered]
		GetCurrentSoldiers -> int32
		GetHireDurationDesc -> [unregistered]
		GetHiredTimeLeft -> [unregistered]
		GetHomeCounty -> [unregistered]
		GetHomeCountyTitle -> [unregistered]
		GetMaxSoldiers -> int32
		GetName -> CString
		GetNumberOfKnights -> int32
		GetOwner -> [unregistered]
		GetSoldiersRatioForProgressBar -> [unregistered]
		GetTitle -> [unregistered]
		IsHired -> bool
		IsHiredByLocalPlayer -> [unregistered]
		MakeScope -> Scope
		Self -> [unregistered]
		WillGoInBankruptcy -> bool
		WillGoInDebt -> bool
	}

	MessageFeedHandler = {
		AccessSelf -> [unregistered]
		AddItem -> void
		GetItems -> [unregistered]
		GetNumberOfQueuedMessages -> int32
		HasQueuedMessages -> bool
		MarkAllForDelete -> void
		NextMessage -> void
		Self -> [unregistered]
	}

	MessageType = {
		AccessSelf -> [unregistered]
		GetIcon -> [unregistered]
		IsBad -> bool
		IsGood -> bool
		IsNeutral -> bool
		Self -> [unregistered]
	}

	MetaInfoWidget = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	MilitaryItem = {
		GetComposition -> ArmyComposition
		AccessSelf -> [unregistered]
		CanCreateAnyMAAType -> bool
		GetComposition -> [unregistered]
		GetMAA -> [unregistered]
		GetMAAString -> CString
		GetMAATooltip -> CString
		GetMaACanBeCreatedTooltip -> CString
		IsOpen -> bool
		MaACanBeCreated -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	MilitaryView = {
		GetAllRaisedGoldMilitaryExpenses -> ValueBreakdown
		GetAllRaisedPietyMilitaryExpenses -> ValueBreakdown
		GetAllRaisedPrestigeMilitaryExpenses -> ValueBreakdown
		GetGoldMilitaryExpenses -> ValueBreakdown
		GetMilitaryItem -> MilitaryItem
		GetPietyMilitaryExpenses -> ValueBreakdown
		GetPrestigeMilitaryExpenses -> ValueBreakdown
		AccessSelf -> [unregistered]
		AreKnightsShown -> bool
		AreLeviesShown -> bool
		CanAddRallyPoint -> bool
		CanUseAnyHolyOrder -> bool
		Close -> void
		GetAddRallyPointTooltip -> CString
		GetAllHolyOrders -> [unregistered]
		GetAllMercenaries -> [unregistered]
		GetAllRaisedBalance -> CFixedPoint
		GetAllRaisedGoldMilitaryExpenses -> [unregistered]
		GetAllRaisedPietyMilitaryExpenses -> [unregistered]
		GetAllRaisedPrestigeMilitaryExpenses -> [unregistered]
		GetAllRaisedTime -> CString
		GetEventTroops -> [unregistered]
		GetGoldMilitaryExpenses -> [unregistered]
		GetHiredHolyOrders -> [unregistered]
		GetHiredMercenaries -> [unregistered]
		GetKnights -> [unregistered]
		GetLevyGoldExpense -> CFixedPoint
		GetMAACountAndCapString -> CString
		GetMAACountAndCapTooltip -> CString
		GetMaintenance -> CFixedPoint
		GetMilitaryReinforcementCostTooltip -> CString
		GetNumberOfRaisedLevies -> CFixedPoint
		GetPietyMilitaryExpenses -> [unregistered]
		GetPrestigeMilitaryExpenses -> [unregistered]
		GetRallyPointNumberInfo -> CString
		GetRallyPoints -> [unregistered]
		HasAllRaisedGoldMilitaryExpenses -> bool
		HasAllRaisedPietyMilitaryExpenses -> bool
		HasAllRaisedPrestigeMilitaryExpenses -> bool
		HasAnyRaisedMilitaryExpenses -> bool
		HasEmbarkedArmies -> bool
		IsMilitaryReinforcementsEnabled -> bool
		OnAddRallyPoint -> void
		OnMilitaryReinforcementClick -> void
		Self -> [unregistered]
		SetKnightDefault -> void
		SetKnightDisallowed -> void
		SetKnightForced -> void
		ShowKnights -> void
		ShowLevies -> void
	}

	MilitaryViewEventTroop = {
		GetAssociatedWar -> War
		GetComposition -> ArmyComposition
		AccessSelf -> [unregistered]
		CanBeRaised -> bool
		GetAssociatedWar -> [unregistered]
		GetComposition -> [unregistered]
		GetName -> CString
		GetNumberOfRaisableRegiments -> int32
		GetNumberOfRaisableSoldiers -> int32
		GetRaiseProvinceName -> CString
		GetRegiments -> [unregistered]
		IsInheritable -> bool
		Self -> [unregistered]
	}

	MixBrushMode = {
		AccessSelf -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
	}

	ModifierItem = {
		AccessSelf -> [unregistered]
		GetIcon -> [unregistered]
		GetName -> CString
		GetTooltip -> CString
		Self -> [unregistered]
	}

	ModifyVassalContractInteractionWindow = {
		GetCharacterInteractionConfirmationWindow -> CharacterInteractionConfirmationWindow
		GetContractPreview -> VassalContract
		GetContractPreviewLeviesBreakdown -> ValueBreakdown
		GetContractPreviewOpinionBreakdown -> ValueBreakdown
		GetContractPreviewTaxBreakdown -> ValueBreakdown
		AccessObligationLevelCheckboxes -> [unregistered]
		AccessObligationLevelLineTrees -> [unregistered]
		AccessObligationLevelRadioButtons -> [unregistered]
		AccessSelf -> [unregistered]
		Close -> void
		GetCharacterInteractionConfirmationWindow -> [unregistered]
		GetContractPreview -> [unregistered]
		GetContractPreviewCachedLevies -> int32
		GetContractPreviewCachedLeviesFormatted -> CString
		GetContractPreviewCachedTax -> CFixedPoint
		IsPreviewSameAsCurrent -> bool
		ResetToCurrent -> void
		Self -> [unregistered]
		Send -> void
	}

	ModifyVassalContractInteractionWindowObligationLevelOption = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetTooltip -> CString
		IsCurrent -> bool
		IsEnabled -> bool
		IsSelected -> bool
		IsVisible -> bool
		Select -> void
		Self -> [unregistered]
	}

	MoveTool = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	MpBookmarkItem = {
		GetDate -> Date
		AccessSelf -> [unregistered]
		GetDate -> [unregistered]
		IsSelected -> bool
		Select -> void
		Self -> [unregistered]
	}

	MultiplayerSetupWindow = {
		AccessMPConfig -> MPConfig
		GetMPConfig -> MPConfig
		AccessSelf -> [unregistered]
		CanHost -> bool
		Cancel -> void
		GetDefaultServerName -> CUTF8String
		GetDefaultServerPassword -> CUTF8String
		Host -> void
		HostToolTip -> CString
		Self -> [unregistered]
		ShouldShowMPConfig -> bool
	}

	MyRealmWindow = {
		GetCharacter -> Character
		GetDomainIncome -> ValueBreakdown
		GetDomainLevy -> ValueBreakdown
		GetGovernmentTypeFilter -> GovernmentType
		GetIncomeTax -> ValueBreakdown
		GetLeviesToLiegeBreakdown -> ValueBreakdown
		GetLevyTax -> ValueBreakdown
		GetPowerfulVassals -> CharacterSelectionList
		GetRegularVassals -> CharacterSelectionList
		GetTaxToLiegeBreakdown -> ValueBreakdown
		GetVassalInfo -> MyRealmWindowVassalItem
		GetVassalsIncome -> ValueBreakdown
		GetVassalsLevy -> ValueBreakdown
		AccessSelf -> [unregistered]
		CanDesignateHeir -> bool
		CanVote -> bool
		Close -> void
		GetCachedLeviesToLiege -> int32
		GetCachedTaxToLiege -> CFixedPoint
		GetCharacter -> [unregistered]
		GetDesignateTooltip -> CString
		GetDomainIncome -> [unregistered]
		GetDomainItems -> [unregistered]
		GetDomainLevy -> [unregistered]
		GetGovernmentTypeFilter -> [unregistered]
		GetGovernmentTypeHeaders -> [unregistered]
		GetIncomeTax -> [unregistered]
		GetLevyTax -> [unregistered]
		GetLineOfSuccession -> [unregistered]
		GetMyPartitionShare -> [unregistered]
		GetNumTitlesLost -> int32
		GetPowerfulVassals -> [unregistered]
		GetRealmLaws -> [unregistered]
		GetRegularVassals -> [unregistered]
		GetSuccessionExceptions -> [unregistered]
		GetTitleSuccession -> [unregistered]
		GetTitlesCanVote -> [unregistered]
		GetVassalCount -> int32
		GetVassalInfo -> [unregistered]
		GetVassalOpinion -> int32
		GetVassalOpinionBreakdown -> CString
		GetVassals -> [unregistered]
		GetVassalsIncome -> [unregistered]
		GetVassalsLevy -> [unregistered]
		HasDynasticHeir -> bool
		HasGovernmentTypeFilter -> bool
		HasHeir -> bool
		HasPartition -> bool
		HasSingleHeir -> bool
		IsLosingTitles -> bool
		IsOverDomainLimit -> bool
		IsShowingDomain -> bool
		IsShowingSuccession -> bool
		IsShowingVassals -> bool
		ResetGovernmentTypeFilter -> void
		Self -> [unregistered]
		SetGovernmentTypeFilter -> void
		ShowDomain -> void
		ShowSuccession -> void
		ShowVassals -> void
	}

	MyRealmWindowVassalItem = {
		GetCharacter -> Character
		GetContract -> VassalContract
		GetLeviesBreakdown -> ValueBreakdown
		GetTaxBreakdown -> ValueBreakdown
		AccessSelf -> [unregistered]
		GetCachedLevies -> int32
		GetCachedLeviesFormatted -> CString
		GetCachedTax -> CFixedPoint
		GetCharacter -> [unregistered]
		GetContract -> [unregistered]
		GetLeviesBreakdown -> [unregistered]
		GetLevyTooltip -> CString
		GetRelativeSizeForLevies -> [unregistered]
		GetRelativeSizeForTax -> [unregistered]
		GetTaxBreakdown -> [unregistered]
		GetTaxTooltip -> CString
		Self -> [unregistered]
	}

	Nickname = {
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetLocalizationNoTooltip -> CString
		Self -> [unregistered]
	}

	Node = {
		AccessSelf -> [unregistered]
		Description -> CString
		ErrorColor -> CVector4f
		HasDescription -> bool
		Name -> CString
		Self -> [unregistered]
		Texture -> [unregistered]
		Tooltip -> CString
	}

	NodeError = {
		AccessSelf -> [unregistered]
		GoTo -> void
		Message -> CString
		Node -> int32
		Self -> [unregistered]
	}

	NodeLine = {
		AccessSelf -> [unregistered]
		Color -> CVector4f
		From -> CVector2f
		GetOwnerNodeId -> int32
		Highlighted -> bool
		Position -> CVector2f
		Self -> [unregistered]
		Size -> CVector2f
		To -> CVector2f
		Width -> float
	}

	NodePin = {
		AccessSelf -> [unregistered]
		Color -> CVector4f
		Highlight -> bool
		IsInlinedNodeConnected -> bool
		Name -> CString
		Self -> [unregistered]
		TypeColor -> CVector4f
		TypeText -> CString
	}

	NodeWindow = {
		AccessSelf -> [unregistered]
		Close -> void
		DescriptionDialog -> void
		NameDialog -> void
		Self -> [unregistered]
		SetDescription -> void
	}

	NonRegisteredDockable = {
		AccessSelf -> [unregistered]
		GetID -> CString
		Self -> [unregistered]
	}

	NotificationDummyContext = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	Nudger = {
		AccessSelf -> [unregistered]
		CreateNewBlankMapObjectType -> void
		DeleteSelected -> void
		Deselect -> void
		FocusCameraOnSelection -> void
		IsAnyMapObjectExpanded -> bool
		IsAnyMapObjectHidden -> bool
		IsAnyMapObjectLocked -> bool
		IsAnyObjectEntrySelected -> bool
		IsAnyObjectSelected -> bool
		IsAnySelectedMapObjectDynamicType -> bool
		IsMultiSpawnEnabled -> bool
		OnMapObjectSelected -> void
		SelectAll -> void
		Self -> [unregistered]
		SetAllMapObjectsExpanded -> void
		SetAllMapObjectsHidden -> void
		SetAllMapObjectsLocked -> void
		SetMapObjectHidden -> void
		SetMapObjectLocked -> void
		SetMapObjectLockedExclusive -> void
		SetMultiSpawnEnabled -> void
		ToggleInstancesClampToWaterLevel -> void
		ToggleInstancesRenderUnderwater -> void
	}

	NudgerLayerEntryMapObjectDesc = {
		AccessSelf -> [unregistered]
		GetName -> CString
		IsAutoNudgingError -> bool
		IsLocked -> bool
		IsSelected -> bool
		Select -> void
		Self -> [unregistered]
		SetLocked -> void
	}

	NudgerMapContentGui = {
		AccessSelf -> [unregistered]
		AutoNudgeSelection -> void
		GetAutoNudgingReadyProgress -> float
		IsAutoNudgePreviewEnabled -> bool
		IsAutoNudgingReady -> bool
		IsAutoNudgingSettingsOpen -> bool
		IsAutoNudgingSupported -> bool
		Self -> [unregistered]
		SetAutoNudgePreviewEnabled -> void
		SetAutoNudgingSettingsOpen -> void
	}

	NudgerMapObjectPropertyListDockable = {
		AccessSelf -> [unregistered]
		Delete -> void
		HasEntry -> bool
		Self -> [unregistered]
	}

	NudgerMode = {
		AccessSelf -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
	}

	ObjectBrowser = {
		AccessSelf -> [unregistered]
		CopyAsCSV -> void
		ForceUpdate -> void
		GetFilterString -> CUTF8String
		GetNumObjectsFiltered -> int32
		GetNumObjectsTotal -> int32
		GetProviders -> [unregistered]
		GetSelectedProvider -> CVector2i
		GetSelectedView -> CVector2i
		GetViews -> [unregistered]
		HasConfig -> bool
		IsObjectSelected -> bool
		IsOutputFlattened -> bool
		IsWaitingForProvider -> bool
		RequestUpdate -> void
		SaveDefaults -> void
		SelectProvider -> void
		SelectView -> void
		Self -> [unregistered]
		SetFilterString -> void
		SetObjectSelected -> void
		ToggleObjectSelected -> void
		ToggleOutputFlattened -> void
	}

	ObjectBrowserView = {
		AccessSelf -> [unregistered]
		Name -> CUTF8String
		Self -> [unregistered]
	}

	ObjectInspector = {
		AccessPluginEntries -> [unregistered]
		AccessSelf -> [unregistered]
		GetObjectName -> CUTF8String
		GetTypeName -> CUTF8String
		Self -> [unregistered]
	}

	ObjectInspectorDockable = {
		AccessSelf -> [unregistered]
		Detach -> void
		IsAttached -> bool
		Self -> [unregistered]
	}

	ObjectInspectorPlugin = {
		AccessSelf -> [unregistered]
		GetErrorMessage -> CUTF8String
		GetTitle -> CUTF8String
		HasError -> bool
		Self -> [unregistered]
	}

	ObjectProvider = {
		AccessSelf -> [unregistered]
		Name -> CUTF8String
		RequestUpdate -> void
		Self -> [unregistered]
	}

	ObligationContainerData = {
		AccessSelf -> [unregistered]
		GetIcon -> CString
		GetName -> CString
		Self -> [unregistered]
		ShouldShow -> bool
	}

	ObligationLevel = {
		AccessSelf -> [unregistered]
		GetEffectText -> CString
		GetName -> CString
		GetShortName -> CString
		Self -> [unregistered]
	}

	ObligationLevelCheckbox = {
		AccessLevel -> ModifyVassalContractInteractionWindowObligationLevelOption
		GetContainerData -> ObligationContainerData
		GetLevel -> ModifyVassalContractInteractionWindowObligationLevelOption
		AccessLevel -> [unregistered]
		AccessSelf -> [unregistered]
		GetContainerData -> [unregistered]
		GetLevel -> [unregistered]
		GetSelectedLevelIndex -> int32
		GetUnselectedLevelIndex -> int32
		Self -> [unregistered]
		ToggleSelection -> void
	}

	ObligationLevelLineConnection = {
		GetChild -> ObligationLevelLineItem
		GetParent -> ObligationLevelLineItem
		AccessSelf -> [unregistered]
		GetChild -> [unregistered]
		GetLineFrom -> CVector2f
		GetLineTo -> CVector2f
		GetParent -> [unregistered]
		Self -> [unregistered]
	}

	ObligationLevelLineItem = {
		AccessItem -> ModifyVassalContractInteractionWindowObligationLevelOption
		GetItem -> ModifyVassalContractInteractionWindowObligationLevelOption
		AccessItem -> [unregistered]
		AccessSelf -> [unregistered]
		GetItem -> [unregistered]
		Self -> [unregistered]
		SetupBottomWidget -> bool
		SetupTopWidget -> bool
	}

	ObligationLevelLineTree = {
		GetContainerData -> ObligationContainerData
		AccessItems -> [unregistered]
		AccessSelf -> [unregistered]
		GetConnections -> [unregistered]
		GetContainerData -> [unregistered]
		GetItemPosition -> CVector2f
		GetItems -> [unregistered]
		Self -> [unregistered]
		SetupLinesContainer -> bool
	}

	ObligationLevelRadioButtons = {
		GetContainerData -> ObligationContainerData
		Access -> [unregistered]
		AccessSelf -> [unregistered]
		GetContainerData -> [unregistered]
		Self -> [unregistered]
	}

	OosData = {
		GetPlayable -> Playable
		AccessSelf -> [unregistered]
		GetFolder -> CString
		GetPlayerName -> CString
		GetType -> CString
		IsLocalPlayer -> bool
		IsObserver -> bool
		Self -> [unregistered]
	}

	OosWindow = {
		AccessSelf -> [unregistered]
		Close -> void
		Continue -> void
		GetOosData -> [unregistered]
		GoToMenu -> void
		IsLocalOos -> bool
		Self -> [unregistered]
	}

	OptionEffectItem = {
		GetScheme -> SchemeType
		GetTrait -> Trait
		AccessSelf -> [unregistered]
		AffectedByTrait -> bool
		GetScheme -> [unregistered]
		GetTrait -> [unregistered]
		IsCritical -> bool
		IsDeath -> bool
		IsGain -> bool
		IsLoss -> bool
		IsScheme -> bool
		IsStress -> bool
		IsTrait -> bool
		Self -> [unregistered]
	}

	OptionItem = {
		AccessSelf -> [unregistered]
		CanBeChanged -> bool
		GetName -> CString
		GetTooltip -> CString
		HasOption -> bool
		IsExclusive -> bool
		IsShown -> bool
		IsValid -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	OrderFaithOption = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	OutgoingFriendRequest = {
		AccessSelf -> [unregistered]
		GetName -> CUTF8String
		Remove -> void
		Self -> [unregistered]
	}

	Outliner = {
		AccessSelf -> [unregistered]
		Close -> void
		GetCategoryItemsCount -> int32
		GetHoldingItems -> [unregistered]
		GetPinnedCharacters -> [unregistered]
		GetPlayers -> [unregistered]
		GetUnitItems -> [unregistered]
		IsCategoryShown -> bool
		Self -> [unregistered]
		ToggleCategory -> void
	}

	OutlinerHoldingItem = {
		GetHolding -> Holding
		GetTitle -> Title
		AccessSelf -> [unregistered]
		GetHolding -> [unregistered]
		GetTitle -> [unregistered]
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	OutlinerPlayer = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		GetCharacter -> [unregistered]
		GetDescription -> CString
		GetJoinProgress -> float
		GetName -> CString
		IsJoining -> bool
		Self -> [unregistered]
	}

	OutputEntry = {
		AccessSelf -> [unregistered]
		GetInputTextures -> [unregistered]
		GetPath -> CString
		IsSelected -> bool
		IsValid -> bool
		Self -> [unregistered]
		ToggleIsSelected -> void
	}

	POPSCreateAccount = {
		AccessSelf -> [unregistered]
		CanCreateAccount -> bool
		CreateAccount -> bool
		GetAddressLineOne -> CUTF8String
		GetAddressLineTwo -> CUTF8String
		GetCity -> CUTF8String
		GetCountries -> [unregistered]
		GetCreatedAccount -> bool
		GetDays -> [unregistered]
		GetEmail -> CUTF8String
		GetErrorMessage -> CUTF8String
		GetFirstName -> CUTF8String
		GetLanguages -> [unregistered]
		GetLastName -> CUTF8String
		GetMonths -> [unregistered]
		GetOptedIntoMarketingChecked -> bool
		GetPassword -> CUTF8String
		GetPhone -> CUTF8String
		GetSelectedCountryIndex -> CVector2i
		GetSelectedDayIndex -> CVector2i
		GetSelectedLanguageIndex -> CVector2i
		GetSelectedMonthIndex -> CVector2i
		GetSelectedYearIndex -> CVector2i
		GetState -> CUTF8String
		GetYears -> [unregistered]
		GetZipCode -> CUTF8String
		Hide -> void
		IsCreatingAccount -> bool
		OnCountryChanged -> void
		OnDayChanged -> void
		OnLanguageChanged -> void
		OnMonthChanged -> void
		OnOptedIntoMarketingToggled -> void
		OnYearChanged -> void
		Self -> [unregistered]
		SetAddressLineOne -> void
		SetAddressLineTwo -> void
		SetCity -> void
		SetEmail -> void
		SetFirstName -> void
		SetLastName -> void
		SetPassword -> void
		SetPhone -> void
		SetState -> void
		SetZipCode -> void
		Show -> void
		ShowPP -> void
		ShowToU -> void
	}

	POPSLoginView = {
		AccessSelf -> [unregistered]
		GetEmail -> CUTF8String
		GetErrorMessage -> CUTF8String
		GetLoginString -> CUTF8String
		GetPassword -> CUTF8String
		Hide -> void
		IsChangingUserName -> bool
		IsConnectingAccount -> bool
		IsEmailSent -> bool
		IsEmptyUserNamePrompt -> bool
		IsLoggedIn -> bool
		IsLogin -> bool
		IsRestoringPassword -> bool
		IsSuccessfulSetName -> bool
		IsValidLoginInfo -> bool
		Login -> void
		Logout -> void
		OnUserNameChange -> void
		ResetPassword -> void
		Self -> [unregistered]
		SetEmail -> void
		SetPassword -> void
		SetState -> void
		SetUserName -> void
		Show -> void
		ToggleConnected -> void
	}

	POPSStatusWidget = {
		AccessSelf -> [unregistered]
		ConnectAccount -> void
		DisconnectAccount -> void
		Hide -> void
		IsAccountConnected -> bool
		IsBusy -> bool
		Logout -> void
		Self -> [unregistered]
		Show -> void
		SupportsConnectAccount -> bool
		ToggleCreateAccountWindow -> void
		ToggleCreateProfileWindow -> void
		ToggleLoginWindow -> void
	}

	ParametricSelect = {
		AccessSelf -> [unregistered]
		IsHeightDeltaEnabled -> bool
		IsHeightRangeEnabled -> bool
		Select -> void
		Self -> [unregistered]
		SetHeightDeltaMax -> void
		SetHeightDeltaMin -> void
		SetHeightRangeMax -> void
		SetHeightRangeMin -> void
		Toggle -> void
	}

	ParticipantInfo = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		GetCharacter -> [unregistered]
		GetContribution -> int32
		Self -> [unregistered]
	}

	ParticleUserData = {
		AccessSelf -> [unregistered]
		Id -> CString
		IsSelected -> bool
		Label -> CString
		Remove -> void
		Self -> [unregistered]
		ToggleSelected -> void
		TypeName -> [unregistered]
		TypeSize -> int32
	}

	PatternItem = {
		GetCulture -> Culture
		GetDynasty -> Dynasty
		GetFaith -> Faith
		GetHeritage -> CulturePillar
		GetHouse -> DynastyHouse
		GetReligion -> Religion
		GetTrait -> Trait
		AccessSelf -> [unregistered]
		GetCulture -> [unregistered]
		GetDynasty -> [unregistered]
		GetFaith -> [unregistered]
		GetHeritage -> [unregistered]
		GetHouse -> [unregistered]
		GetName -> CString
		GetReligion -> [unregistered]
		GetTrait -> [unregistered]
		GetType -> CString
		IsCulture -> bool
		IsDynasty -> bool
		IsFaith -> bool
		IsHeritage -> bool
		IsHouse -> bool
		IsName -> bool
		IsReligion -> bool
		IsSelected -> bool
		IsTrait -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	PauseMenu = {
		AccessSelf -> [unregistered]
		CanCloseLobby -> bool
		CanLoadIngame -> bool
		CloseLobby -> void
		ExitGame -> void
		GetCloseLobbyToolTip -> CString
		GetExitName -> CString
		HasSavegames -> bool
		IsLobbyOpen -> bool
		LoadIngame -> void
		LoadIngameTooltip -> CString
		OpenLobby -> void
		OpenSettings -> void
		Resume -> void
		Save -> void
		Self -> [unregistered]
		SwitchCharacter -> void
	}

	PdxCoreSetting = {
		AccessSelf -> [unregistered]
		RequireRestart -> bool
		Self -> [unregistered]
	}

	PdxGuiFoldOut = {
		AccessSelf -> [unregistered]
		Fold -> void
		IsFolded -> bool
		IsUnfolded -> bool
		Self -> [unregistered]
		SetFoldState -> void
		Toggle -> void
		Unfold -> void
	}

	PdxGuiGfxVideoControl = {
		AccessSelf -> [unregistered]
		IsLooping -> bool
		IsPlaying -> bool
		IsVisible -> bool
		Restart -> void
		Self -> [unregistered]
		SetLooping -> void
		SetVisible -> void
		Start -> void
		Stop -> void
	}

	PdxGuiTableRow = {
		AccessSelf -> [unregistered]
		GetIndex -> int32
		Self -> [unregistered]
	}

	PdxGuiTreeTable = {
		AccessSelf -> [unregistered]
		CanExpand -> bool
		Expand -> void
		GetDepth -> int32
		GetIndent -> CVector2f
		GetNumChildren -> int32
		IsExpanded -> bool
		Self -> [unregistered]
		ToggleExpand -> void
		Unexpand -> void
	}

	PdxGuiWidget = {
		AccessChild -> PdxGuiWidget
		AccessParent -> PdxGuiWidget
		FindChild -> PdxGuiWidget
		GfxVideoControl -> PdxGuiGfxVideoControl
		AccessParent -> [unregistered]
		AccessSelf -> [unregistered]
		DisableValueUpdate -> void
		EnableValueUpdate -> void
		FindChild -> [unregistered]
		GetRawShortcut -> CUTF8String
		GetScaledMousePosition -> CVector2f
		GetShortcut -> CUTF8String
		GetTooltipLockProgress -> float
		GetUnscaledMousePositionInteger -> CVector2i
		Hide -> void
		InterruptAnimation -> void
		InterruptThenTriggerAnimation -> bool
		IsNestedTooltip -> bool
		IsTooltipLocked -> bool
		Self -> [unregistered]
		Show -> void
		StackBottom -> void
		StackTop -> void
		TriggerAnimation -> bool
	}

	PdxSetting = {
		GetSettingPromoted -> PdxCoreSetting
		AccessSelf -> [unregistered]
		AccessSetting -> [unregistered]
		GetSetting -> [unregistered]
		GetTitle -> CUTF8String
		GetTooltip -> CUTF8String
		HasChanged -> bool
		Self -> [unregistered]
	}

	PdxSettingsWindow = {
		AccessSelf -> [unregistered]
		HasChanged -> bool
		OnCancel -> void
		OnRestore -> void
		OnSave -> void
		RequiresRestart -> bool
		Self -> [unregistered]
	}

	PdxSettingsWindowCategory = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	PdxSettingsWindowScopedCategory = {
		GetCategory -> PdxSettingsWindowCategory
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	PdxValueSetting = {
		AccessSelf -> [unregistered]
		GetFormatedValue -> CString
		GetValue -> float
		Self -> [unregistered]
	}

	Perk = {
		GetLifestyle -> Lifestyle
		AccessSelf -> [unregistered]
		GetBlockers -> CString
		GetEffectDescription -> CString
		GetIcon -> [unregistered]
		GetLifestyle -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		IsFinisher -> bool
		Self -> [unregistered]
	}

	PerkGuiTree = {
		AccessSelf -> [unregistered]
		GetBackground -> [unregistered]
		GetConnections -> [unregistered]
		GetItemPosition -> CVector2f
		GetItems -> [unregistered]
		GetName -> CString
		HasUnlockedPerk -> bool
		IsCompleted -> bool
		Self -> [unregistered]
		SetupLinesContainer -> bool
	}

	PerkLineConnection = {
		GetChild -> PerkLineItem
		GetParent -> PerkLineItem
		AccessSelf -> [unregistered]
		GetChild -> [unregistered]
		GetLineFrom -> CVector2f
		GetLineTo -> CVector2f
		GetParent -> [unregistered]
		Self -> [unregistered]
	}

	PerkLineItem = {
		GetItem -> Perk
		AccessSelf -> [unregistered]
		GetItem -> [unregistered]
		Self -> [unregistered]
		SetupBottomWidget -> bool
		SetupTopWidget -> bool
	}

	PlaceRallyPoint = {
		AccessSelf -> [unregistered]
		Close -> void
		IsMovingRallyPoint -> bool
		IsPlacingRallyPoint -> bool
		Self -> [unregistered]
	}

	Playable = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	PlayerJoinRequest = {
		Accept -> void
		AccessSelf -> [unregistered]
		GetPlayerName -> CString
		Reject -> void
		Self -> [unregistered]
	}

	PlayerMessageItem = {
		GetDate -> Date
		GetGotoProvince -> Province
		GetLeftArtifact -> Artifact
		GetLeftCharacter -> Character
		GetLeftTitle -> Title
		GetRightArtifact -> Artifact
		GetRightCharacter -> Character
		GetRightTitle -> Title
		GetType -> MessageType
		AccessSelf -> [unregistered]
		GetDate -> [unregistered]
		GetDescription -> CString
		GetGotoProvince -> [unregistered]
		GetLeftArtifact -> [unregistered]
		GetLeftCharacter -> [unregistered]
		GetLeftTitle -> [unregistered]
		GetRightArtifact -> [unregistered]
		GetRightCharacter -> [unregistered]
		GetRightTitle -> [unregistered]
		GetTitle -> CString
		GetTooltip -> CString
		GetType -> [unregistered]
		HasGoto -> bool
		HasLeftIcon -> bool
		HasRightIcon -> bool
		NoIcons -> bool
		OnGoto -> void
		OneIcon -> bool
		Self -> [unregistered]
		TwoIcons -> bool
	}

	PlayerValueItem = {
		GetBalanceGained -> ValueBreakdown
		AccessSelf -> [unregistered]
		GetBalance -> CFixedPoint
		GetBalanceGained -> [unregistered]
		GetBalanceTotal -> CString
		GetConcept -> CString
		GetCurrentLevel -> int32
		GetCurrentLevelName -> CString
		GetLevelConcept -> CString
		GetNextLevelName -> CString
		GetProgressTooltip -> CString
		GetProgressTowardNextLevel -> float
		GetProgressTowardNextLevelLabel -> CString
		GetValue -> int32
		HasNextLevel -> bool
		Self -> [unregistered]
	}

	PlotLine = {
		AccessSelf -> [unregistered]
		GetInterpolatedIndexNearMouse -> float
		GetInterpolatedValueNearMouse -> CVector2f
		GetPlotRect -> CPdxFloatRect
		GetSnappedIndexNearMouse -> int32
		GetSnappedValueNearMouse -> CVector2f
		HasPositionNearMouse -> bool
		Self -> [unregistered]
	}

	Portrait3dView = {
		AccessSelf -> [unregistered]
		GetPortraitContext -> [unregistered]
		GetPortraitEntity -> [unregistered]
		SaveScreenshot -> void
		Self -> [unregistered]
	}

	PortraitCustomizationWindow = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		ApplyAndClose -> void
		Close -> void
		GetAccessoryItems -> [unregistered]
		GetCharacter -> [unregistered]
		GetHairColorItems -> [unregistered]
		GetPortraitTexture -> [unregistered]
		RestorePreviousPortraitModifierIndex -> void
		Self -> [unregistered]
	}

	PortraitDataContext = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	PortraitEditorAnimationItem = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	PortraitEditorWindow = {
		GetChildGenerator -> ChildGenerator
		GetPortraitDataContext -> PortraitDataContext
		GetSelectedEthnicityItem -> EthnicityItem
		GetSelectedGeneItem -> GeneItem
		AccessSelf -> [unregistered]
		GetAge -> int32
		GetAgePercent -> float
		GetAnimationItems -> [unregistered]
		GetCameraName -> CString
		GetCurrentGeneAccessoryString -> CString
		GetDNA -> CString
		GetEnvironmentName -> CString
		GetPortraitTexture -> [unregistered]
		GetSelectedAnimationIndex -> CVector2i
		GetSelectedGeneTemplateColorX -> float
		GetSelectedGeneTemplateColorY -> float
		GetSelectedGeneTemplateStrength -> float
		GetSliderMaxValue -> float
		GetSliderMinValue -> float
		HasAnySliders -> bool
		HasPoses -> bool
		HasSubGenes -> bool
		IsCurrentContentTab -> bool
		IsSelectedAccessoryGene -> bool
		IsSelectedColorGene -> bool
		IsSelectedMorphGene -> bool
		IsSliderMode -> bool
		IsSliderPortraitType -> bool
		OnAgeChanged -> void
		OnChangeEthnicityLeft -> void
		OnChangeEthnicityRight -> void
		OnChangeGeneLeft -> void
		OnChangeGeneRight -> void
		OnChangePoseItemLeft -> void
		OnChangePoseItemRight -> void
		OnChangeSubGeneItemLeft -> void
		OnChangeSubGeneItemRight -> void
		OnCopyDNA -> void
		OnCopyPersistentPortraitInfo -> void
		OnGenerateFromEthnicity -> void
		OnGenerateFromEthnicityExcept -> void
		OnNextCamera -> void
		OnNextEnvironment -> void
		OnPasteDNA -> void
		OnPastePersistentPortraitInfo -> void
		OnPreviousCamera -> void
		OnPreviousEnvironment -> void
		OnReloadColorPalettes -> void
		OnReloadDecals -> void
		OnResetDNA -> void
		OnRunTextureOptimization -> void
		Open3dView -> void
		ResetSliders -> void
		Self -> [unregistered]
		SetContentTab -> void
		SetSelectedAnimation -> void
		SetSliderMode -> void
		SetSliderPortraitType -> void
	}

	PortraitTooltip = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	PotentialAgentWindow = {
		GetListItems -> CharacterSelectionList
		AccessSelf -> [unregistered]
		Close -> void
		GetListItems -> [unregistered]
		HasMembers -> bool
		Self -> [unregistered]
	}

	PotentialCouncillorWindow = {
		GetCharacterList -> CharacterSelectionList
		GetCouncilPositionType -> CouncilPositionType
		GetCouncillor -> Character
		AccessSelf -> [unregistered]
		CanFireCouncillor -> bool
		CanReassignCouncillor -> bool
		Close -> void
		FireCouncillor -> void
		GetCharacterList -> [unregistered]
		GetCouncillorSkillItems -> [unregistered]
		GetFireCouncillorTooltip -> CString
		GetPotentialCouncillors -> [unregistered]
		GetSortOptions -> [unregistered]
		HasCouncillor -> bool
		HasMembers -> bool
		HasPendingInteraction -> bool
		IsCouncillorPowerful -> bool
		IsRelevantSkill -> bool
		Self -> [unregistered]
	}

	PotentialElector = {
		GetCurrentNomination -> Character
		GetElector -> Character
		AccessSelf -> [unregistered]
		GetCurrentNomination -> [unregistered]
		GetElector -> [unregistered]
		GetVoteChance -> int32
		Self -> [unregistered]
	}

	PotentialFactionMemberWindow = {
		GetListItems -> CharacterSelectionList
		AccessSelf -> [unregistered]
		Close -> void
		GetListItems -> [unregistered]
		HasMembers -> bool
		Self -> [unregistered]
	}

	PotentialTaskLocationWindow = {
		GetActiveTask -> ActiveCouncilTask
		GetTaskType -> CouncilTaskType
		AccessSelf -> [unregistered]
		Close -> void
		GetAcceptTooltip -> CString
		GetTitle -> CString
		IsLocationSelected -> bool
		Select -> void
		Self -> [unregistered]
	}

	PreviewMaskTexture = {
		AccessSelf -> [unregistered]
		GetOpacity -> float
		Self -> [unregistered]
		SetOpacity -> void
		SetOpacityStr -> void
	}

	ProgressInterface = {
		AccessSelf -> [unregistered]
		GetProgress -> CString
		Self -> [unregistered]
	}

	Province = {
		GetCoATitle -> Title
		GetController -> Character
		GetCounty -> County
		GetCountyCapitalProvince -> Province
		GetCountyOccupant -> Character
		GetCulture -> Culture
		GetEndOfRecentlyLooted -> Date
		GetHolding -> Holding
		GetRaid -> Raid
		GetSiege -> Siege
		GetTerrain -> Terrain
		GetTitle -> Title
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		Custom -> CString
		GetCoATitle -> [unregistered]
		GetController -> [unregistered]
		GetCounty -> [unregistered]
		GetCountyCapitalProvince -> [unregistered]
		GetCountyOccupant -> [unregistered]
		GetCulture -> [unregistered]
		GetFortLevel -> int32
		GetFortLevelTooltip -> CString
		GetHolding -> [unregistered]
		GetId -> int32
		GetLootTime -> int32
		GetName -> CString
		GetNameNoTooltip -> CString
		GetProvinceLoot -> CFixedPoint
		GetRaidLoot -> CFixedPoint
		GetRaidLootTooltip -> CString
		GetSiege -> [unregistered]
		GetSiegeStrength -> int32
		GetSupplyLimitDescFor -> CString
		GetSupplyLimitFor -> int32
		GetTag -> CString
		GetTerrain -> [unregistered]
		GetTitle -> [unregistered]
		GetWinterEffectsDesc -> CString
		GetWinterSeverityName -> CString
		HasActiveRaid -> bool
		HasActiveSiege -> [unregistered]
		HasCountyCapitalProvince -> bool
		HasFort -> bool
		HasSiege -> bool
		HasWinter -> bool
		HasWinterLevel -> bool
		IsOccupied -> bool
		IsRealmCapital -> [unregistered]
		IsRecentlyLooted -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	ProvinceIcon = {
		GetCapitalIcon -> CapitalMapIcon
		GetCombatIcon -> CombatMapIcon
		GetFocusCharacter -> Character
		GetHolding -> Holding
		GetOwner -> Character
		GetProvince -> Province
		GetRaid -> Raid
		GetRallyPoint -> RallyPoint
		GetSiege -> Siege
		GetTitle -> Title
		GetUnitIcon -> UnitMapIcon
		AccessSelf -> [unregistered]
		GetActivities -> [unregistered]
		GetArmyIgnoreClick -> [unregistered]
		GetCapitalIcon -> [unregistered]
		GetCombatIcon -> [unregistered]
		GetCouncilTasks -> [unregistered]
		GetFocusCharacter -> [unregistered]
		GetHolding -> [unregistered]
		GetOwner -> [unregistered]
		GetProvince -> [unregistered]
		GetRaid -> [unregistered]
		GetRallyPoint -> [unregistered]
		GetSiege -> [unregistered]
		GetTitle -> [unregistered]
		GetUnitIcon -> [unregistered]
		HasActivities -> bool
		HasBeenRaided -> bool
		HasCharacter -> bool
		HasCoa -> bool
		HasCombat -> bool
		HasCouncilTasks -> bool
		HasHolding -> bool
		HasHoldingDetails -> bool
		HasLocationIcons -> bool
		HasRaid -> bool
		HasRallyPoint -> bool
		HasSiege -> bool
		HasSiegeGroup -> bool
		HasUnits -> bool
		HasWarfareIcons -> bool
		OnActiveTaskClick -> void
		OnActivityClick -> void
		OnRallyPointClick -> void
		Self -> [unregistered]
	}

	ProvinceMovementAttritionIcon = {
		AccessSelf -> [unregistered]
		GetTooltip -> CString
		Self -> [unregistered]
	}

	Raid = {
		GetArmy -> Army
		GetEta -> Date
		GetProvince -> Province
		AccessSelf -> [unregistered]
		GetAttackerMen -> int32
		GetDailyProgressPercent -> CFixedPoint
		GetDefenderMen -> int32
		GetName -> CString
		GetProgress -> CFixedPoint
		GetProgressNeeded -> CFixedPoint
		GetProgressPercent -> float
		GetRaidMenBalance -> float
		GetRaidProgressTooltip -> CString
		IsBlocked -> bool
		Self -> [unregistered]
	}

	RaidWindow = {
		GetRaid -> Raid
		AccessSelf -> [unregistered]
		Close -> void
		OpenArmyWindow -> void
		OpenHoldingView -> void
		Self -> [unregistered]
	}

	RallyPoint = {
		GetProvince -> Province
		AccessSelf -> [unregistered]
		GetColor -> CVector4f
		GetIconColor -> CVector4f
		GetName -> CString
		Self -> [unregistered]
	}

	RallyPointItem = {
		GetRallyPoint -> RallyPoint
		AccessSelf -> [unregistered]
		GetRallyPoint -> [unregistered]
		OnClick -> void
		Self -> [unregistered]
	}

	RallyPointMapIcon = {
		GetRallyPoint -> RallyPoint
		AccessSelf -> [unregistered]
		CanClick -> bool
		GetNumberOfMen -> int32
		GetRallyPoint -> [unregistered]
		GetTooltip -> CString
		IsEmpty -> bool
		IsInEditMode -> bool
		IsRaised -> bool
		OnClick -> void
		Self -> [unregistered]
		ShouldBeShown -> bool
		ShowIsEmpty -> bool
		ShowNumbers -> bool
	}

	RallyPointWindow = {
		GetAllTroopsComposition -> ArmyComposition
		GetSelectedRallyPoint -> RallyPoint
		AccessSelf -> [unregistered]
		CanRaise -> bool
		CanRaiseAll -> bool
		CanRaiseMenAtArms -> bool
		CanRaiseRaid -> bool
		CanRemove -> bool
		Close -> void
		CloseAndDeselect -> void
		GetAliveLocalLevies -> int32
		GetAllTroopsComposition -> [unregistered]
		GetRaiseAllButtonTooltip -> CString
		GetRaiseAllTooltip -> CString
		GetRaiseMenAtArmsTooltip -> CString
		GetRaiseRaidTooltip -> CString
		GetRaiseTooltip -> CString
		GetRallyPointNumberOfLevies -> CString
		GetRelativeSizeLocalLevies -> [unregistered]
		GetRemoveTooltip -> CString
		GetSelectedRallyPoint -> [unregistered]
		GetSelectedRallyPointItems -> [unregistered]
		GetTimeToRaise -> CString
		GetTotalLocalLevies -> int32
		GetUnraisedLocalLevies -> int32
		OnMove -> void
		OnRaise -> void
		OnRaiseAll -> void
		OnRaiseMenAtArms -> void
		OnRaiseRaid -> void
		OnRemove -> void
		Self -> [unregistered]
	}

	RandomizableValueFloat = {
		AccessSelf -> [unregistered]
		GetValue -> float
		Randomize -> void
		Self -> [unregistered]
		SetValue -> void
	}

	RandomizableValueInt = {
		AccessSelf -> [unregistered]
		GetValue -> int32
		Randomize -> void
		Self -> [unregistered]
		SetValue -> void
	}

	RankedRoyalCourtItem = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		GetCharacter -> [unregistered]
		GetRank -> int32
		Self -> [unregistered]
	}

	ReasonItem = {
		GetSkillItem -> SkillItem
		GetTrait -> Trait
		AccessSelf -> [unregistered]
		GetSkillItem -> [unregistered]
		GetTrait -> [unregistered]
		IsSkill -> bool
		IsTrait -> bool
		Self -> [unregistered]
	}

	ReforgeArtifactWindow = {
		GetArtifact -> Artifact
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		Close -> void
		GetArtifact -> [unregistered]
		GetArtifactEffectsDesc -> CString
		GetCharacter -> [unregistered]
		GetCharacterEffectsDesc -> CString
		GetCompleteReforgeDesc -> CString
		IsCompleteReforge -> bool
		Reforge -> void
		Self -> [unregistered]
		ToggleCompleteReforge -> void
	}

	Regiment = {
		GetArmy -> Army
		GetMAAType -> MenAtArmsType
		GetOwner -> Character
		AccessSelf -> [unregistered]
		BuildCurrentRegimentCountString -> CString
		CalcFullStrengthDays -> int32
		CalcFullStrengthMonths -> int32
		CalcMaintenanceCost -> CString
		CalcMaxMAAChunkCount -> int32
		CalcMenAliveCount -> int32
		CalcMenCount -> int32
		CalcReinforcementCost -> CString
		CalcUnraisedCost -> CString
		CalcUnraisedCount -> int32
		GetArmy -> [unregistered]
		GetMAAChunkCount -> int32
		GetMaxCount -> int32
		GetMenAtArmsTypeNameNoTooltip -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		GetTotalCostString -> CString
		GetTotalCostTooltip -> CString
		HasReinforcementCost -> bool
		IsAtFullStength -> bool
		IsRaised -> bool
		IsRegular -> bool
		IsValid -> bool
		Self -> [unregistered]
	}

	RegimentCombatStats = {
		GetKnight -> Character
		GetMenAtArmsType -> MenAtArmsType
		AccessSelf -> [unregistered]
		GetFinalCount -> CFixedPoint
		GetInitialCount -> CFixedPoint
		GetKnight -> [unregistered]
		GetMainKills -> CFixedPoint
		GetMainLosses -> CFixedPoint
		GetMenAtArmsType -> [unregistered]
		GetPursuitKills -> CFixedPoint
		GetPursuitLosses -> CFixedPoint
		GetPursuitLossesByMaa -> CFixedPoint
		GetPursuitLossesSelf -> CFixedPoint
		GetTotalKills -> CFixedPoint
		GetTotalLosses -> CFixedPoint
		IsKnight -> bool
		IsLevy -> bool
		IsMaa -> bool
		Self -> [unregistered]
	}

	RegimentReorgEntry = {
		GetCoATitle -> Title
		GetKnight -> Character
		GetMaAType -> MenAtArmsType
		GetRegiment -> ArmyRegiment
		AccessSelf -> [unregistered]
		GetCoATitle -> [unregistered]
		GetEventTroopName -> CString
		GetKnight -> [unregistered]
		GetMaAType -> [unregistered]
		GetMaxSoldierCount -> int32
		GetName -> CString
		GetRegiment -> [unregistered]
		GetSoldierCount -> int32
		IsMaA -> bool
		MoveRegiment -> void
		Self -> [unregistered]
		ShowCoA -> bool
	}

	RegimentTerrainModifier = {
		GetTerrain -> Terrain
		AccessSelf -> [unregistered]
		GetEffectString -> CString
		GetTerrain -> [unregistered]
		IsPositive -> bool
		Self -> [unregistered]
	}

	RegimentWinterModifier = {
		AccessSelf -> [unregistered]
		GetEffectString -> CString
		IsPositive -> bool
		Self -> [unregistered]
	}

	Religion = {
		GetFamily -> ReligionFamily
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		Custom -> CString
		GetAdjective -> CString
		GetAdjectiveNoTooltip -> CString
		GetFaiths -> [unregistered]
		GetFlavorDesc -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		HasPaganRoots -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	ReligionFamily = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		GetReligions -> CString
		GetReligiousFamilyHostilityDescription -> CString
		IsPagan -> bool
		Self -> [unregistered]
	}

	ReligionWindow = {
		GetReligion -> Religion
		AccessSelf -> [unregistered]
		Close -> void
		GetFaiths -> [unregistered]
		GetOrderByOptions -> [unregistered]
		GetOrderBySelectedIndex -> CVector2i
		GetReligion -> [unregistered]
		GetShowOnlyReligionFaithsTooltip -> CString
		OnOrderBySelectionChanged -> void
		OnShowOnlyReligionFaiths -> void
		Self -> [unregistered]
		ShowOnlyReligionFaiths -> bool
	}

	RemoveFriendConfirmWindow = {
		AccessSelf -> [unregistered]
		ConfirmRemove -> void
		Hide -> void
		Self -> [unregistered]
		ShouldBeShown -> bool
		Show -> void
	}

	RenamePopup = {
		AccessSelf -> [unregistered]
		GetColor -> CVector4f
		GetColorString -> CString
		Self -> [unregistered]
		SetColor -> void
		UsesColor -> bool
		UsesTwoTextFields -> bool
	}

	RepackWindow = {
		AccessSelf -> [unregistered]
		GetCurrentTileSize -> int32
		Repack -> void
		Self -> [unregistered]
		SetTileSize -> void
		ShouldWrapX -> bool
		Toggle -> void
		ToggleShouldWrapX -> void
	}

	ReplacePillarWindow = {
		GetReplacedPillar -> CulturePillar
		GetSelectedPillar -> CulturePillar
		AccessSelf -> [unregistered]
		CanAffordPillar -> bool
		CanPayCost -> bool
		CanPickPillar -> bool
		CanReplacePillar -> bool
		Close -> void
		GetBlockers -> CString
		GetCostBreakdown -> CString
		GetCostString -> CString
		GetPickPillarBlockers -> CString
		GetPillarCostBreakdown -> CString
		GetPillarCostString -> CString
		GetPossiblePillars -> [unregistered]
		GetReplacedPillar -> [unregistered]
		GetSelectedPillar -> [unregistered]
		IsEthos -> bool
		IsLanguage -> bool
		IsMartial -> bool
		ReplacePillar -> void
		SelectPillar -> void
		Self -> [unregistered]
	}

	ResignConfirmationWindow = {
		AccessSelf -> [unregistered]
		Cancel -> void
		GetText -> CString
		IsProgress -> bool
		IsShowSave -> bool
		OnDesktop -> void
		OnMenu -> void
		Self -> [unregistered]
		SetShowSave -> void
		ShouldSave -> bool
		ToggleShouldSave -> void
	}

	RevokeTitlesInteractionWindow = {
		GetCharacterInteractionConfirmationWindow -> CharacterInteractionConfirmationWindow
		AccessSelf -> [unregistered]
		CanSendOffer -> bool
		Close -> void
		GetCharacterInteractionConfirmationWindow -> [unregistered]
		GetDomainLimitTooltip -> CString
		GetResultingDomainSize -> int32
		GetRevokeTitleDescription -> CString
		GetSendOfferTooltip -> CString
		GetTimedFilterLabel -> CString
		GetTimedFilterTooltip -> CString
		HasTimedFilter -> bool
		HasTitles -> bool
		OnTimedFilter -> void
		Self -> [unregistered]
		Send -> void
	}

	RoyalCourtScreenshotWindow = {
		AccessSelf -> [unregistered]
		AreCharactersShown -> bool
		Close -> void
		GetCameraActiveIndex -> CVector2i
		GetCameras -> [unregistered]
		HasCameras -> bool
		HideNotification -> void
		IsNotificationShown -> bool
		IsUiShown -> bool
		Self -> [unregistered]
		SetActiveCameraByIndex -> void
		TakeScreenshot -> void
		ToggleCharacters -> void
		ToggleUi -> void
		UseNextCamera -> void
		UsePreviousCamera -> void
	}

	RoyalCourtWindow = {
		AccessArtifactHelperWindow -> ArtifactHelperWindow
		AccessCourtAmenitiesWindow -> CourtAmenitiesWindow
		AccessCourtEventWindow -> CourtEventWindow
		AccessCourtSceneEditorWindow -> CourtSceneEditorWindow
		AccessCourtTypeWindow -> CourtTypeWindow
		AccessInspirationsWindow -> InspirationsWindow
		AccessScreenshotWindow -> RoyalCourtScreenshotWindow
		GetArtifactClaimsList -> ArtifactClaimsList
		GetCharacter -> Character
		GetCourtGrandeurWindow -> CourtGrandeurWindow
		GetCourtSceneEditorWindow -> CourtSceneEditorWindow
		GetPetitionCharacter -> Character
		GetSelectedArtifact -> Artifact
		GetSelectedSlot -> InventorySlotType
		AccessArtifactHelperWindow -> [unregistered]
		AccessCourtAmenitiesWindow -> [unregistered]
		AccessCourtEventWindow -> [unregistered]
		AccessCourtSceneEditorWindow -> [unregistered]
		AccessCourtTypeWindow -> [unregistered]
		AccessInspirationsWindow -> [unregistered]
		AccessScreenshotWindow -> [unregistered]
		AccessSelf -> [unregistered]
		CanPutInSelectedSlot -> bool
		CanPutInSelectedSlotTooltip -> CString
		CanSlotHoldSelectedArtifact -> bool
		ClearSelectedArtifact -> void
		ClearSelectedSlot -> void
		ClickRoyalCourt -> void
		Close -> void
		EquipArtifact -> void
		GetArtifactClaimsList -> [unregistered]
		GetArtifactSortOptions -> [unregistered]
		GetArtifactSortOptionsIndex -> CVector2i
		GetCharacter -> [unregistered]
		GetCourtGrandeurWindow -> [unregistered]
		GetCourtRoomTexture -> [unregistered]
		GetCourtSceneEditorWindow -> [unregistered]
		GetPetitionCharacter -> [unregistered]
		GetSelectedArtifact -> [unregistered]
		GetSelectedSlot -> [unregistered]
		GetSortedArtifactForSelectedSlot -> [unregistered]
		GetSortedArtifacts -> [unregistered]
		GetStaticHoveredObjectPosition -> CVector2f
		HasSelectedArtifact -> bool
		HasSelectedSlot -> bool
		HasStaticHoveredObject -> bool
		HideEditor -> void
		HoverRoyalCourt -> bool
		IsActiveArtifactsTab -> bool
		IsActiveGrandeurTab -> bool
		IsActiveThroneTab -> bool
		IsArtifactSelected -> bool
		IsArtifactSortOrderDescending -> bool
		IsInPetitionMode -> bool
		IsLiegesCourt -> bool
		IsPlacingArtifact -> bool
		IsSelectedSlot -> bool
		OnClickArtifact -> void
		OnClickArtifactSlot -> void
		OpenDecisionDetailView -> void
		OpenScreenshotWindow -> void
		RightClickRoyalCourt -> void
		Self -> [unregistered]
		SetActiveOptions -> void
		SetCameraActiveByKey -> void
		SetHoverWidgetActive -> void
		SetPetitionerCharacter -> void
		SetSelectedArtifact -> void
		ShouldShowFadeToBlack -> bool
		ShouldSlotBeEnabled -> bool
		ShowEditor -> void
		SortArtifacts -> void
		ToggleArtifactSortOrder -> void
		ToggleSelectedArtifact -> void
		ToggleSelectedSlot -> void
		UnequipArtifact -> void
	}

	RulerDesignerPortraitModifier = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	RulerDesignerSkill = {
		GetModifiedValueBreakdown -> ValueBreakdown
		AccessSelf -> [unregistered]
		ChangeValue -> void
		GetBaseValue -> int32
		GetFrame -> int32
		GetLevelDesc -> CString
		GetModifiedValueBreakdown -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	RulerDesignerWindow = {
		AccessColorPicker -> ColorGenePicker
		AccessCultureList -> CollapsibleCultureList
		AccessEducationTraitSlot -> TraitSlot
		AccessOtherTraitSlots -> TraitSlotArray
		AccessPersonalityTraitSlots -> TraitSlotArray
		AccessReligionList -> CollapsibleReligionList
		GetCharacterToOverwrite -> Character
		GetCoatOfArmsDesigner -> CoatOfArmsDesigner
		GetCulture -> Culture
		GetDynastyCoatOfArms -> DesignerCoA
		GetEthnicity -> Ethnicity
		GetFaith -> Faith
		GetPointsUsedBreakdown -> ValueBreakdown
		GetTitleCoatOfArms -> DesignerCoA
		AccessColorPicker -> [unregistered]
		AccessCultureList -> [unregistered]
		AccessEducationTraitSlot -> [unregistered]
		AccessOtherTraitSlots -> [unregistered]
		AccessPersonalityTraitSlots -> [unregistered]
		AccessReligionList -> [unregistered]
		AccessSelf -> [unregistered]
		AccessSkills -> [unregistered]
		CalcMaxNumberOfGeneratedChildren -> int32
		CanChangeSexuality -> bool
		CanFinalize -> bool
		CanPickTrait -> bool
		CanPickTraitDesc -> CString
		CancelTraitEditing -> void
		ChangeNumberOfGeneratedDaughters -> void
		ChangeNumberOfGeneratedSons -> void
		Close -> void
		FinalizeOverwrite -> void
		FinishDynastyCoatOfArmsDesigner -> void
		FinishTitleCoatOfArmsDesigner -> void
		FinishTraitEditing -> void
		GetAccessoryModifiers -> [unregistered]
		GetAge -> int32
		GetBirthYear -> int32
		GetCharacterToOverwrite -> [unregistered]
		GetCoatOfArmsDesigner -> [unregistered]
		GetCulture -> [unregistered]
		GetDynastyCoatOfArms -> [unregistered]
		GetDynastyName -> CString
		GetEthnicity -> [unregistered]
		GetFaith -> [unregistered]
		GetFinalizeTooltip -> CString
		GetFirstName -> CString
		GetGenesByGroup -> [unregistered]
		GetHealthFrame -> int32
		GetHealthText -> CString
		GetMorphGeneValue -> float
		GetMorphTemplatesByGene -> [unregistered]
		GetNumberOfGeneratedChildren -> int32
		GetNumberOfGeneratedDaughters -> int32
		GetNumberOfGeneratedSons -> int32
		GetPointsUsed -> int32
		GetPointsUsedBreakdown -> [unregistered]
		GetPortrait -> [unregistered]
		GetTitleAdjective -> CString
		GetTitleCoatOfArms -> [unregistered]
		GetTitleMapColor -> CVector4f
		GetTitleName -> CString
		GetTitleTierName -> CString
		GetWeight -> int32
		HasHouseMotto -> bool
		HasMorphTemplateSelected -> bool
		HasSexuality -> bool
		HasTrait -> bool
		IsAdult -> bool
		IsFemale -> bool
		IsModifierValid -> bool
		IsPortraitModifierSelected -> bool
		LoadDnaFromClipboard -> void
		OnAgeChange -> void
		OnEditDynastyName -> void
		OnEditFirstName -> void
		OnEditHouseMotto -> void
		OnEditTitleAdjective -> void
		OnEditTitleName -> void
		OnMorphGeneChange -> void
		OnMorphTemplateSelected -> void
		OnPortraitModifierSelected -> void
		OnWeightChange -> void
		OpenDynastyCoatOfArmsDesigner -> void
		OpenTitleCoatOfArmsDesigner -> void
		RandomizeDynastyName -> void
		RandomizeEthnicityDnaFromCulture -> void
		RandomizeEthnicityDnaFromCurrent -> void
		RandomizeFirstNameCulture -> void
		RandomizeFirstNameFaith -> void
		ResetTitleToHistorical -> void
		SaveDnaToClipboard -> void
		Self -> [unregistered]
		SetCulture -> void
		SetEthnicity -> void
		SetFaith -> void
		SetIsFemale -> void
		SetSexuality -> void
		SetShowAccessories -> void
		SetTitleMapColor -> void
		ShouldGenerateSpouse -> bool
		ShouldShowAcesssories -> bool
		TitleUsesDefiniteForm -> bool
		ToggleGenerateSpouse -> void
		ToggleShowAccessories -> void
		ToggleTitleUsesDefiniteForm -> void
	}

	SAICBTypeInfo = {
		GetCBType -> CasusBelliType
		GetClaimant -> Character
		GetTarget -> Character
		AccessSelf -> [unregistered]
		GetScore -> CString
		GetScoreTooltip -> CString
		OnClickClaimant -> void
		OnClickTarget -> void
		Self -> [unregistered]
	}

	SAISchemeTypeInfo = {
		GetSchemeType -> SchemeType
		AccessSelf -> [unregistered]
		OnClick -> void
		Self -> [unregistered]
	}

	SAIStrategyInfo = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		GetEnemy -> CString
		GetFriend -> CString
		GetThreat -> CString
		OnClick -> void
		Self -> [unregistered]
	}

	SAIValueInfo = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		GetValue -> CString
		OnClick -> void
		Self -> [unregistered]
	}

	Savable = {
		AbsoluteLocationText -> CString
		AccessSelf -> [unregistered]
		Error -> CString
		Filename -> CString
		HasError -> bool
		HasWarning -> bool
		IsDeletable -> bool
		IsFilenameModifiable -> bool
		IsRevertible -> bool
		IsSelected -> bool
		Location -> CString
		LocationTooltip -> CString
		RevertLocation -> void
		Self -> [unregistered]
		SetFilename -> void
		SetLocation -> void
		SetSelected -> void
		Warning -> CString
	}

	SavableGroup = {
		AccessSelf -> [unregistered]
		HasError -> bool
		HasWarning -> bool
		IsExpanded -> bool
		IsRevertible -> bool
		IsSelected -> bool
		IsSelectedIndeterminable -> bool
		Location -> CString
		RevertLocation -> void
		Savables -> [unregistered]
		Self -> [unregistered]
		SetLocation -> void
		SetSelected -> void
		Title -> CString
		ToggleExpanded -> void
	}

	SaveDialog = {
		AccessSelf -> [unregistered]
		FindGroupLocation -> void
		FindLocation -> void
		Groups -> [unregistered]
		IsSelected -> bool
		IsSelectedIndeterminable -> bool
		SavableCount -> int32
		Self -> [unregistered]
		SetSelected -> void
	}

	SaveGame = {
		AccessSelf -> [unregistered]
		GetLastModified -> CString
		GetName -> CString
		Self -> [unregistered]
	}

	SaveGameAnalysisView = {
		GetSaveGame -> SaveGame
		AccessSelf -> [unregistered]
		GetNote -> CUTF8String
		GetSaveGame -> [unregistered]
		GetShowHidden -> bool
		IsActive -> bool
		IsEmpty -> bool
		IsReading -> bool
		Self -> [unregistered]
		Sort -> void
		ToggleShowHidden -> void
	}

	SaveGameAnalyzer = {
		AccessSelf -> [unregistered]
		CancelLoad -> void
		CloseNotes -> void
		EditNotes -> void
		ListSaves -> void
		LoadSelected -> void
		Self -> [unregistered]
	}

	SaveGameBlockData = {
		AccessSelf -> [unregistered]
		GetCharCount -> int32
		GetInstanceCount -> int32
		GetOtherPaths -> CString
		GetOtherPathsCount -> int32
		GetParentPercentage -> float
		GetPath -> CString
		GetPercentage -> float
		GetTitle -> CString
		GetTokenName -> CString
		GetWhitespaceCount -> int32
		GetWhitespaceRatio -> float
		Self -> [unregistered]
	}

	SaveGameConfigView = {
		AccessSelf -> [unregistered]
		GetTokenName -> CString
		IsActive -> bool
		IsDirty -> bool
		Save -> void
		Self -> [unregistered]
	}

	SaveGameItem = {
		GetCoatOfArms -> CoatOfArms
		GetDate -> Date
		GetHouseCoatOfArms -> CoatOfArms
		GetPlayerGovernment -> GovernmentType
		AccessSelf -> [unregistered]
		CanGetAchievements -> bool
		GetAchievementBlockingGameRulesInfo -> CString
		GetDate -> [unregistered]
		GetDynastyFrame -> int32
		GetHouseName -> CUTF8String
		GetLastPlayed -> CString
		GetMainCharacterTexture -> [unregistered]
		GetMissingDLCInfo -> CString
		GetMissingMods -> CString
		GetModifiedDate -> CUTF8String
		GetName -> CUTF8String
		GetNumberOfPlayers -> int32
		GetPlayerName -> CUTF8String
		GetPlayerTier -> int32
		GetTitleName -> CUTF8String
		GetVersionName -> CUTF8String
		HasAchievementBlockingGameRules -> bool
		HasMainCharacter -> bool
		HasMissingDLCs -> bool
		HasMissingMods -> bool
		IsCloudSave -> bool
		IsDifferentVersion -> bool
		IsIronmanSave -> bool
		IsMultiplayer -> bool
		IsSelected -> bool
		IsValid -> bool
		Select -> void
		Self -> [unregistered]
	}

	SaveGameListView = {
		AccessSaves -> [unregistered]
		AccessSelf -> [unregistered]
		HasSelection -> bool
		IsActive -> bool
		IsReading -> bool
		IsSelected -> bool
		Self -> [unregistered]
		SetSelected -> void
		Sort -> void
	}

	SaveGameWindow = {
		AccessCloudData -> CloudSaveData
		AccessCloudData -> [unregistered]
		AccessSelf -> [unregistered]
		Cancel -> void
		GetDefaultSaveName -> CUTF8String
		GetSaveGames -> [unregistered]
		IsIronman -> bool
		IsOverwrite -> bool
		IsSaveNameOk -> bool
		IsSaving -> bool
		IsShowInvalid -> bool
		Save -> void
		Self -> [unregistered]
		ToggleShowInvalid -> void
		UpdateSaveName -> void
	}

	Scheme = {
		GetOwner -> Character
		GetSchemeType -> SchemeType
		GetTarget -> Character
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		BuildEstimatedRemainingTimeDescModified -> CString
		Custom -> CString
		GetActionName -> [unregistered]
		GetChangeDesc -> CString
		GetCooldownInfo -> CString
		GetEstimatedTimeRemaining -> CString
		GetFullActionName -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> [unregistered]
		GetPower -> CFixedPoint
		GetPowerDescription -> CString
		GetPowerDifference -> CFixedPoint
		GetProgress -> int32
		GetProgressBar -> float
		GetProgressChance -> int32
		GetProgressDescription -> CString
		GetResistance -> CFixedPoint
		GetResistanceDescription -> CString
		GetSecrecy -> int32
		GetSecrecyDescription -> CString
		GetSuccessChance -> int32
		GetSuccessChanceDescription -> CString
		GetTooltip -> CString
		GetTypeDescription -> [unregistered]
		IsExposed -> bool
		IsFrozen -> bool
		IsReady -> bool
		IsSecret -> bool
		IsUnfrozen -> bool
		IsValid -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	SchemeAgentItem = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		GetCharacter -> [unregistered]
		GetInfluence -> CFixedPoint
		GetSuccessChance -> CFixedPoint
		GetSuccessDesc -> CString
		GetTooltip -> CString
		IsExposed -> bool
		Self -> [unregistered]
	}

	SchemeItem = {
		GetScheme -> Scheme
		AccessSelf -> [unregistered]
		AreMembersVisible -> bool
		CanCancelScheme -> bool
		GetCancelSchemeDescription -> CString
		GetMembers -> [unregistered]
		GetNumberOfOwnerAgents -> int32
		GetNumberOfPotentialOwnerAgents -> int32
		GetNumberOfTotalPotentialOwnerAgents -> int32
		GetOwnerTooltip -> CString
		GetProgressItems -> [unregistered]
		GetScheme -> [unregistered]
		GetShowHideMembersTooltip -> CString
		GetShowMembersFrame -> int32
		HasMembers -> bool
		OnCancelClick -> void
		Self -> [unregistered]
		ShowHideMembersFrame -> void
		ShowPotentialAgents -> void
	}

	SchemeType = {
		AccessSelf -> [unregistered]
		GetActionName -> CString
		GetDetailedDescription -> CString
		GetGeneralDescription -> CString
		GetIcon -> [unregistered]
		GetTypeName -> CString
		GetTypeNameNoTooltip -> CString
		IsHostile -> bool
		IsValid -> bool
		MaxSecrecy -> int32
		MaxSuccess -> int32
		Self -> [unregistered]
		UsesAgents -> bool
	}

	Scope = {
		Activity -> Activity
		Army -> Army
		Artifact -> Artifact
		CasusBelli -> ActiveCasusBelli
		Char -> Character
		Combat -> Combat
		CombatSide -> CombatSide
		CouncilTask -> ActiveCouncilTask
		Culture -> Culture
		Dynasty -> Dynasty
		Faction -> Faction
		Faith -> Faith
		GetActivity -> Activity
		GetCharacter -> Character
		GetLandedTitle -> Title
		GetProvince -> Province
		GetScheme -> Scheme
		GetVariable -> Scope
		GreatHolyWar -> GreatHolyWar
		HolyOrder -> HolyOrder
		House -> DynastyHouse
		Inspiration -> Inspiration
		MercenaryCompany -> MercenaryCompany
		Province -> Province
		Religion -> Religion
		Scheme -> Scheme
		Secret -> Secret
		Story -> Story
		Title -> Title
		Var -> Scope
		War -> War
		AccessSelf -> [unregistered]
		Activity -> [unregistered]
		Army -> [unregistered]
		Artifact -> [unregistered]
		CasusBelli -> [unregistered]
		Char -> [unregistered]
		Combat -> [unregistered]
		CombatSide -> [unregistered]
		CouncilTask -> [unregistered]
		Culture -> [unregistered]
		Dynasty -> [unregistered]
		Faction -> [unregistered]
		Faith -> [unregistered]
		GetActivity -> [unregistered]
		GetCharacter -> [unregistered]
		GetFlagName -> CString
		GetLandedTitle -> [unregistered]
		GetList -> [unregistered]
		GetProvince -> [unregistered]
		GetScheme -> [unregistered]
		GetScriptValueDesc -> CString
		GetValue -> CFixedPoint
		GetValueWithDefault -> CFixedPoint
		GreatHolyWar -> [unregistered]
		HolyOrder -> [unregistered]
		House -> [unregistered]
		Inspiration -> [unregistered]
		IsSet -> bool
		MercenaryCompany -> [unregistered]
		Province -> [unregistered]
		Religion -> [unregistered]
		Scheme -> [unregistered]
		ScriptValue -> CFixedPoint
		Secret -> [unregistered]
		Self -> [unregistered]
		Story -> [unregistered]
		Title -> [unregistered]
		VarRemaining -> int32
		War -> [unregistered]
	}

	ScopeDebugData = {
		AccessSelf -> [unregistered]
		GetDebugInformation -> CString
		GetRawID -> CString
		GetTypeData -> CString
		GetTypeID -> CString
		GetTypeName -> CString
		IsValid -> bool
		Self -> [unregistered]
		SupportsVariables -> bool
	}

	ScopeDebugInspectorPlugin = {
		GetScopeData -> ScopeDebugData
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	ScopeObjectEditor = {
		AccessSelf -> [unregistered]
		AsBool -> bool
		AsString -> CString
		GetID -> uint64
		GetSelectedType -> CVector2i
		GetTypeData -> CString
		GetValue -> CString
		GetVariableTypes -> [unregistered]
		IsBool -> bool
		IsFlag -> bool
		IsNumber -> bool
		IsReference -> bool
		Self -> [unregistered]
		SetFromString -> void
		SetIDFromString -> void
		SetSelectedType -> void
		SetTypeDataFromString -> void
		ToggleBool -> void
	}

	ScopeObjectProvider = {
		AccessSelf -> [unregistered]
		GetError -> CString
		GetFilteredResultCount -> int32
		GetTotalResultCount -> int32
		GetTriggerString -> CString
		HasError -> bool
		Self -> [unregistered]
		SetTriggerString -> void
		UpdateFilter -> void
	}

	ScopeObjectType = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	ScopedAnimationEventLayer = {
		AnimationEventLayer -> AnimationEventLayer
		AccessSelf -> [unregistered]
		AnimationEventLayer -> [unregistered]
		Self -> [unregistered]
	}

	ScopedEventLayer = {
		EventLayer -> EventLayer
		AccessSelf -> [unregistered]
		EventLayer -> [unregistered]
		Self -> [unregistered]
	}

	ScopedJominiSettingsCategory = {
		AccessCategory -> SettingCategory
		GetCategory -> SettingCategory
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	ScopedJominiSettingsPage = {
		AccessPage -> SettingsPage
		GetPage -> SettingsPage
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	ScriptRunnerInspector = {
		AccessEffectResult -> ScriptRunnerResult
		AccessEventTargets -> EventTargetSetupContext
		AccessTriggerResult -> ScriptRunnerResult
		AccessSelf -> [unregistered]
		GetEffect -> CString
		GetTrigger -> CString
		ParseEffect -> void
		RunEffect -> void
		RunTrigger -> void
		Self -> [unregistered]
		SetEffect -> void
		SetTrigger -> void
		ShouldModifyEventTargets -> bool
		ToggleModifyEventTargets -> void
	}

	ScriptRunnerResult = {
		AccessSelf -> [unregistered]
		GetResult -> CString
		GetTooltip -> CString
		HasResult -> bool
		IsMissingTooltip -> bool
		IsOutputVisible -> bool
		IsValid -> bool
		Self -> [unregistered]
		ToggleOutputVisible -> void
	}

	ScriptedGui = {
		AccessSelf -> [unregistered]
		BuildTooltip -> CString
		Execute -> void
		ExecuteTooltip -> CString
		IsShown -> bool
		IsShownTooltip -> CString
		IsValid -> bool
		IsValidTooltip -> CString
		Self -> [unregistered]
	}

	ScriptedRelation = {
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetName -> CString
		Self -> [unregistered]
	}

	Secret = {
		GetOwner -> Character
		GetTargetCharacter -> Character
		GetType -> SecretType
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		Custom -> CString
		GetCategoryName -> CString
		GetDesc -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		GetOwner -> [unregistered]
		GetTargetCharacter -> [unregistered]
		GetTooltipDesc -> CString
		GetType -> [unregistered]
		HasTargetCharacter -> bool
		IsValid -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	SecretType = {
		AccessSelf -> [unregistered]
		GetDesc -> CString
		GetIcon -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		Self -> [unregistered]
	}

	SelectParticleUserDataDialog = {
		AccessSelf -> [unregistered]
		DataModel -> [unregistered]
		Self -> [unregistered]
	}

	SelectTool = {
		AccessSelf -> [unregistered]
		IsHideSelection -> bool
		Self -> [unregistered]
		SetHideSelection -> void
	}

	SelectableTaskLocation = {
		AccessSelf -> [unregistered]
		GetName -> CString
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	SelectedRallyPointItem = {
		GetRallyPoint -> RallyPoint
		AccessSelf -> [unregistered]
		GetRallyPoint -> [unregistered]
		GetTooltip -> CString
		IsRaised -> bool
		IsShown -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	SelectedUnitItem = {
		GetArmy -> Army
		AccessSelf -> [unregistered]
		GetTooltip -> CString
		IsFleet -> bool
		IsGatheringArmy -> bool
		IsRaisedArmy -> bool
		IsShown -> bool
		OnClick -> void
		OnRightClick -> void
		Self -> [unregistered]
	}

	SelectionHistory = {
		AccessSelf -> [unregistered]
		HasNext -> bool
		HasPrevious -> bool
		Self -> [unregistered]
	}

	SelectionLine = {
		AccessSelf -> [unregistered]
		Color -> CVector4f
		From -> CVector2f
		Position -> CVector2f
		Self -> [unregistered]
		Size -> CVector2f
		To -> CVector2f
	}

	ServerInformation = {
		AccessSelf -> [unregistered]
		GetMPMode -> CString
		GetServerID -> CUTF8String
		GetServerName -> CUTF8String
		HasServerID -> bool
		HasServerName -> bool
		IsInvite -> bool
		IsPublic -> bool
		IsSingleplayer -> bool
		Self -> [unregistered]
	}

	SettingCategory = {
		AccessSelf -> [unregistered]
		AccessSettingsOrder -> [unregistered]
		GetName -> CUTF8String
		Self -> [unregistered]
	}

	SettingsPage = {
		AccessCategories -> [unregistered]
		AccessSelf -> [unregistered]
		GetName -> CUTF8String
		IsSelected -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	Siege = {
		GetCommander -> Character
		GetProvince -> Province
		GetSiegingRealmCharacter -> Character
		AccessSelf -> [unregistered]
		CalculateAssaultCasualties -> int32
		CalculateAssaultProgress -> CFixedPoint
		EnableAssaultButton -> [unregistered]
		FortLevelHasImpact -> bool
		GetAssaultButtonTooltip -> [unregistered]
		GetAttackerMen -> int32
		GetBlockedReason -> CString
		GetBlockedReasonShort -> CString
		GetCommander -> [unregistered]
		GetDefenderMen -> int32
		GetID -> uint32
		GetName -> CString
		GetPhaseProgress -> [unregistered]
		GetProgress -> [unregistered]
		GetProvince -> [unregistered]
		GetSiegeDescription -> [unregistered]
		GetSiegeMenBalance -> [unregistered]
		GetSiegingRealmCharacter -> [unregistered]
		HasSiegingRealm -> bool
		IsAssaultInProgress -> bool
		IsBlocked -> bool
		IsBlockedByGarrison -> bool
		IsPlayerInAttackerSide -> bool
		Self -> [unregistered]
		ShowAssaultButton -> [unregistered]
	}

	SiegeWindow = {
		GetAttackerUnitItem -> UnitItem
		GetSiege -> Siege
		GetStrongestSiegeRegiment -> Regiment
		AccessSelf -> [unregistered]
		Close -> void
		GetActionHistoryFrame -> int32
		GetActionHistoryTooltip -> CString
		GetAttackerUnitItem -> [unregistered]
		GetBreachStateFrame -> int32
		GetBreachStateTooltip -> CString
		GetDailyProgress -> CFixedPoint
		GetDailyProgressTooltip -> CString
		GetDiseaseStateFrame -> int32
		GetDiseaseStateTooltip -> CString
		GetFortLevelImpactTooltip -> CString
		GetNumberOfTroopsTooltip -> CString
		GetPhaseTimerFrame -> int32
		GetSiege -> [unregistered]
		GetSiegeMachinesCount -> int32
		GetSiegeMachinesRegiments -> [unregistered]
		GetSiegePhaseLength -> CString
		GetSiegePhaseTooltip -> CString
		GetSiegeProgressTooltip -> CString
		GetSiegeWeaponDescription -> CString
		GetStarvationStateFrame -> int32
		GetStarvationStateTooltip -> CString
		GetStrongestSiegeRegiment -> [unregistered]
		GetTimeLeft -> CString
		GetTimeLeftShort -> CString
		HasActionHistory -> bool
		HasPlayerOwnedArmies -> bool
		OpenArmyWindow -> void
		OpenHoldingView -> void
		Self -> [unregistered]
		StartStopAssault -> void
	}

	SkillItem = {
		AccessSelf -> [unregistered]
		GetFrame -> int32
		GetName -> CString
		GetSkill -> int32
		GetSkillBreakdownTooltip -> CString
		GetSkillEffects -> CString
		GetValue -> int32
		IsFocusSkill -> bool
		IsImportantSkill -> bool
		Self -> [unregistered]
	}

	SkillSchemeGroup = {
		AccessSelf -> [unregistered]
		GetMaxNumberOfSchemes -> int32
		GetNumberOfSchemes -> int32
		GetSchemes -> [unregistered]
		GetTypeName -> CString
		HasSchemes -> bool
		Self -> [unregistered]
	}

	SkinEditor = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	SmartBrushHeightRange = {
		AccessPattern -> SmartBrushPattern
		AccessPattern -> [unregistered]
		AccessSelf -> [unregistered]
		GetName -> CUTF8String
		GetOpacityMaskTexturePath -> CString
		IsVisible -> bool
		Self -> [unregistered]
	}

	SmartBrushPattern = {
		AccessMaterialMix -> MaterialMix
		AccessMaterialMix -> [unregistered]
		AccessSelf -> [unregistered]
		GetAngleL -> float
		GetAngleR -> float
		GetBleeding -> uint32
		GetDensity -> int32
		GetInterpolationIndex -> CVector2i
		GetModeIndex -> int32
		GetPatternIndex -> CVector2i
		GetSharpness -> uint32
		Self -> [unregistered]
	}

	SmartBrushPresetManager = {
		AccessPresets -> [unregistered]
		AccessSelf -> [unregistered]
		GetPresets -> [unregistered]
		Self -> [unregistered]
	}

	SmartMaterialPaintingMode = {
		AccessCurrentPreset -> [unregistered]
		AccessCurrentPresetRanges -> [unregistered]
		AccessOpacityMaskTexturePreview -> [unregistered]
		AccessPatternCurveTexture -> [unregistered]
		AccessPatternTypeTexture -> [unregistered]
		AccessSelf -> [unregistered]
		AddAngle -> void
		AddBleeding -> void
		AddDensity -> void
		AddOpacityMaskOffset -> void
		AddOpacityMaskRotation -> void
		AddOpacityMaskScale -> void
		AddSharpness -> void
		ApplyChanges -> void
		CanApplyChanges -> bool
		CanReorderRangeToNext -> bool
		CanReorderRangeToPrev -> bool
		ChangeSampleEntryComposition -> void
		ClearOpacityMaskTexture -> void
		ClonePreset -> void
		CopyCurveToClipboard -> void
		CreateNewPreset -> void
		CreateNewRange -> void
		DeletePreset -> void
		DeleteRange -> void
		DiscardChanges -> void
		EndSampleCompositionEdit -> void
		GetBackgroundProcessingDesc -> CString
		GetCurrentPreset -> [unregistered]
		GetCurveFromClipboard -> [unregistered]
		GetDebugDesc -> CString
		GetDebugUIHint -> CString
		GetOpacityMaskOffset -> float
		GetOpacityMaskRotation -> float
		GetOpacityMaskScale -> float
		GetPaintingForbiddenDesc -> CString
		GetPresetIndex -> CVector2i
		GetRangeName -> CUTF8String
		GetTopologyPickerDesc -> CString
		HasAnyPresets -> bool
		HasDoneAnyChangesToPresets -> bool
		HasOpacityMaskTexture -> bool
		IsAutosave -> bool
		IsBackgroundProcessing -> bool
		IsCurrentPresetValid -> bool
		IsCurveClipboardEmpty -> bool
		IsDebugActive -> bool
		IsDebugActiveFor -> bool
		IsDebugTooltipVisible -> bool
		IsDebuggingSinglePoint -> bool
		IsEraserSelected -> bool
		IsEyeDropperSelected -> bool
		IsHeightRangeVisible -> bool
		IsOpacityMaskTextureLoading -> bool
		IsPainterSelected -> bool
		IsPaintingForbidden -> bool
		IsPaintingForbiddenTooltipActive -> bool
		IsSelected -> bool
		IsTopologyPickerEnabled -> bool
		IsTopologyPickerTooltipActive -> bool
		IsVisualDebuggingTooltipActive -> bool
		ReloadPresets -> void
		RemoveMaterialEntry -> void
		RenamePreset -> void
		ReorderRangeToNext -> void
		ReorderRangeToPrev -> void
		SavePresets -> void
		Self -> [unregistered]
		SetAngleAsString -> void
		SetBleedingAsString -> void
		SetDensityAsString -> void
		SetEraserSelected -> void
		SetEyeDropperSelected -> void
		SetHeightRangeName -> void
		SetInterpolationIndex -> void
		SetOpacityMaskOffsetAsString -> void
		SetOpacityMaskRotationAsString -> void
		SetOpacityMaskScaleAsString -> void
		SetPainterSelected -> void
		SetPatternIndex -> void
		SetPatternMode -> void
		SetPresetIndex -> void
		SetSharpnessAsString -> void
		ShowMaterialBrowserAndAddToCurrentPattern -> void
		ShowMaterialBrowserAndSetEntryInCurrentPattern -> void
		StartSampleCompositionEdit -> void
		ToggleAutosave -> void
		ToggleDebugActiveFor -> void
		ToggleHeightRangeVisible -> void
		ToggleMaterialLock -> void
		ToggleSampleEntryLock -> void
		ToggleTopologyPicker -> void
	}

	Social = {
		AccessSelf -> [unregistered]
		GetTotalUnreadChatMessages -> int32
		Self -> [unregistered]
	}

	SocialNotificationWindow = {
		AccessChatMessages -> [unregistered]
		AccessSelf -> [unregistered]
		GetNotificationsLayoutAnchor -> [unregistered]
		Hide -> void
		Self -> [unregistered]
		ShouldBeShown -> bool
		Show -> void
	}

	SocialUI = {
		AccessSelf -> [unregistered]
		Hide -> void
		IsAllowedToBeShown -> bool
		Self -> [unregistered]
		Show -> void
		ToggleShow -> void
		WantsToBeShown -> bool
	}

	SocialWidget = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	SplineAdjustmentTool = {
		AccessSelf -> [unregistered]
		AddAnchorsToAdjacentSelectedPairs -> void
		CanAddAnchorsInSelection -> bool
		CanDeleteSelection -> bool
		DeleteSelected -> void
		HasMapContent -> bool
		HasMergeNotes -> bool
		IsAnchorCreationSelected -> bool
		IsAnchorSelectionSelected -> bool
		IsMapContentSelectionSelected -> bool
		IsNavMeshVisible -> bool
		IsShowingAllMergeNotes -> bool
		IsShowingConflictsMergeNotes -> bool
		SelectAnchorCreation -> void
		SelectAnchorSelection -> void
		SelectMapContentSelection -> void
		Self -> [unregistered]
		ToggleNavMeshVisibility -> void
		ToggleShowingAllMergeNotes -> void
		ToggleShowingConflictsMergeNotes -> void
	}

	SplineAdjustmentToolMode = {
		AccessSelf -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
	}

	SplineStripTool = {
		AccessSelf -> [unregistered]
		CanDeleteSelection -> bool
		CheckAllStripsForErrors -> void
		DeleteSelected -> void
		FocusCameraOnSelection -> void
		FocusCameraOnStripError -> void
		GetStripErrorCount -> int32
		HasMapContent -> bool
		HasMergeNotes -> bool
		HasSelectedStrips -> bool
		IsAnchorCreationSelected -> bool
		IsAnchorSelectionSelected -> bool
		IsMapContentSelectionSelected -> bool
		IsNavMeshVisible -> bool
		IsShowingAllMergeNotes -> bool
		IsShowingConflictsMergeNotes -> bool
		IsStripCreationSelected -> bool
		IsStripSelectionSelected -> bool
		SelectAnchorCreation -> void
		SelectAnchorSelection -> void
		SelectMapContentSelection -> void
		SelectStripCreation -> void
		SelectStripSelection -> void
		Self -> [unregistered]
		ToggleNavMeshVisibility -> void
		ToggleShowingAllMergeNotes -> void
		ToggleShowingConflictsMergeNotes -> void
	}

	SplineStripToolMode = {
		AccessSelf -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
	}

	SplineToolsMapContentPanel = {
		AccessSelf -> [unregistered]
		AutoPlaceHubAnchors -> void
		HasMapContent -> bool
		Self -> [unregistered]
	}

	SplineTypeCreateSelectionDropdown = {
		AccessSelf -> [unregistered]
		IsSplineTypeSelected -> bool
		SelectSplineType -> void
		Self -> [unregistered]
		SplineTypes -> [unregistered]
		Toggle -> void
	}

	SplineTypeItem = {
		AccessSelf -> [unregistered]
		GetId -> uint8
		GetName -> CString
		Self -> [unregistered]
	}

	SplineTypeSwitchSelectionDropdown = {
		AccessSelf -> [unregistered]
		ChangeSelectedStripsType -> void
		IsSplineTypeSelected -> bool
		Self -> [unregistered]
		SplineTypes -> [unregistered]
		Toggle -> void
	}

	SplineVisibilityDropdown = {
		AccessSelf -> [unregistered]
		IsVisibilityModeAll -> bool
		IsVisibilityModeFirst -> bool
		IsVisibilityModeLast -> bool
		Self -> [unregistered]
		SetVisibilityModeToAll -> void
		SetVisibilityModeToFirst -> void
		SetVisibilityModeToLast -> void
		Toggle -> void
	}

	StaticModifier = {
		AccessSelf -> [unregistered]
		GetDesc -> CString
		GetIcon -> [unregistered]
		GetName -> CString
		GetNameWithTooltip -> CString
		Self -> [unregistered]
	}

	Story = {
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		Custom -> CString
		GetOwner -> [unregistered]
		MakeScope -> Scope
		Self -> [unregistered]
	}

	StoryInfo = {
		AccessSelf -> [unregistered]
		GetAllDates -> CString
		GetDate -> CString
		GetName -> CString
		GetScopesDebug -> CString
		Self -> [unregistered]
	}

	StraitMapIcon = {
		AccessSelf -> [unregistered]
		GetTooltip -> CString
		Self -> [unregistered]
		ShouldBeShown -> bool
	}

	SuccessionElectionWindow = {
		GetCandidateFromCharacter -> SuccessionElectionWindowCandidate
		GetCandidates -> CharacterSelectionList
		GetElectorFromCharacter -> SuccessionElectionWindowElector
		GetElectors -> CharacterSelectionList
		GetRelevanceBreakdown -> ValueBreakdown
		GetSuccessionLaw -> Law
		GetTitle -> Title
		AccessSelf -> [unregistered]
		Close -> void
		CouldVoteForPlayerCandidateInstead -> bool
		GetCandidateFromCharacter -> [unregistered]
		GetCandidates -> [unregistered]
		GetCandidatesGrouping -> CString
		GetCandidatesGroupingTooltip -> CString
		GetElectorFromCharacter -> [unregistered]
		GetElectorVoteStrengthBreakdown -> CString
		GetElectors -> [unregistered]
		GetElectorsGrouping -> CString
		GetElectorsGroupingTooltip -> CString
		GetPlayerCandidateVoteReasonBreakdown -> CString
		GetRelevanceBreakdown -> [unregistered]
		GetTitle -> [unregistered]
		GetVoteReasonBreakdown -> CString
		GetVoteScore -> int32
		GetVoteStrength -> int32
		Self -> [unregistered]
	}

	SuccessionElectionWindowCandidate = {
		GetCandidate -> Character
		AccessSelf -> [unregistered]
		GetCandidate -> [unregistered]
		GetElectionRank -> int32
		GetElectors -> [unregistered]
		GetRelevance -> int32
		GetScore -> uint32
		GetVotesInFavor -> CString
		Self -> [unregistered]
	}

	SuccessionElectionWindowElector = {
		GetComparedCandidate -> SuccessionElectionWindowElectorVote
		GetElector -> Character
		GetElectorCandidate -> SuccessionElectionWindowElectorVote
		AccessSelf -> [unregistered]
		GetComparedCandidate -> [unregistered]
		GetElector -> [unregistered]
		GetElectorCandidate -> [unregistered]
		GetScoreDiff -> int32
		GetVoteStrength -> int32
		IsVoteForPlayer -> bool
		Self -> [unregistered]
	}

	SuccessionElectionWindowElectorVote = {
		GetCandidate -> Character
		AccessSelf -> [unregistered]
		GetCandidate -> [unregistered]
		GetScore -> int32
		Self -> [unregistered]
	}

	SuccessionElector = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		GetCharacter -> [unregistered]
		GetVoteStrength -> int32
		Self -> [unregistered]
	}

	SuccessionEventWindow = {
		GetDeadCharacter -> Character
		GetDeadCharacterLegacy -> LegacyItem
		GetEndDate -> Date
		GetPlayerHeir -> Character
		GetPlayerHeirLegacy -> LegacyItem
		GetPrimaryHeir -> Character
		GetStartDate -> Date
		AccessSelf -> [unregistered]
		CanChangeCharacter -> bool
		ChooseNewCharacter -> void
		Close -> void
		GetDeadCharacter -> [unregistered]
		GetDeadCharacterLegacy -> [unregistered]
		GetDeadDesc -> CString
		GetEndDate -> [unregistered]
		GetExitName -> CString
		GetExitTooltip -> CString
		GetHeader -> CString
		GetHeirDesc -> CString
		GetInheritedTitles -> [unregistered]
		GetLegacy -> [unregistered]
		GetLostTitles -> [unregistered]
		GetNumberOfLostTitles -> int32
		GetNumberOfPlayed -> int32
		GetPlayedLength -> CString
		GetPlayerHeir -> [unregistered]
		GetPlayerHeirLegacy -> [unregistered]
		GetPrimaryHeir -> [unregistered]
		GetStartDate -> [unregistered]
		GoToMenu -> void
		GoToObserver -> void
		HasLostTitles -> bool
		IsEndDateReached -> bool
		IsLineage -> bool
		IsLineageTabOpen -> bool
		IsSuccession -> bool
		IsSuccessorTabOpen -> bool
		IsTitlesTabOpen -> bool
		OpenLineageTab -> void
		OpenSuccessorTab -> void
		OpenTitlesTab -> void
		Self -> [unregistered]
		ShowLostTitles -> bool
		ToggleLostTitles -> void
	}

	SuccessionEventWindowLostTitlesItem = {
		GetHeir -> Character
		AccessSelf -> [unregistered]
		GetTitles -> [unregistered]
		Self -> [unregistered]
	}

	SuccessionLawChangeWindow = {
		GetLaws -> GuiLawGroup
		GetSelectedLaw -> GuiLaw
		AccessSelf -> [unregistered]
		Close -> void
		GetLaws -> [unregistered]
		GetLineOfSuccession -> [unregistered]
		GetOtherLaws -> [unregistered]
		GetPartitionLaws -> [unregistered]
		GetPowerfulVassals -> [unregistered]
		GetSingleHeirLaws -> [unregistered]
		GetTitles -> [unregistered]
		Self -> [unregistered]
	}

	SuggestionItem = {
		GetSuggestionType -> SuggestionType
		AccessSelf -> [unregistered]
		Dismiss -> void
		GetDescription -> CString
		GetLabel -> CString
		GetSelectionMarker -> CString
		GetSuggestionType -> [unregistered]
		GetTooltip -> CString
		OnClick -> void
		Self -> [unregistered]
	}

	SuggestionType = {
		AccessSelf -> [unregistered]
		GetIcon -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	Terrain = {
		AccessSelf -> [unregistered]
		GetEffects -> CString
		GetIcon -> [unregistered]
		GetIllustration -> [unregistered]
		GetName -> CString
		GetNameNoTooltip -> CString
		Self -> [unregistered]
	}

	TerrainToolButton = {
		AccessSelf -> [unregistered]
		IsSelected -> bool
		Self -> [unregistered]
	}

	TextureEntry = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetResolution -> CString
		GetTexture -> [unregistered]
		IsAvailable -> bool
		OpenTextureViewer -> void
		Self -> [unregistered]
	}

	TextureImporter = {
		AccessOutputEntries -> [unregistered]
		AccessSelf -> [unregistered]
		AddCustomResolution -> void
		Cancel -> void
		GetLastConversion -> CString
		GetTextures -> [unregistered]
		HasLastConversion -> bool
		Import -> void
		IsCustomResolution -> bool
		IsImporting -> bool
		Refresh -> void
		RemoveCustomResolution -> void
		Self -> [unregistered]
		SetOutputScale -> void
		SetResolution -> void
	}

	TextureList = {
		AccessSelf -> [unregistered]
		GetAutoUpdate -> bool
		GetCurrentDirectory -> CString
		GetDirectories -> [unregistered]
		GetFilterString -> CUTF8String
		GetTextures -> [unregistered]
		GetTotalSize -> uint64
		GetTotalTextureCount -> int32
		GoToParentDirectory -> void
		IsFlatView -> bool
		Self -> [unregistered]
		SetAutoUpdate -> void
		SetFilterString -> void
		SetFlatView -> void
		SortByFormat -> void
		SortByMipMaps -> void
		SortByName -> void
		SortByRefCount -> void
		SortByResolution -> void
		SortBySize -> void
		UpdateTextureList -> void
	}

	TextureListDirectory = {
		AccessSelf -> [unregistered]
		GetMipMaps -> int32
		GetName -> [unregistered]
		GetRefcount -> int32
		GetSize -> uint64
		GetSubDirectoryCount -> int32
		GetTextureCount -> int32
		Self -> [unregistered]
	}

	TextureListTexture = {
		AccessSelf -> [unregistered]
		GetFormat -> CString
		GetMipMaps -> int32
		GetName -> [unregistered]
		GetRefcount -> int32
		GetResolution -> CString
		GetSize -> uint64
		Self -> [unregistered]
	}

	TextureNodeWindow = {
		AccessSelf -> [unregistered]
		FileSelect -> void
		Filename -> CString
		Self -> [unregistered]
		Texture -> [unregistered]
	}

	TextureViewer = {
		AccessSelf -> [unregistered]
		Fit -> void
		GetAlpha -> bool
		GetBlue -> bool
		GetConstantBuffers -> [unregistered]
		GetEffect -> [unregistered]
		GetFlipV -> bool
		GetGreen -> bool
		GetPointSampling -> bool
		GetRed -> bool
		GetTexture -> [unregistered]
		GetTextureSize -> CVector2f
		GetTextureString -> CString
		GetTextureZoom -> CString
		GetToGamma -> bool
		OriginalSize -> void
		Self -> [unregistered]
		SetAlpha -> void
		SetBlue -> void
		SetFlipV -> void
		SetGreen -> void
		SetPointSampling -> void
		SetRed -> void
		SetToGamma -> void
		ShowFileList -> void
	}

	ThreadDebugTask = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetTooltip -> CString
		Self -> [unregistered]
	}

	ThreadDebugThread = {
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	ThreadDebugView = {
		AccessSelf -> [unregistered]
		Close -> void
		Refresh -> void
		Self -> [unregistered]
	}

	Timeline = {
		AccessSelf -> [unregistered]
		AnimationLength -> float
		KeyframeLayers -> [unregistered]
		Name -> [unregistered]
		Self -> [unregistered]
	}

	TimelineEventLayer = {
		AccessSelf -> [unregistered]
		IsEnabled -> bool
		IsHovered -> bool
		Keyframes -> [unregistered]
		Self -> [unregistered]
		SetHovered -> void
	}

	TimelineWidget = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
		ShouldBeVisible -> bool
	}

	Title = {
		GetCountyData -> County
		GetDeFactoLiege -> Title
		GetDeFactoTopLiege -> Title
		GetDeJureLiege -> Title
		GetFaction -> Faction
		GetHeir -> Character
		GetHolder -> Character
		GetHolderOrCountyHolder -> Character
		GetHolyOrder -> HolyOrder
		GetLessee -> Character
		GetLesseeOrHolder -> Character
		GetMercenaryCompany -> MercenaryCompany
		GetPlayerNominee -> Character
		GetPreferredCapital -> Title
		GetProvince -> Province
		GetTitleCoA -> CoatOfArms
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		CanCharacterControlVote -> [unregistered]
		CanHaveClaim -> bool
		CanPlayerCustomizeTitle -> bool
		CanUseFindVassal -> bool
		CreateHolderForTitle -> void
		CreateLocalHolderForTitle -> void
		Custom -> CString
		GetAdjective -> CString
		GetAdjectiveNoTooltip -> CString
		GetAutoGrantCountyToLocalRulerEffectDesc -> CString
		GetAutoGrantTitleToLocalRulerDesc -> CString
		GetBaseName -> [unregistered]
		GetBaseNameNoTier -> [unregistered]
		GetBaseNameNoTierNoTooltip -> [unregistered]
		GetBaseNameNoTierPossessive -> [unregistered]
		GetBaseNameNoTierPossessiveNoTooltip -> [unregistered]
		GetBaseNameNoTooltip -> [unregistered]
		GetBaseNamePossessive -> [unregistered]
		GetBaseNamePossessiveNoTooltip -> [unregistered]
		GetCOADeJureTooltip -> [unregistered]
		GetCOADefaultTooltip -> [unregistered]
		GetCanCharacterControlVoteReason -> [unregistered]
		GetClaimStateFor -> CString
		GetClickInfo -> [unregistered]
		GetCoatOfArms -> [unregistered]
		GetDeJureDriftTooltip -> CString
		GetDefinitiveName -> [unregistered]
		GetDefinitiveNameNoTooltip -> [unregistered]
		GetDefinitiveNamePossessive -> [unregistered]
		GetDefinitiveNamePossessiveNoTooltip -> [unregistered]
		GetFaction -> [unregistered]
		GetHistory -> [unregistered]
		GetHolder -> [unregistered]
		GetID -> uint32
		GetKey -> CString
		GetLaws -> [unregistered]
		GetLeaseInfo -> CString
		GetLeasedOutVassalList -> CString
		GetLineOfSuccession -> [unregistered]
		GetLineOfSuccessionDesc -> CString
		GetMercenaryCompany -> [unregistered]
		GetName -> [unregistered]
		GetNameNoTier -> [unregistered]
		GetNameNoTierNoTooltip -> [unregistered]
		GetNameNoTierPossessive -> [unregistered]
		GetNameNoTierPossessiveNoTooltip -> [unregistered]
		GetNameNoTooltip -> [unregistered]
		GetNamePossessive -> [unregistered]
		GetNamePossessiveNoTooltip -> [unregistered]
		GetNameWithUnderlying -> [unregistered]
		GetNameWithUnderlyingNoTooltip -> [unregistered]
		GetNameWithUnderlyingPossessive -> [unregistered]
		GetNameWithUnderlyingPossessiveNoTooltip -> [unregistered]
		GetPrefix -> CString
		GetPrefixNoTooltip -> CString
		GetRankConcept -> CString
		GetRealmLabel -> [unregistered]
		GetSpecialDescription -> CString
		GetTierAsName -> [unregistered]
		GetTierAsNameNoTooltip -> [unregistered]
		GetTierAsNamePossessive -> [unregistered]
		GetTierAsNamePossessiveNoTooltip -> [unregistered]
		GetTierFrame -> int32
		HasFaction -> bool
		HasHolder -> bool
		HasLaws -> bool
		HasLeasedOutVassal -> bool
		HasSuccessionOrder -> [unregistered]
		HoldingCanBeHeldBy -> bool
		IsBarony -> bool
		IsCounty -> bool
		IsCountyCapital -> bool
		IsHeldBy -> bool
		IsHolyOrder -> bool
		IsHovered -> bool
		IsLanded -> bool
		IsLeasedOut -> bool
		IsMercenaryCompany -> bool
		IsPlayerElector -> [unregistered]
		IsPrimary -> bool
		IsSelected -> bool
		IsShownInTitleView -> [unregistered]
		IsUnderTheocraticLease -> bool
		IsValid -> bool
		MakeScope -> Scope
		OnMouseEnter -> void
		OnMouseLeave -> void
		OnPlayerNominatesSuccessor -> [unregistered]
		SelectTitle -> [unregistered]
		Self -> [unregistered]
	}

	TitleAddLawWindow = {
		GetSelectedLaw -> Law
		GetTitle -> Title
		AccessSelf -> [unregistered]
		CanSelect -> bool
		Close -> void
		GetLawItems -> [unregistered]
		GetSelectTooltip -> CString
		GetSelectedLaw -> [unregistered]
		GetTitle -> [unregistered]
		HasSelectedLaw -> bool
		Select -> void
		Self -> [unregistered]
	}

	TitleCapitalMapIcon = {
		GetTitle -> Title
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	TitleCustomizationWindow = {
		GetCoatOfArmsDesigner -> CoatOfArmsDesigner
		GetTitle -> Title
		AccessSelf -> [unregistered]
		CanClickFinish -> bool
		Close -> void
		GetAdjectiveText -> CString
		GetCanClickFinishText -> CString
		GetMapColor -> CVector4f
		GetTitle -> [unregistered]
		GetTitleNameText -> CString
		OnClickFinish -> void
		OnEditAdjectiveText -> void
		OnEditTitleNameText -> void
		Self -> [unregistered]
		SetMapColor -> void
		ShowMapColorPicker -> bool
		ToggleUsesDefiniteForm -> void
		UsesDefiniteForm -> bool
	}

	TitleHistory = {
		GetCharacter -> Character
		GetDate -> Date
		AccessSelf -> [unregistered]
		GetName -> CString
		Self -> [unregistered]
	}

	TitleHistoryWindow = {
		GetTitle -> Title
		AccessSelf -> [unregistered]
		Close -> void
		GetHistory -> [unregistered]
		GetTitle -> [unregistered]
		Self -> [unregistered]
	}

	TitleItem = {
		GetTitle -> Title
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	TitleSuccessionItem = {
		GetHeir -> Character
		AccessSelf -> [unregistered]
		GetExceptionTitles -> [unregistered]
		GetHeir -> [unregistered]
		GetPartitionTitles -> [unregistered]
		Self -> [unregistered]
	}

	TitleViewWindow = {
		GetHolding -> Holding
		GetTitle -> Title
		AccessSelf -> [unregistered]
		CanAddLaws -> bool
		CanClearLaws -> bool
		CanMakePrimary -> bool
		CanTitleBeCreated -> bool
		CanTitleBeDestroyed -> bool
		CanTitleBeUsurped -> bool
		ClearLaws -> void
		ClickOnHolding -> void
		Close -> void
		CloseClaimants -> void
		CloseHistory -> void
		CreateTitle -> void
		DestroyTitle -> void
		GetClearLawsButtonTooltip -> CString
		GetCreateTitleButtonTooltip -> CString
		GetDeJureDescription -> CString
		GetDestroyTitleButtonTooltip -> CString
		GetHolding -> [unregistered]
		GetLiegeItems -> [unregistered]
		GetLineOfSuccession -> [unregistered]
		GetMinimumDeJureDetailedText -> CString
		GetMinimumDeJureText -> CString
		GetMinimumGoldText -> CString
		GetMinimumGoldTooltip -> CString
		GetNumberOfClaimants -> int32
		GetPrestigeCostText -> CString
		GetPrestigeGainText -> CString
		GetPrimaryTitleText -> CString
		GetSuccessionDescription -> CString
		GetTitle -> [unregistered]
		GetTitleAllegianceVassals -> [unregistered]
		GetTitlesOfTierText -> CString
		GetTitlesOfTierTooltip -> CString
		GetTypeOfHolding -> CString
		GetTypeOfLanded -> CString
		GetUsurpTitleButtonTooltip -> CString
		GetVassalGroupItems -> [unregistered]
		GoToHolding -> void
		HasEnoughCounties -> bool
		HasEnoughGold -> bool
		HasEnoughPrestige -> bool
		HasTitlesOfTier -> bool
		IsTitleBarony -> bool
		IsTitleCounty -> bool
		MakePrimary -> void
		OpenClaimants -> void
		OpenElection -> void
		Self -> [unregistered]
		ShowDestroy -> bool
		ShowUsurp -> bool
		ToggleClaimants -> void
		ToggleFindVassalListWindow -> void
		ToggleHistory -> void
		ToggleLaws -> void
		UsurpTitle -> void
	}

	ToastMessageHandler = {
		GetMessage -> PlayerMessageItem
		AccessSelf -> [unregistered]
		DismissMessage -> void
		GetMessage -> [unregistered]
		HasMessage -> bool
		Self -> [unregistered]
		StartDelayingMessage -> void
		StopDelayingMessage -> void
	}

	TokenParameter = {
		AccessSelf -> [unregistered]
		GetBoolValue -> bool
		GetFixedValue -> CFixedPoint
		GetIntValue -> int32
		Self -> [unregistered]
	}

	ToolDialog = {
		AccessSelf -> [unregistered]
		Buttons -> [unregistered]
		Cancel -> void
		Close -> void
		Confirm -> void
		Self -> [unregistered]
		Title -> CString
	}

	ToolDialogButton = {
		AccessSelf -> [unregistered]
		OnClick -> bool
		Self -> [unregistered]
		Text -> CString
	}

	ToolMessageDialog = {
		AccessSelf -> [unregistered]
		IsError -> bool
		IsInfo -> bool
		IsWarning -> bool
		Message -> CString
		Self -> [unregistered]
	}

	ToolProperty = {
		AccessSelf -> [unregistered]
		GetColor -> CVector4f
		GetLabel -> CString
		GetTooltip -> CString
		IsActive -> bool
		Self -> [unregistered]
	}

	ToolPropertyBool = {
		AccessSelf -> [unregistered]
		IsEnabled -> bool
		Self -> [unregistered]
		SetEnabled -> void
	}

	ToolPropertyCColor = {
		AccessSelf -> [unregistered]
		GetCColor -> CVector4f
		Self -> [unregistered]
		SetCColor -> void
	}

	ToolPropertyCString = {
		AccessSelf -> [unregistered]
		GetString -> CString
		Self -> [unregistered]
		SetString -> void
	}

	ToolPropertyColor = {
		AccessSelf -> [unregistered]
		GetColor -> CVector4f
		Self -> [unregistered]
		SetColor -> void
	}

	ToolPropertyCurve = {
		AccessSelf -> [unregistered]
		GetPreviewTexture -> [unregistered]
		HasCurveEditor -> bool
		OpenCurveEditor -> void
		ResetCurve -> void
		Self -> [unregistered]
		SetCurve -> void
		ToggleCurveEditor -> void
	}

	ToolPropertyFloat = {
		AccessSelf -> [unregistered]
		GetFloat -> float
		GetValueColor -> CVector4f
		Self -> [unregistered]
		SetFloat -> void
	}

	ToolPropertyInt = {
		AccessSelf -> [unregistered]
		GetInt -> int32
		GetValueColor -> CVector4f
		Self -> [unregistered]
		SetInt -> void
	}

	ToolPropertyList = {
		AccessSelf -> [unregistered]
		GetColor -> CVector4f
		GetLabel -> CString
		IsExpanded -> bool
		Self -> [unregistered]
		SetExpanded -> void
	}

	ToolPropertySearchList = {
		AccessSelf -> [unregistered]
		GetSelectedText -> CUTF8String
		GetSelectedValueColor -> CVector4f
		OpenSearchList -> void
		Self -> [unregistered]
	}

	ToolPropertyString = {
		AccessSelf -> [unregistered]
		GetString -> CUTF8String
		Self -> [unregistered]
		SetString -> void
	}

	ToolPropertyUint = {
		AccessSelf -> [unregistered]
		GetUint -> uint32
		GetValueColor -> CVector4f
		Self -> [unregistered]
		SetUint -> void
	}

	ToolPropertyUndoableSearchList = {
		AccessSelf -> [unregistered]
		GetSelectedText -> CUTF8String
		GetSelectedValueColor -> CVector4f
		OpenSearchList -> void
		Self -> [unregistered]
	}

	ToolPropertyVec1fPercent = {
		AccessSelf -> [unregistered]
		GetValueColor -> CVector4f
		GetX -> CString
		Self -> [unregistered]
		SetX -> void
	}

	ToolPropertyVec2f = {
		AccessSelf -> [unregistered]
		GetValueColor -> CVector4f
		GetX -> CString
		GetY -> CString
		Self -> [unregistered]
		SetX -> void
		SetY -> void
	}

	ToolPropertyVec2fPercent = {
		AccessSelf -> [unregistered]
		GetValueColor -> CVector4f
		GetX -> CString
		GetY -> CString
		Self -> [unregistered]
		SetX -> void
		SetY -> void
	}

	ToolPropertyVec2i = {
		AccessSelf -> [unregistered]
		GetValueColor -> CVector4f
		GetX -> CString
		GetY -> CString
		Self -> [unregistered]
		SetX -> void
		SetY -> void
	}

	ToolPropertyVec3f = {
		AccessSelf -> [unregistered]
		GetValueColor -> CVector4f
		GetX -> CString
		GetY -> CString
		GetZ -> CString
		Self -> [unregistered]
		SetX -> void
		SetY -> void
		SetZ -> void
	}

	ToolsPropertyRangedValue = {
		AccessSelf -> [unregistered]
		GetMax -> float
		GetMin -> float
		GetStep -> float
		GetValue -> float
		OnSetValueEnd -> void
		OnSetValueStart -> void
		Self -> [unregistered]
		SetValue -> void
	}

	ToolsSearch = {
		AccessSelf -> [unregistered]
		Results -> [unregistered]
		Search -> void
		Self -> [unregistered]
	}

	ToolsSearchResult = {
		AccessSelf -> [unregistered]
		Callback -> void
		Description -> CUTF8String
		Self -> [unregistered]
		SortScore -> int32
		Text -> CUTF8String
	}

	TooltipInfo = {
		AccessSelf -> [unregistered]
		GetTintColor -> CVector4f
		Self -> [unregistered]
	}

	TopScope = {
		AddList -> TopScope
		AddScope -> TopScope
		GetDecisionFromEventTargetFlag -> Decision
		GetRootScope -> Scope
		GetScriptValueBreakdown -> ValueBreakdown
		SetRoot -> TopScope
		event_target:actor -> Character
		event_target:agent -> Character
		event_target:duel_target -> Character
		event_target:recipient -> Character
		event_target:scheme -> Scheme
		sActivity -> Activity
		sArmy -> Army
		sC -> Character
		sCB -> ActiveCasusBelli
		sCharacter -> Character
		sCombat -> Combat
		sCombatSide -> CombatSide
		sCulture -> Culture
		sDynasty -> Dynasty
		sFaction -> Faction
		sFaith -> Faith
		sGreatHolyWar -> GreatHolyWar
		sHolyOrder -> HolyOrder
		sHouse -> DynastyHouse
		sMercenary -> MercenaryCompany
		sProvince -> Province
		sScheme -> Scheme
		sSecret -> Secret
		sTitle -> Title
		sWar -> War
		AccessSelf -> [unregistered]
		Custom -> [unregistered]
		End -> TopScope
		GetFlagName -> CString
		GetRootScope -> [unregistered]
		GetScriptValueBreakdown -> [unregistered]
		GetScriptValueDesc -> CString
		GetValue -> CFixedPoint
		ScriptValue -> CFixedPoint
		Self -> [unregistered]
		event_target:actor -> Character
		event_target:agent -> Character
		event_target:duel_target -> Character
		event_target:recipient -> Character
		sActivity -> [unregistered]
		sArmy -> [unregistered]
		sC -> [unregistered]
		sCB -> [unregistered]
		sCharacter -> [unregistered]
		sCombat -> [unregistered]
		sCombatSide -> [unregistered]
		sCulture -> [unregistered]
		sDynasty -> [unregistered]
		sFaction -> [unregistered]
		sFaith -> [unregistered]
		sGreatHolyWar -> [unregistered]
		sHolyOrder -> [unregistered]
		sHouse -> [unregistered]
		sMercenary -> [unregistered]
		sProvince -> [unregistered]
		sScheme -> [unregistered]
		sSecret -> [unregistered]
		sTitle -> [unregistered]
		sWar -> [unregistered]
	}

	TraditionGrouping = {
		AccessSelf -> [unregistered]
		GetGroupingKey -> CString
		GetGroupingName -> CString
		GetPickableInGrouping -> int32
		GetPossibleTraditions -> [unregistered]
		GetTotalInGrouping -> int32
		Self -> [unregistered]
	}

	Trait = {
		GetGroup -> TraitGroup
		AccessSelf -> [unregistered]
		GetDescription -> CString
		GetFullDescription -> CString
		GetGroup -> [unregistered]
		GetIcon -> [unregistered]
		GetIconOverlayForLocalPlayer -> [unregistered]
		GetKey -> CString
		GetModifierEffects -> CString
		GetName -> CString
		GetNameNoTooltip -> CString
		GetNameNoTooltipWithDefault -> CString
		GetRulerDesignerCost -> int32
		GetTraitCategoryLabel -> CString
		HasFlag -> bool
		HasTraitGroup -> bool
		IsGenetic -> bool
		IsInheritable -> bool
		IsPersonality -> bool
		IsTraitGroup -> bool
		IsValid -> bool
		Self -> [unregistered]
		ShowInRulerDesigner -> bool
	}

	TraitGroup = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetTraits -> [unregistered]
		Self -> [unregistered]
	}

	TraitSlot = {
		GetTrait -> Trait
		AccessSelf -> [unregistered]
		GetTrait -> [unregistered]
		Self -> [unregistered]
		StartEditing -> void
	}

	TraitSlotArray = {
		AccessSelf -> [unregistered]
		AccessSlots -> [unregistered]
		RemoveTrait -> void
		Self -> [unregistered]
		StartEditing -> void
	}

	TransferVassalWindow = {
		GetAllianceItems -> CharacterSelectionList
		GetCharacterInteractionConfirmationWindow -> CharacterInteractionConfirmationWindow
		AccessSelf -> [unregistered]
		Close -> void
		GetAllianceItems -> [unregistered]
		GetCharacterInteractionConfirmationWindow -> [unregistered]
		IsRightfulLiege -> bool
		Self -> [unregistered]
		Send -> void
	}

	TroopItem = {
		GetRegiment -> ArmyRegiment
		AccessSelf -> [unregistered]
		BuildTroopItemTooltip -> CString
		GetCount -> int32
		GetMax -> int32
		GetName -> CString
		GetRegiment -> [unregistered]
		IsKnight -> bool
		IsLevies -> bool
		IsMaa -> bool
		Self -> [unregistered]
	}

	Tutorial = {
		AccessSelf -> [unregistered]
		CanReplayVoiceover -> bool
		GetReplayVoiceoverTooltip -> CString
		GetStepHeaderInfo -> CString
		GetStepInstructions -> CString
		GetStepName -> CString
		GetStepText -> CString
		GetTransitionText -> CString
		GetTransitionTooltip -> CString
		HasStepInstructions -> bool
		HasTransition -> bool
		IsTransitionEnabled -> bool
		OnClickTransition -> void
		ReplayVoiceover -> void
		Self -> [unregistered]
		ShouldBeVisible -> bool
	}

	TutorialWindow = {
		AccessSelf -> [unregistered]
		Close -> void
		Self -> [unregistered]
	}

	Tweaker = {
		AccessSelf -> [unregistered]
		GetBool -> bool
		GetColor -> CVector4f
		GetGuiName -> CString
		GetTitle -> CString
		GetValue -> CString
		Self -> [unregistered]
	}

	Type = {
		AccessSelf -> [unregistered]
		Delete -> void
		GetAssetName -> CString
		GetEntityIndex -> CVector2i
		GetInstanceCount -> int32
		GetKey -> CString
		GetLayer -> CString
		GetLayerIndex -> CVector2i
		GetMeshIndex -> CVector2i
		GetTypeIndex -> CVector2i
		IsHidden -> bool
		IsLocked -> bool
		IsSelected -> bool
		Rename -> [unregistered]
		Self -> [unregistered]
		SetClampToWaterLevel -> void
		SetEntityFromIndex -> void
		SetLayerFromIndex -> void
		SetMeshFromIndex -> void
		SetRenderUnderwater -> void
		SetTypeFromIndex -> void
		ShouldClampToWaterLevel -> bool
		ShouldRenderUnderwater -> bool
	}

	UnitItem = {
		GetArmy -> Army
		GetOwner -> Character
		GetUnitPortraitCharacter -> Character
		AccessSelf -> [unregistered]
		GetArmy -> [unregistered]
		GetBackgroundFrame -> int32
		GetColor -> CVector4f
		GetCombatStrength -> CString
		GetName -> CString
		GetOutlinerWarning -> CString
		GetOwner -> [unregistered]
		GetQualityLevel -> int32
		GetStatusDescription -> CString
		GetStatusFrame -> int32
		GetSupplyStateFrame -> int32
		GetTooltip -> CString
		GetTooltipHeader -> CString
		GetUnitPortraitCharacter -> [unregistered]
		HasDisembarkPenalty -> bool
		HasOutlinerWarning -> bool
		IsGathering -> bool
		IsMovementLocked -> bool
		IsOnlyHiredTroops -> bool
		IsRetreating -> bool
		IsRulerCommander -> bool
		IsSelected -> bool
		IsSelectedOnArmyWindow -> bool
		IsUnitItemAlly -> bool
		IsUnitItemEnemy -> bool
		IsUnitItemHostile -> bool
		IsUnitItemMine -> bool
		IsUnitItemNeutral -> bool
		PanToUnit -> void
		SelectAndPanUnit -> void
		SelectUnit -> void
		Self -> [unregistered]
		ShouldBeHighlighted -> bool
		ShouldBeShown -> bool
		ShouldShowGatheringProgress -> bool
		ShowSupplyIcon -> bool
		ShowSupplyTrend -> bool
	}

	UnitMapIcon = {
		GetDisplayedUnitItem -> UnitItem
		AccessSelf -> [unregistered]
		GetDisplayedUnitItem -> [unregistered]
		GetShownCount -> int32
		GetTooltip -> CString
		GetUnitItems -> [unregistered]
		OnClick -> void
		OnClickArmy -> void
		OnClickArmyGroup -> void
		Self -> [unregistered]
	}

	UnitMapIconHandler = {
		GetUnitIcon -> UnitMapIcon
		AccessSelf -> [unregistered]
		GetUnitIcon -> [unregistered]
		Self -> [unregistered]
	}

	UserDataNode = {
		AccessSelf -> [unregistered]
		Configure -> void
		Id -> CString
		Label -> CString
		Self -> [unregistered]
		TypeName -> [unregistered]
	}

	ValueBreakdown = {
		AccessSelf -> [unregistered]
		GetFixedPointValue -> CFixedPoint
		GetName -> CString
		GetSubValues -> [unregistered]
		GetValue -> CString
		HasTooltip -> bool
		Self -> [unregistered]
		ShouldShowValue -> bool
	}

	VariableEntry = {
		AccessScopeEditor -> ScopeObjectEditor
		AccessSelf -> [unregistered]
		Delete -> void
		GetName -> CString
		Self -> [unregistered]
		SetName -> void
	}

	VariableInfo = {
		AccessSelf -> [unregistered]
		GetExpirationDate -> CString
		GetName -> CString
		GetValue -> CString
		HasExpirationDate -> bool
		Self -> [unregistered]
	}

	VariableInspectorEntry = {
		AccessVariable -> VariableInspectorVariable
		AccessSelf -> [unregistered]
		Delete -> void
		Self -> [unregistered]
	}

	VariableInspectorPlugin = {
		AccessSetupVariable -> VariableInspectorVariable
		AccessSelf -> [unregistered]
		AccessVariables -> [unregistered]
		AddVariable -> void
		GetNumVariables -> int32
		Self -> [unregistered]
	}

	VariableInspectorVariable = {
		AccessScopeEditor -> ScopeObjectEditor
		AccessSelf -> [unregistered]
		GetName -> CString
		GetRemainingTicks -> int32
		Self -> [unregistered]
		SetName -> void
		SetRemainingTicks -> void
	}

	VariableList = {
		AccessEntries -> [unregistered]
		AccessSelf -> [unregistered]
		Delete -> void
		GetName -> CString
		GetSize -> int32
		Self -> [unregistered]
	}

	VariableListEntry = {
		AccessScopeEditor -> ScopeObjectEditor
		AccessSelf -> [unregistered]
		Delete -> void
		Self -> [unregistered]
	}

	VariableListInspectorPlugin = {
		AccessListStore -> VariableListStore
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	VariableListStore = {
		AccessNewEntryEditor -> ScopeObjectEditor
		AccessSelf -> [unregistered]
		AccessVariableLists -> [unregistered]
		AddNewEntry -> void
		GetNewVariableListName -> CString
		GetNumVariableLists -> int32
		Self -> [unregistered]
		SetNewVariableListName -> void
	}

	VariableStore = {
		AccessNewEntryEditor -> ScopeObjectEditor
		AccessSelf -> [unregistered]
		AccessVariables -> [unregistered]
		AddNewEntry -> void
		GetNewVariableName -> CString
		GetNumVariables -> int32
		Self -> [unregistered]
		SetNewVariableName -> void
	}

	VariableSystem = {
		AccessSelf -> [unregistered]
		Clear -> void
		ClearIf -> void
		Exists -> bool
		Get -> CString
		HasValue -> bool
		Self -> [unregistered]
		Set -> void
		SetOrToggle -> void
		Toggle -> bool
	}

	VassalContract = {
		GetLiege -> Character
		GetTitleAllegiance -> Title
		GetVassal -> Character
		AccessSelf -> [unregistered]
		GetLevyRatioForLiege -> CFixedPoint
		GetLiege -> [unregistered]
		GetMinLevyRatioForLiege -> CFixedPoint
		GetMinTaxRatioForLiege -> CFixedPoint
		GetObligationLevel -> uint8
		GetObligationName -> CString
		GetShortObligationLevelNameWithHighlightFor -> CString
		GetTaxRatioForLiege -> CFixedPoint
		GetTitleAllegiance -> [unregistered]
		GetVassal -> [unregistered]
		GetVassalOpinionModification -> int32
		IsContractDefault -> bool
		IsDefaultObligationLevel -> bool
		IsRightfulLiege -> bool
		Self -> [unregistered]
		UsesObligationLevels -> bool
	}

	VassalContractType = {
		AccessSelf -> [unregistered]
		GetName -> CString
		GetObligationLevelName -> CString
		GetObligationLevelNameNoTooltip -> CString
		GetObligationLevelNameShort -> CString
		GetObligationLevelNameShortNoTooltip -> CString
		GetObligationName -> CString
		GetObligationNameNoTooltip -> CString
		GetObligationNameShort -> CString
		GetObligationNameShortNoTooltip -> CString
		Self -> [unregistered]
	}

	VassalConversionWindow = {
		GetVassalList -> CharacterSelectionList
		AccessSelf -> [unregistered]
		GetNumberOfVassals -> int32
		GetNumberOfVassalsToConvert -> int32
		GetVassalList -> [unregistered]
		Self -> [unregistered]
	}

	War = {
		GetActiveCB -> ActiveCasusBelli
		GetActiveCasusBelli -> ActiveCasusBelli
		GetPrimaryPlayerEnemy -> Character
		GetStartDate -> Date
		MakeScope -> Scope
		AccessSelf -> [unregistered]
		Custom -> CString
		GetActiveCB -> [unregistered]
		GetActiveCasusBelli -> [unregistered]
		GetID -> uint32
		GetName -> CString
		GetPrimaryPlayerEnemy -> [unregistered]
		GetStartDate -> [unregistered]
		IsValid -> bool
		MakeScope -> Scope
		Self -> [unregistered]
	}

	WarAllyItem = {
		GetCharacter -> Character
		AccessSelf -> [unregistered]
		GetAllianceReason -> CString
		GetCharacter -> [unregistered]
		Self -> [unregistered]
	}

	WarDeclaredOverviewWindow = {
		GetMainAttacker -> Character
		GetMilitaryStrengthInfo -> GuiMilitaryStrength
		GetWar -> War
		AccessSelf -> [unregistered]
		Close -> void
		GetAttackers -> [unregistered]
		GetFlavorText -> CString
		GetMainAttacker -> [unregistered]
		GetWar -> [unregistered]
		OpenWarView -> void
		Self -> [unregistered]
	}

	WarInfo = {
		GetWar -> War
		AccessSelf -> [unregistered]
		GetWar -> [unregistered]
		HasAttacker -> bool
		HasDefender -> bool
		IsAttackerActive -> bool
		IsDefenderActive -> bool
		Self -> [unregistered]
		ToggleAttacker -> void
		ToggleDefender -> void
	}

	WarItem = {
		GetWar -> War
		AccessSelf -> [unregistered]
		CanEnforceVictory -> bool
		GetTooltip -> CString
		GetWar -> [unregistered]
		GetWarScoreFraction -> CFixedPoint
		IsPlayerParticipant -> bool
		OnClick -> void
		Self -> [unregistered]
	}

	WarOverviewWindow = {
		GetLeftSideComposition -> ArmyComposition
		GetLeftSideLeaderItem -> WarParticipantItem
		GetLeftSideMainParticipant -> WarParticipantItem
		GetMilitaryStrengthInfo -> GuiMilitaryStrength
		GetPlayer -> Character
		GetPlayerParticipantItem -> WarParticipantItem
		GetRightSideComposition -> ArmyComposition
		GetRightSideLeaderItem -> WarParticipantItem
		GetRightSideMainParticipant -> WarParticipantItem
		GetWar -> War
		AccessSelf -> [unregistered]
		CanSend -> bool
		CanSendVictoryDemand -> bool
		Close -> void
		ClosePeaceTerms -> void
		GetAnswer -> CString
		GetAnswerReason -> CString
		GetAnswerScore -> float
		GetBattlesWarScore -> CString
		GetBattlesWarScoreTooltip -> CString
		GetBeneficiaryName -> CString
		GetContributionRank -> int32
		GetCurrentTabEffectsDescription -> CString
		GetCurrentTabEffectsLabel -> CString
		GetCurrentTabMainOutputDescription -> CString
		GetImprisonmentWarScore -> CString
		GetImprisonmentWarScoreTooltip -> CString
		GetLeftSideAlliesHeader -> CString
		GetLeftSideHeader -> CString
		GetLeftSideMainParticipantItems -> [unregistered]
		GetLeftSideParticipantItems -> [unregistered]
		GetOccupationWarScore -> CString
		GetOccupationWarScoreTooltip -> CString
		GetProgressbarWarScore -> float
		GetRightSideAlliesHeader -> CString
		GetRightSideHeader -> CString
		GetRightSideMainParticipantItems -> [unregistered]
		GetRightSideParticipantItems -> [unregistered]
		GetSendButtonLabel -> CString
		GetSendButtonTooltip -> CString
		GetTickingWarScore -> CString
		GetTickingWarScoreTooltip -> CString
		GetWarDuration -> CString
		GetWarScore -> CString
		GetWarScoreTooltip -> CString
		IsBattlesWarScoreCapped -> bool
		IsEffectsTabDefeat -> bool
		IsEffectsTabVictory -> bool
		IsEffectsTabWhitePeace -> bool
		IsGreatHolyWar -> bool
		IsLeftSideAttacker -> bool
		IsPeaceTermsOpen -> bool
		IsPlayerInvolved -> bool
		IsPlayerParticipant -> bool
		IsPlayerPrimaryParticipant -> bool
		NeedsAnswer -> bool
		Self -> [unregistered]
		Send -> void
		SetEffectsTabDefeat -> void
		SetEffectsTabVictory -> void
		SetEffectsTabWhitePeace -> void
		ShowBeneficiary -> bool
		ShowContributionRank -> bool
	}

	WarParticipantItem = {
		GetCharacter -> Character
		GetComposition -> ArmyComposition
		AccessSelf -> [unregistered]
		GetContribution -> int32
		GetContributionPercentage -> int32
		GetContributionTooltip -> CString
		GetLeaderTooltip -> CString
		GetMilitaryStrength -> CFixedPoint
		GetParticipantTooltip -> CString
		IsAttacker -> bool
		Self -> [unregistered]
		ShowContribution -> bool
	}

	WarResultsWindow = {
		GetBeneficiary -> Character
		GetEndDate -> Date
		GetOpponent -> Character
		GetPlayerSide -> Character
		GetStartDate -> Date
		AccessSelf -> [unregistered]
		Close -> void
		Dismiss -> void
		GetBeneficiary -> [unregistered]
		GetContributionScore -> CString
		GetContributionShare -> CString
		GetEndDate -> [unregistered]
		GetGHWRank -> CString
		GetGHWScore -> CString
		GetGHWShare -> CString
		GetMessage -> CString
		GetOpponent -> [unregistered]
		GetOpponentAnimationState -> CString
		GetOutcome -> CString
		GetPeaceDescription -> CString
		GetPlayerSide -> [unregistered]
		GetSimpleDescription -> CString
		GetStartDate -> [unregistered]
		GetWarName -> CString
		HasBeneficiary -> bool
		HasGWHShare -> bool
		IsContributionShareSetup -> bool
		IsEnemyWon -> bool
		IsInvalidated -> bool
		IsNoWinner -> bool
		IsPlayerAttacker -> bool
		IsPlayerWon -> bool
		IsSecondaryParticipant -> bool
		IsWhitePeace -> bool
		Self -> [unregistered]
	}

	WatchWindow = {
		AccessSelf -> [unregistered]
		Close -> void
		GetAttackerItems -> [unregistered]
		GetDefenderItems -> [unregistered]
		GetObjectName -> CString
		Self -> [unregistered]
		ShouldShowParticipants -> bool
		ShouldShowStories -> bool
		ToggleChangeOnPause -> void
		WillPauseOnChange -> bool
	}

	WidgetEntry = {
		AccessSelf -> [unregistered]
		GetName -> CString
		OpenAddPropertiesMenu -> void
		Self -> [unregistered]
	}

	bool = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	double = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	float = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

	int16 = {
		AccessSelf -> [unregistered]
		GetInt -> [unregistered]
		Self -> [unregistered]
	}

	int32 = {
		AccessSelf -> [unregistered]
		GetInt -> [unregistered]
		Self -> [unregistered]
	}

	int64 = {
		AccessSelf -> [unregistered]
		GetInt -> [unregistered]
		Self -> [unregistered]
	}

	int8 = {
		AccessSelf -> [unregistered]
		GetInt -> [unregistered]
		Self -> [unregistered]
	}

	uint16 = {
		AccessSelf -> [unregistered]
		GetUint -> [unregistered]
		Self -> [unregistered]
	}

	uint32 = {
		AccessSelf -> [unregistered]
		GetUint -> [unregistered]
		Self -> [unregistered]
	}

	uint64 = {
		AccessSelf -> [unregistered]
		GetUint -> [unregistered]
		Self -> [unregistered]
	}

	uint8 = {
		AccessSelf -> [unregistered]
		GetUint -> [unregistered]
		Self -> [unregistered]
	}

	void = {
		AccessSelf -> [unregistered]
		Self -> [unregistered]
	}

}

